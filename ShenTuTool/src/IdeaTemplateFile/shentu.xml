<!--
 Created by ken.
 DateTime: 2019/12/6 16:00
 Usage: contains all API about shentu's server
 -->
<templateSet group="shentu">
    <template name="lualib:Print" value="lualib:Print($VAR1$)&#10;$END$" description="Print=&quot;void  Print(string  strMsg) 打印信息日志.  参数:strMsg 日志内容., 返回:无返回值. 备注:无 警告:大量记录日志会对服务器性能带来些许影响. 参考:Print,Debug,Warn,Error,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Debug" value="lualib:Debug($VAR1$)&#10;$END$" description="Debug=&quot;void  Debug(string  strMsg) 打印调试日志.  参数:strMsg 日志内容., 返回:无返回值. 备注:无 警告:大量记录日志会对服务器性能带来些许影响. 参考:Print,Debug,Warn,Error,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Warn" value="lualib:Warn($VAR1$)&#10;$END$" description="Warn=&quot;void  Warn(string  strMsg) 打印警告日志.  参数:strMsg 日志内容., 返回:无返回值. 备注:无 警告:大量记录日志会对服务器性能带来些许影响. 参考:Print,Debug,Warn,Error,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Error" value="lualib:Error($VAR1$)&#10;$END$" description="Error=&quot;void  Error(string  strMsg) 打印错误日志.  参数:strMsg 日志内容., 返回:无返回值. 备注:无 警告:大量记录日志会对服务器性能带来些许影响. 参考:Print,Debug,Warn,Error,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Time2Str" value="lualib:Time2Str($VAR1$)&#10;$END$" description="Time2Str=&quot;string  Time2Str(string  strFmt,uint32  dwTimes) 将数值型时间转换成字符串时间.  参数:strFmt 时间格式:Y-m-d H:M:S或Y-m-d.,dwTimes 时间值,单位:秒., 返回:字符串时间. 备注:times = 0时，将当前时间转为时间字符串。       Str2Time时间格式命令列在下面，它们是区分大小写的。       %a 星期几的简写   %A 星期几的全称   %b 月份的简写   %B 月份的全称   %c 标准的日期的时间串   %d 十进制表示的每月的第几天   %H 24小时制的小时   %I 12小时制的小时   %j 十进制表示的每年的第几天   %m 十进制表示的月份   %M 十进制表示的分钟数   %p 本地的AM或PM的等价显示   %S 十进制的秒数         %U 第年的第几周，把星期日作为第一天（值从0到53）   %w 十进制表示的星期几（值从0到6，星期天为0）   %W 每年的第几周，把星期一做为第一天（值从0到53）   %x 标准的日期串   %X 标准的时间串   %y 不带世纪的十进制年份（值从0到99）   %Y 带世纪部分的十制年份   %z，%Z 时区名称，如果不能得到时区名称则返回空字符。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetAllDays" value="lualib:GetAllDays($VAR1$)&#10;$END$" description="GetAllDays=&quot;uint32  GetAllDays(uint32  dwTimes) 取得1970年1月1日0时0分0到现在经过的天数.  参数:dwTimes 时间值,单位:秒.0 = 现在时间., 返回:天数. 备注:times = 0时，使用当前时间  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetAllWeeks" value="lualib:GetAllWeeks($VAR1$)&#10;$END$" description="GetAllWeeks=&quot;uint32  GetAllWeeks(uint32  dwTimes) 取得1970年1月1日0时0分0到现在经过的周数.  参数:dwTimes 时间值,单位:秒.0 = 现在时间., 返回:周数. 备注:times = 0时，使用当前时间  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetAllMonths" value="lualib:GetAllMonths($VAR1$)&#10;$END$" description="GetAllMonths=&quot;uint32  GetAllMonths(uint32  dwTimes) 取得1970年1月1日0时0分0到现在经过的月数.  参数:dwTimes 时间值,单位:秒.0 = 现在时间., 返回:月数. 备注:times = 0时，使用当前时间  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetAllYears" value="lualib:GetAllYears($VAR1$)&#10;$END$" description="GetAllYears=&quot;uint32  GetAllYears(uint32  dwTimes) 取得1970年1月1日0时0分0到现在经过的年数.  参数:dwTimes 时间值,单位:秒.0 = 现在时间., 返回:年数. 备注:times = 0时，使用当前时间  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetAllTime" value="lualib:GetAllTime($VAR1$)&#10;$END$" description="GetAllTime=&quot;uint32  GetAllTime(void  ) 取得1970年1月1日0时0分0到现在经过的秒数.  参数: , 返回:秒数. 备注:无  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetYear" value="lualib:GetYear($VAR1$)&#10;$END$" description="GetYear=&quot;uint32  GetYear(uint32  dwTimes) 取得指定时间值的年.  参数:dwTimes 时间值,单位:秒.0 = 现在时间., 返回:年,范围:[1900 - ~]. 备注:times = 0 取现在时间  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetMonth" value="lualib:GetMonth($VAR1$)&#10;$END$" description="GetMonth=&quot;uint32  GetMonth(uint32  dwTimes) 取得指定时间值的月.  参数:dwTimes 时间值,单位:秒.0 = 现在时间., 返回:月,范围: [1 - 12]. 备注:times = 0 取现在时间  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetDay" value="lualib:GetDay($VAR1$)&#10;$END$" description="GetDay=&quot;uint32  GetDay(uint32  dwTimes) 取得指定时间值的天.  参数:dwTimes 时间值,单位:秒.0 = 现在时间., 返回:天,范围: [1 - 31]. 备注:times = 0 取现在时间  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetWeek" value="lualib:GetWeek($VAR1$)&#10;$END$" description="GetWeek=&quot;uint32  GetWeek(uint32  dwTimes) 取得指定时间值的周.  参数:dwTimes 时间值,单位:秒.0 = 现在时间., 返回:周,范围: [0 - 6]. 备注:times = 0 取现在时间，星期天代表0  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetInt" value="lualib:SetInt($VAR1$)&#10;$END$" description="SetInt=&quot;bool  SetInt(string  strObject,string  strKey,int32  iValue) 在对象实体上存储整型数值变量.  参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品、地图、系统.,strKey 变量名,变量名不能以'__'开头(系统用).,iValue 变量值., 返回:成功或失败. 备注:对象包括：玩家、NPC、怪物、道具、地图 数值型变量只能存储32位数值；   当以'0'作为对象时，表示系统临时变量，不存入数据库，服务器重启后清零；   若要删除该变量，只需将其设置为0即可；   若想设置系统的数据库变量，请参见SetDBNum；   若想设置玩家、物品的临时变量，请参见SetTempInt。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetInt" value="lualib:GetInt($VAR1$)&#10;$END$" description="GetInt=&quot;int32  GetInt(string  strObject,string  strKey) 取得对象实体上存储的整型数值变量.  参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品、地图、系统.,strKey 变量名,变量名不能以'__'开头(系统用)., 返回:变量的值,如果变量不存在返回0. 备注:对象包括：玩家、NPC、怪物、道具、地图 当对象或对象的变量不存在时，返回0  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetStr" value="lualib:SetStr($VAR1$)&#10;$END$" description="SetStr=&quot;bool  SetStr(string  strObject,string  strKey,string  strValue) 在对象实体上存储字符型变量.  参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品、地图、系统.,strKey 变量名,变量名不能以'__'开头(系统用).,strValue 变量值., 返回:成功或失败. 备注:对象包括：玩家、NPC、怪物、道具、地图 字符型变量只能存储字符串，理论上字符串可以达到无限长，但是服务器网络协议包一般只能发送长度为255的字符串，所以请尽量不要太长；   当以'0'作为对象时，表示系统临时变量，不存入数据库，服务器重启后清零；   若要删除该变量，只需将其设置为ldquo;rdquo;即可；   若想设置系统的数据库变量，请参见SetDBStr；   若想设置玩家、物品的临时变量，请参见SetTempStr。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetStr" value="lualib:GetStr($VAR1$)&#10;$END$" description="GetStr=&quot;string  GetStr(string  strObject,string  strKey) 取得对象实体上存储的字符型变量.  参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品、地图、系统.,strKey 变量名,变量名不能以'__'开头(系统用)., 返回:变量的值,如果变量不存在返回''. 备注:对象包括：玩家、NPC、怪物、道具、地图 当对象或对象的变量不存在时，返回''  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:NotifyVar" value="lualib:NotifyVar($VAR1$)&#10;$END$" description="NotifyVar=&quot;void  NotifyVar(string  strObject,string  strKey) 向客户端发送变量通知.  参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品.,strKey 变量名., 返回:无返回值. 备注:需要客户端解析，开发用到的接口，B用户用不到；   主要用在玩家、物品的变量设置后发送给客户端，以更新客户端人物面板或者物品的tips所使用的变量值。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendTopMsg" value="lualib:SysMsg_SendTopMsg($VAR1$)&#10;$END$" description="SysMsg_SendTopMsg=&quot;void  SysMsg_SendTopMsg(uint8  byCount,string  strMsg) 发送客户端顶部消息.  参数:byCount 消息滚动次数.,strMsg 消息内容., 返回:无返回值. 备注:消息长度不能超过255个字节  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendCenterMsg" value="lualib:SysMsg_SendCenterMsg($VAR1$)&#10;$END$" description="SysMsg_SendCenterMsg=&quot;void  SysMsg_SendCenterMsg(uint8  byType,string  strMsg,string  strPlayer) 发送客户端中部消息.  参数:byType 消息类型,0 = 自己 1 = 所有人 2 = 行会 3 = 队伍 4 = 当前.,strMsg 消息内容.,strPlayer 玩家的GUID.当消息类型为组队或行会时,该GUID必须为队伍或行会中的成员.否则默认填''., 返回:无返回值. 备注:发送客户端中部消息，通过type控制消息类型  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendBroadcastMsg" value="lualib:SysMsg_SendBroadcastMsg($VAR1$)&#10;$END$" description="SysMsg_SendBroadcastMsg=&quot;void  SysMsg_SendBroadcastMsg(string  strMsg,string  strName) 发送客户端底部广播消息.  参数:strMsg 消息内容.,strName 广播标题., 返回:无返回值. 备注:消息长度不能超过255个字节  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendRoleTalk" value="lualib:SysMsg_SendRoleTalk($VAR1$)&#10;$END$" description="SysMsg_SendRoleTalk=&quot;bool  SysMsg_SendRoleTalk(string  strRole,string  strMsg) 发送角色当前说话通知.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strMsg 消息内容., 返回:成功或失败. 备注:role_guid可以是NPC，怪物，道具（甚于是任意对象，前提是客户端能够支持） 消息长度不能超过255个字节  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendGuildMsg" value="lualib:SysMsg_SendGuildMsg($VAR1$)&#10;$END$" description="SysMsg_SendGuildMsg=&quot;bool  SysMsg_SendGuildMsg(string  strFamily,string  strMsg) 发送客户端底部公会消息.  参数:strFamily 行会的GUID.,strMsg 消息内容., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendMapMsg" value="lualib:SysMsg_SendMapMsg($VAR1$)&#10;$END$" description="SysMsg_SendMapMsg=&quot;bool  SysMsg_SendMapMsg(string  strMap,string  strMsg) 发送客户端底部地图消息.  参数:strMap 地图的GUID.,strMsg 消息内容., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:InputDlg" value="lualib:InputDlg($VAR1$)&#10;$END$" description="InputDlg=&quot;bool  InputDlg(string  strPlayer,uint32  dwDlgID,string  strContent,uint32  dwTimeOut,uint8  byMaxLen,string  strCallBack,string  strParam) 通知客户端显示输入框.  参数:strPlayer 玩家的GUID.,dwDlgID 输入框ID,任填.同GUID下ID必须唯一.,strContent 输入框内容.,dwTimeOut 输入框超时时间,单位:秒.,byMaxLen 输入框最大输入长度.,strCallBack 输入框回调函数名字.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回., 返回:成功或失败. 备注:param：由脚本作者来维护，当回调时，服务器自动将param作为参数传回 ，如果希望将多个参数传入，则可以以#39;##39;等分割符链接多个参数为一个字符串作为param，然后再callback函数中调用lualib:StrSplit(param, '#')解析出多个参数 回调函数格式： void callback(UINT32 dlg_id, const std::stringamp; player, const std::stringamp; input_str, const std::stringamp; param)  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MsgBox" value="lualib:MsgBox($VAR1$)&#10;$END$" description="MsgBox=&quot;void  MsgBox(string  strPlayer,string  strContent) 通知客户端显示消息框.  参数:strPlayer 玩家的GUID.,strContent 消息框内容., 返回:无返回值. 备注:content：默认添加确定按钮  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:WebBox" value="lualib:WebBox($VAR1$)&#10;$END$" description="WebBox=&quot;bool  WebBox(string  player,string  url) 发送显示Web页面框通知 参数:player 玩家的GUID,url 弹出的IE框所使用的URL地址, 返回:忽略  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendBroadcastColor" value="lualib:SysMsg_SendBroadcastColor($VAR1$)&#10;$END$" description="SysMsg_SendBroadcastColor=&quot;void  SysMsg_SendBroadcastColor(string  strMsg,string  strName,int32  iForeground,int32  iBackground) 发送客户端底部广播消息.  参数:strMsg 消息内容.,strName 广播标题.,iForeground 前景颜色.,iBackground 背景颜色., 返回:无返回值. 备注://黄 = 1 //红 = 2 //粉色 = 3 //蓝色 = 4 //青色(浅蓝) = 5 //深粉色 = 6 //白色 = 7 //深蓝色 = 8 //亮蓝色 = 9 //深黄色 = 10 //无色透明 = 11 //黑色 = 12 //绿色 = 13  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendBottomColor" value="lualib:SysMsg_SendBottomColor($VAR1$)&#10;$END$" description="SysMsg_SendBottomColor=&quot;void  SysMsg_SendBottomColor(string  strPlayer,string  strMsg,int32  iForeground,int32  iBackground) 发送客户端底部消息.  参数:strPlayer 玩家的GUID.,strMsg 消息内容.,iForeground 前景颜色.,iBackground 背景颜色., 返回:无返回值. 备注://黄 = 1 //红 = 2 //粉色 = 3 //蓝色 = 4 //青色(浅蓝) = 5 //深粉色 = 6 //白色 = 7 //深蓝色 = 8 //亮蓝色 = 9 //深黄色 = 10 //无色透明 = 11 //黑色 = 12 //绿色 = 13  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendTopColor" value="lualib:SysMsg_SendTopColor($VAR1$)&#10;$END$" description="SysMsg_SendTopColor=&quot;void  SysMsg_SendTopColor(uint8  byCount,string  strMsg,int32  iForeground,int32  iBackground) 发送客户端顶部广播消息.  参数:byCount 消息滚动次数.,strMsg 消息内容.,iForeground 前景颜色.,iBackground 背景颜色., 返回:无返回值. 备注://黄 = 1 //红 = 2 //粉色 = 3 //蓝色 = 4 //青色(浅蓝) = 5 //深粉色 = 6 //白色 = 7 //深蓝色 = 8 //亮蓝色 = 9 //深黄色 = 10 //无色透明 = 11 //黑色 = 12 //绿色 = 13  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Name" value="lualib:Name($VAR1$)&#10;$END$" description="Name=&quot;string  Name(string  strObject) 根据GUID取得Name.  参数:strObject 对象的GUID., 返回:对象的Name,如果对象不存在返回''. 备注:对象可以是角色、NPC、怪物、道具、地图、行会 参考:KeyName,Name,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:KeyName" value="lualib:KeyName($VAR1$)&#10;$END$" description="KeyName=&quot;string  KeyName(string  strObject) 根据GUID取得KeyName.  参数:strObject 对象的GUID., 返回:对象的KeyName,如果对象不存在返回''. 备注:对象可以是角色、NPC、怪物、道具、地图、行会 参考:KeyName,Name,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:X" value="lualib:X($VAR1$)&#10;$END$" description="X=&quot;uint16  X(string  strObject) 取得对象的X坐标.  参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品., 返回:X坐标. 备注:对象可以是角色、NPC、怪物、道具 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Y" value="lualib:Y($VAR1$)&#10;$END$" description="Y=&quot;uint16  Y(string  strObject) 取得对象的Y坐标.  参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品., 返回:Y坐标. 备注:对象可以是角色、NPC、怪物、道具 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Distance" value="lualib:Distance($VAR1$)&#10;$END$" description="Distance=&quot;uint16  Distance(string  strObject1,string  strObject2) 取得对象间的距离.  参数:strObject1 对象的GUID,可以是玩家、怪物、NPC、物品.,strObject2 对象的GUID,可以是玩家、怪物、NPC、物品., 返回:返回对象间的距离,如果对象不存在或不在同一张地图上返回65535. 备注:对象可以是角色、NPC、怪物、道具  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MapGuid" value="lualib:MapGuid($VAR1$)&#10;$END$" description="MapGuid=&quot;string  MapGuid(string  strObject) 取得对象当前地图的GUID.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品., 返回:对象当前地图的GUID,出错返回''. 备注:对象可以是角色、NPC、怪物、道具  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddBuff" value="lualib:AddBuff($VAR1$)&#10;$END$" description="AddBuff=&quot;bool  AddBuff(string  strRole,string  strBuffKey,uint32  dwTimes) 给角色添加BUFF.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒., 返回:成功或失败. 备注:role可以为玩家、NPC、怪物 警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddBuff2" value="lualib:AddBuff2($VAR1$)&#10;$END$" description="AddBuff2=&quot;bool  AddBuff2(string  strRole,string  strHost,string  strBuffKey,string  strSkillKey,uint32  dwTimes,int32  iAttr1) 给角色添加BUFF.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strHost 对象的BUFF,代表BUFF由谁添加的.,strBuffKey BUFF的KeyName.,strSkillKey BUFF对应的技能KeyName.,dwTimes BUFF的持继时间,单位为秒.,iAttr1 BUFF的实例属性1,该属性可以由脚本改写.其它属性直接从配置中读取,脚本无法改写., 返回:成功或失败. 警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddBuffEx" value="lualib:AddBuffEx($VAR1$)&#10;$END$" description="AddBuffEx=&quot;bool  AddBuffEx(string  strRole,string  strBuffKey,uint32  dwTimes,int  iAttr1) 给角色添加BUFF.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒.,iAttr1 BUFF的实例属性1,该属性可以由脚本改写.其它属性直接从配置中读取,脚本无法改写., 返回:成功或失败. 备注:UINT32 times;  设为0时，使用配置表里设置的时间  返之，该值为BUFF持续时间   这里设置的Att1值会与BUFF模板表中的Att1值相加 警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DelBuff" value="lualib:DelBuff($VAR1$)&#10;$END$" description="DelBuff=&quot;bool  DelBuff(string  strRole,string  strBuffKey) 删除角色BUFF.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName., 返回:成功或失败. 备注:role可以为玩家、NPC、怪物  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasBuff" value="lualib:HasBuff($VAR1$)&#10;$END$" description="HasBuff=&quot;bool  HasBuff(string  strRole,string  strBuffKey) 判断角色是否拥有BUFF.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName., 返回:成功或失败. 备注:role可以为玩家、NPC、怪物  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Kill" value="lualib:Kill($VAR1$)&#10;$END$" description="Kill=&quot;bool  Kill(string  strRole) 立即杀死角色.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:成功或失败. 备注:role可以为玩家、怪物（目前NPC没有死亡概念）   如果怪物为重生怪，Kill之后会重生  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddSkill" value="lualib:AddSkill($VAR1$)&#10;$END$" description="AddSkill=&quot;bool  AddSkill(string  strRole,string  strSkillKey) 给角色添加技能.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strSkillKey 技能的KeyName., 返回:成功或失败. 备注:role可以为玩家、怪物（目前NPC没有攻击的概念）当skill_key为''时，添加本职业所有的技能（玩家）  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasSkill" value="lualib:HasSkill($VAR1$)&#10;$END$" description="HasSkill=&quot;bool  HasSkill(string  strRole,string  strSkillKey,bool  bLinkage) 判断角色是否拥有技能.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strSkillKey 技能的KeyName.,bLinkage 是否判断技能链., 返回:成功或失败. 备注:role可以为玩家、怪物（目前NPC没有攻击的概念） link为真时，1级剑术心法同4级剑术心法判断为同一个技能，反之则不是同一个技能  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetPanelSize" value="lualib:SetPanelSize($VAR1$)&#10;$END$" description="SetPanelSize=&quot;bool  SetPanelSize(string  strRole,uint16  wWidth,uint16  wHeight) 设置角色NPC面板的size.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,wWidth 面板的宽度.,wHeight 面板的高度., 返回:成功或失败. 备注:role可以为NPC、怪物  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SendRoleHPNtf" value="lualib:SendRoleHPNtf($VAR1$)&#10;$END$" description="SendRoleHPNtf=&quot;bool  SendRoleHPNtf(string  strRole) 向周围通知角色血量 参数:strRole 角色GUID,角色只能是玩家或怪物., 返回:成功或失败. 备注:一般用于脚本改变对象的HP之后更新血条显示  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Camp" value="lualib:Camp($VAR1$)&#10;$END$" description="Camp=&quot;int32  Camp(string  strRole) 取得角色的阵营.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:阵营. 参考:Camp,SetCamp,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetCamp" value="lualib:SetCamp($VAR1$)&#10;$END$" description="SetCamp=&quot;void  SetCamp(string  strRole,int32  iValue) 设置角色的阵营.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 阵营值., 返回:无返回值. 参考:Camp,SetCamp,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetAccountID" value="lualib:Player_GetAccountID($VAR1$)&#10;$END$" description="Player_GetAccountID=&quot;uint32  Player_GetAccountID(string  strPlayer) [此函数过期, 禁用] 取得玩家的帐号ID.  参数:strPlayer 玩家的GUID., 返回:帐号ID,出错返回0. 备注:取得玩家账号ID，根据ID号进行操作。 警告:早期接口,不再提供技术支持. 参考:UserID,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetServantCount" value="lualib:Player_GetServantCount($VAR1$)&#10;$END$" description="Player_GetServantCount=&quot;int32  Player_GetServantCount(string  strPlayer) 取得玩家的随从的数量.  参数:strPlayer 玩家的GUID., 返回:随从的数量.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetServantList" value="lualib:Player_GetServantList($VAR1$)&#10;$END$" description="Player_GetServantList=&quot;table  Player_GetServantList(string  strPlayer) 取得玩家的随从的GUID列表.  参数:strPlayer 玩家的GUID., 返回:随从的GUID列表,返回lua table. 备注:返回值是一个表，表中放有所有宝宝的GUID  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsServantNear" value="lualib:Player_IsServantNear($VAR1$)&#10;$END$" description="Player_IsServantNear=&quot;bool  Player_IsServantNear(string  strPlayer,string  strMonster) 判断玩家的随从是不是在附近.  参数:strPlayer 玩家的GUID.,strMonster 随从的GUID., 返回:是否在附近. 备注:宝宝在附近 = 跟玩家在同一个GS上 警告:附近是指主人和随从在同一GS上,不是指地理位置上的附近.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetAttackMode" value="lualib:Player_GetAttackMode($VAR1$)&#10;$END$" description="Player_GetAttackMode=&quot;int32  Player_GetAttackMode(string  strPlayer) 取得玩家的攻击模式.  参数:strPlayer 玩家的GUID., 返回:出错返回-1.攻击模式, 0 = 全体 1 = 和平 2 = 编组 3 = 行会 4 = 善恶 5 = 联盟 6 = 阵营.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemCountByKey" value="lualib:ItemCountByKey($VAR1$)&#10;$END$" description="ItemCountByKey=&quot;int32  ItemCountByKey(string  strPlayer,string  strItemKey,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse,uint8  bBindType) [此函数过期, 禁用] 取得玩家的物品数量.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,bBindType 绑定类型, 0 = 必须非绑定 1 = 必须绑定 2 = 绑定/非绑定, 返回:符合条件的物品数量,出错返回-1. 备注:包裹是一个泛称，可以指真实背包，也可以指仓库，更可以是高级仓库 is_bag:实际上从格子21开始才是真实包裹的第一格。 Bind_type: 0 非绑定 1：绑定 2：绑不绑定都可以 警告:该接口已过期,不再提供技术支持. 参考:ItemCountEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:BagSize" value="lualib:BagSize($VAR1$)&#10;$END$" description="BagSize=&quot;int32  BagSize(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse) 取得玩家包裹大小.  参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库., 返回:包裹大小,出错返回-1. 备注:包裹是一个泛称，可以指真实背包，也可以指仓库，更可以是高级仓库 使用背包扩展可以增加包裹的大小 参考:GetBagSize,GetBagSizeEx,BagSize,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:BagFree" value="lualib:BagFree($VAR1$)&#10;$END$" description="BagFree=&quot;int32  BagFree(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse) 取得玩家包裹空格子数量.  参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库., 返回:包裹空格子数,出错返回-1. 备注:包裹是一个泛称，可以指真实背包，也可以指仓库，更可以是高级仓库 参考:GetBagFree,GetBagFreeEx,BagFree,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AccountName" value="lualib:AccountName($VAR1$)&#10;$END$" description="AccountName=&quot;string  AccountName(string  strPlayer) 取得玩家的帐号名.  参数:strPlayer 玩家的GUID., 返回:玩家的帐号名,如果玩家不存在返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Ip" value="lualib:Ip($VAR1$)&#10;$END$" description="Ip=&quot;string  Ip(string  strPlayer) 取得玩家的IP字符串.  参数:strPlayer 玩家的GUID., 返回:玩家的IP字符串,如果玩家不存在返回''. 备注:将一个网络字节序的数值转成IP地址串返给玩家， 只能做为打印目的  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Name2Guid" value="lualib:Name2Guid($VAR1$)&#10;$END$" description="Name2Guid=&quot;string  Name2Guid(string  strPlayerName) 根据玩家的Name找到该玩家.  参数:strPlayerName 玩家的Name., 返回:玩家的GUID,如果玩家不存在返回''. 备注:该接口要慎用，使用之前必须确保玩家在本GS上。 该接口无视GS，只要玩家在线都可以取到GUID，但在某些特定的时刻，使用该GUID跨GS调用接口函数得不到想要的值。 警告:玩家如果不在线就找不到.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GuildGuid" value="lualib:GuildGuid($VAR1$)&#10;$END$" description="GuildGuid=&quot;string  GuildGuid(string  strPlayer) 取得玩家所属行会的GUID.  参数:strPlayer 玩家的GUID., 返回:玩家行会的GUID,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ReliveMapGuid" value="lualib:ReliveMapGuid($VAR1$)&#10;$END$" description="ReliveMapGuid=&quot;string  ReliveMapGuid(string  strPlayer) 取得玩家复活地图的GUID.  参数:strPlayer 玩家的GUID., 返回:对象复活地图的GUID,出错返回''. 备注:若回城地图不在本GS上，虽然能取得地图的GUID，但 是只能用于一般性的目的，比如显示地图名字等。 不要尝试跨GS给回城地图刷怪等操作。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetGuildCtrb" value="lualib:Player_GetGuildCtrb($VAR1$)&#10;$END$" description="Player_GetGuildCtrb=&quot;uint32  Player_GetGuildCtrb(string  strPlayer) 取得玩家的行会贡献度.  参数:strPlayer 玩家的GUID., 返回:行会贡献度,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_ReCalGuildCtrb" value="lualib:Player_ReCalGuildCtrb($VAR1$)&#10;$END$" description="Player_ReCalGuildCtrb=&quot;bool  Player_ReCalGuildCtrb(string  strPlayer,int32  iValue) 调整玩家的行会贡献度.  参数:strPlayer 玩家的GUID.,iValue 大于0时在原有的贡献度上追加,小于0时在原有贡献度上扣除., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetTeamGuid" value="lualib:Player_GetTeamGuid($VAR1$)&#10;$END$" description="Player_GetTeamGuid=&quot;string  Player_GetTeamGuid(string  strPlayer) 取得玩家队伍的GUID.  参数:strPlayer 玩家的GUID., 返回:玩家队伍的GUID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetTeamList" value="lualib:Player_GetTeamList($VAR1$)&#10;$END$" description="Player_GetTeamList=&quot;table  Player_GetTeamList(string  strPlayer) 取得玩家所有队友的GUID.  参数:strPlayer 玩家的GUID., 返回:玩家队友的GUID列表,返回lua table. 备注:返回值是一个表，表中存有所有队友的GUID，包括玩家自己  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetCastleList" value="lualib:Player_GetCastleList($VAR1$)&#10;$END$" description="Player_GetCastleList=&quot;table  Player_GetCastleList(string  strPlayer) 取得玩家所属行会占领的所有城堡列表.  参数:strPlayer 玩家的GUID., 返回:玩家队伍的GUID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:BagItemList" value="lualib:BagItemList($VAR1$)&#10;$END$" description="BagItemList=&quot;table  BagItemList(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse) 取得玩家包裹所有物品的GUID列表.  参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库., 返回:包裹所有物品的GUID列表,返回lua table. 备注:返回值是一个表，表中存有所有道具的GUID  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_HasTeam" value="lualib:Player_HasTeam($VAR1$)&#10;$END$" description="Player_HasTeam=&quot;bool  Player_HasTeam(string  strPlayer) 判断玩家是否组队.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsTeamLeader" value="lualib:Player_IsTeamLeader($VAR1$)&#10;$END$" description="Player_IsTeamLeader=&quot;bool  Player_IsTeamLeader(string  strPlayer) 判断玩家是否队长.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsGuildLeader" value="lualib:Player_IsGuildLeader($VAR1$)&#10;$END$" description="Player_IsGuildLeader=&quot;bool  Player_IsGuildLeader(string  strPlayer) 判断玩家是否会长.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsViceGuildLeader" value="lualib:Player_IsViceGuildLeader($VAR1$)&#10;$END$" description="Player_IsViceGuildLeader=&quot;bool  Player_IsViceGuildLeader(string  strPlayer) 判断玩家是否副会长.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsGM" value="lualib:Player_IsGM($VAR1$)&#10;$END$" description="Player_IsGM=&quot;bool  Player_IsGM(string  strPlayer) 判断玩家是否GM.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_ChangeAttackMode" value="lualib:Player_ChangeAttackMode($VAR1$)&#10;$END$" description="Player_ChangeAttackMode=&quot;bool  Player_ChangeAttackMode(string  strPlayer,uint8  byMode) 设置角色攻击模式.  参数:strPlayer 玩家的GUID.,byMode 攻击模式, 0 = 全体 1 = 和平 2 = 编组 3 = 行会 4 = 善恶 5 = 联盟 6 = 阵营., 返回:无. 备注:0：全体  1：和平  2：组队  3：行会  4：善恶  5：联盟   6：阵营 参考:Player_GetAttackMode,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_AddGold" value="lualib:Player_AddGold($VAR1$)&#10;$END$" description="Player_AddGold=&quot;bool  Player_AddGold(string  strPlayer,int32  iGold,bool  bBind,string  strDesc,string  strTarget) 添加角色金币.  参数:strPlayer 玩家的GUID.,iGold 金币数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 参考:AddGold,AddBindGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SubGold" value="lualib:Player_SubGold($VAR1$)&#10;$END$" description="Player_SubGold=&quot;bool  Player_SubGold(string  strPlayer,int32  iGold,bool  bBind,string  strDesc,string  strTarget) 扣除角色金币.  参数:strPlayer 玩家的GUID.,iGold 金币数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 参考:SubGold,SubBindGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsGoldEnough" value="lualib:Player_IsGoldEnough($VAR1$)&#10;$END$" description="Player_IsGoldEnough=&quot;bool  Player_IsGoldEnough(string  strPlayer,int32  iGold,bool  bBind) 判断角色的金币是否足够.  参数:strPlayer 玩家的GUID.,iGold 金币数量.,bBind 是否绑定., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_AddIngot" value="lualib:Player_AddIngot($VAR1$)&#10;$END$" description="Player_AddIngot=&quot;bool  Player_AddIngot(string  strPlayer,int32  iIngot,bool  bBind,string  strDesc,string  strTarget) 添加角色元宝.  参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SubIngot" value="lualib:Player_SubIngot($VAR1$)&#10;$END$" description="Player_SubIngot=&quot;bool  Player_SubIngot(string  strPlayer,int32  iIngot,bool  bBind,string  strDesc,string  strTarget) 扣除角色元宝.  参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsIngotEnough" value="lualib:Player_IsIngotEnough($VAR1$)&#10;$END$" description="Player_IsIngotEnough=&quot;bool  Player_IsIngotEnough(string  strPlayer,int32  iIngot,bool  bBind) 判断角色的元宝是否足够.  参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,bBind 是否绑定., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_AddExp" value="lualib:Player_AddExp($VAR1$)&#10;$END$" description="Player_AddExp=&quot;bool  Player_AddExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget) 添加角色经验.  参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SubExp" value="lualib:Player_SubExp($VAR1$)&#10;$END$" description="Player_SubExp=&quot;bool  Player_SubExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget) 扣除角色经验.  参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_AddIntegral" value="lualib:Player_AddIntegral($VAR1$)&#10;$END$" description="Player_AddIntegral=&quot;bool  Player_AddIntegral(string  strPlayer,int32  iIntegral,string  strDesc,string  strTarget) 添加角色积分.  参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SubIntegral" value="lualib:Player_SubIntegral($VAR1$)&#10;$END$" description="Player_SubIntegral=&quot;bool  Player_SubIntegral(string  strPlayer,int32  iIntegral,string  strDesc,string  strTarget) 扣除角色积分.  参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsIntegralEnough" value="lualib:Player_IsIntegralEnough($VAR1$)&#10;$END$" description="Player_IsIntegralEnough=&quot;bool  Player_IsIntegralEnough(string  strPlayer,int32  iIntegral) 判断角色的积分是否足够.  参数:strPlayer 玩家的GUID.,iIntegral 积分数量., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_Relive" value="lualib:Player_Relive($VAR1$)&#10;$END$" description="Player_Relive=&quot;bool  Player_Relive(string  strPlayer,string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint16  wHPPCT) 让玩家复活.  参数:strPlayer 玩家的GUID.,strMap 复活地图GUID.,wX 复活坐标X.,wY 复活坐标Y.,wRange 复活范围.,wHPPCT 复活时的血量百分比., 返回:成功或失败. 备注:复活地图GUID为''表示复活在当前地图  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_JumpToRole" value="lualib:Player_JumpToRole($VAR1$)&#10;$END$" description="Player_JumpToRole=&quot;bool  Player_JumpToRole(string  strPlayer,string  strDestPlayerName) 跳转到目标玩家面前.  参数:strPlayer 玩家的GUID.,strDestPlayerName 目标玩家的名字., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_DragFromRole" value="lualib:Player_DragFromRole($VAR1$)&#10;$END$" description="Player_DragFromRole=&quot;bool  Player_DragFromRole(string  strPlayer,string  strDestPlayerName) 将目标玩家拉到自己面前.  参数:strPlayer 玩家的GUID.,strDestPlayerName 目标玩家的名字., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_FixEquip" value="lualib:Player_FixEquip($VAR1$)&#10;$END$" description="Player_FixEquip=&quot;bool  Player_FixEquip(string  strPlayer,bool  bAdv) 修理玩家所有装备.  参数:strPlayer 玩家的GUID.,bAdv 是否特修., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_FixSingleEquip" value="lualib:Player_FixSingleEquip($VAR1$)&#10;$END$" description="Player_FixSingleEquip=&quot;bool  Player_FixSingleEquip(string  strPlayer,string  strItem,bool  bAdv) 修理玩家指定装备.  参数:strPlayer 玩家的GUID.,strItem 装备的GUID.,bAdv 是否特修., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddItem" value="lualib:AddItem($VAR1$)&#10;$END$" description="AddItem=&quot;bool  AddItem(string  strPlayer,string  strItemKey,uint16  wCount,bool  bBind,string  strDesc,string  strTarget) 给予玩家物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,bBind 绑定类型,false = 不绑定 true = 绑定.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:当玩家包裹空格不够时，自动刷到地上  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DelItem" value="lualib:DelItem($VAR1$)&#10;$END$" description="DelItem=&quot;bool  DelItem(string  strPlayer,string  strItemKey,int32  iCount,uint8  bBind,string  strDesc,string  strTarget) 删除玩家物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,bBind 绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DelItemEx" value="lualib:DelItemEx($VAR1$)&#10;$END$" description="DelItemEx=&quot;bool  DelItemEx(string  strPlayer,string  strItemKey,int32  wCount,uint8  bBind,bool  bEquip,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse,string  strDesc,string  strTarget) 删除玩家物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 删除数量.,bBind 绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:可以指定道具容器，删除道具  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ClearBag" value="lualib:ClearBag($VAR1$)&#10;$END$" description="ClearBag=&quot;bool  ClearBag(string  strPlayer,bool  bEquip,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse,string  strDesc,string  strTarget) 清空玩家包裹.  参数:strPlayer 玩家的GUID.,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:包裹是泛指，包括身上包裹，仓库，高级仓库  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ApplyEquip" value="lualib:ApplyEquip($VAR1$)&#10;$END$" description="ApplyEquip=&quot;bool  ApplyEquip(string  strPlayer,string  strItemKey) [此函数过期, 禁用] 让玩家穿装备.  参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName., 返回:成功或失败. 备注:该接口遍历真实背包所有格子，如能找到跟 keyname相匹配的道具，则装备它。若找不到该道具 或道具不可装备则返回失败。 警告:过期接口,不应再使用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ApplyEquipEx" value="lualib:ApplyEquipEx($VAR1$)&#10;$END$" description="ApplyEquipEx=&quot;bool  ApplyEquipEx(string  strPlayer,string  strItemKey) 让玩家穿装备.  参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName., 返回:成功或失败. 备注:该接口遍历真实背包所有格子，如能找到跟 keyname相匹配的道具，则装备它。若找不到该道具 或道具不可装备则返回失败。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DisableEquip" value="lualib:DisableEquip($VAR1$)&#10;$END$" description="DisableEquip=&quot;bool  DisableEquip(string  strPlayer,string  strItemKey) 让玩家脱装备.  参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName., 返回:成功或失败. 备注:若背包没有空格位，则返回失败。 该接口遍历所有装备位，如能找到跟keyname相匹配的道具，则脱下它。若找不到该道具或道具不可装备则返回失败。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_MapMove" value="lualib:Player_MapMove($VAR1$)&#10;$END$" description="Player_MapMove=&quot;bool  Player_MapMove(string  strPlayer,string  strMapKey) 让玩家跳转到指定地图随机坐标.  参数:strPlayer 玩家的GUID.,strMapKey 地图的KeyName,如果KeyName == '',则在玩家当前地图跳., 返回:成功或失败. 备注:跳转坐标不可控，在目标地图上随机选取坐标 警告:该接口是异步的,接口返回时玩家还没有切换地图.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_MapMoveXY" value="lualib:Player_MapMoveXY($VAR1$)&#10;$END$" description="Player_MapMoveXY=&quot;bool  Player_MapMoveXY(string  strPlayer,string  strMapKey,uint16  wX,uint16  wY,uint16  wRange) 让玩家跳转到指定地图指定坐标.  参数:strPlayer 玩家的GUID.,strMapKey 地图的KeyName,如果KeyName == '',则在玩家当前地图跳.,wX 地图的X坐标.,wY 地图的Y坐标.,wRange 坐标范围., 返回:成功或失败. 警告:该接口是异步的,接口返回时玩家还没有切换地图.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ApplyItem" value="lualib:ApplyItem($VAR1$)&#10;$END$" description="ApplyItem=&quot;bool  ApplyItem(string  strPlayer,string  strItemInfo,bool  bInstance) 让玩家使用道具.  参数:strPlayer 玩家的GUID.,strItemInfo 物品的KeyName或GUID.,bInstance strItemInfo的类型,true = GUID false = KeyName., 返回:成功或失败. 备注:目标道具必须能被使用  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ApplyItemXY" value="lualib:ApplyItemXY($VAR1$)&#10;$END$" description="ApplyItemXY=&quot;bool  ApplyItemXY(string  strPlayer,string  strItemInfo,bool  bInstance,uint16  wX,uint16  wY) 让玩家对附近某坐标使用道具.  参数:strPlayer 玩家的GUID.,strItemInfo 物品的KeyName或GUID.,bInstance strItemInfo的类型,true = GUID false = KeyName.,wX 当前地图X坐标.,wY 当前地图Y坐标., 返回:成功或失败. 备注:目标道具必须能对格子使用  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ApplyItemTarget" value="lualib:ApplyItemTarget($VAR1$)&#10;$END$" description="ApplyItemTarget=&quot;bool  ApplyItemTarget(string  strPlayer,string  strItemInfo,bool  bInstance,string  strTarget) 让玩家对某目标使用道具.  参数:strPlayer 玩家的GUID.,strItemInfo 物品的KeyName或GUID.,bInstance strItemInfo的类型,true = GUID false = KeyName.,strTarget 目标的GUID., 返回:成功或失败. 备注:目标道具必须能对其它对象使用  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DropItem" value="lualib:DropItem($VAR1$)&#10;$END$" description="DropItem=&quot;bool  DropItem(string  strPlayer,string  strItemInfo,bool  bInstance) 玩家丢弃物品.  参数:strPlayer 玩家的GUID.,strItemInfo 物品的GUID或KeyName.,bInstance strItemInfo的类型,true = GUID false = KeyName., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_RunScript" value="lualib:Player_RunScript($VAR1$)&#10;$END$" description="Player_RunScript=&quot;bool  Player_RunScript(string  strPlayer,string  strCallBack,string  strParam) 让玩家执行一段脚本.  参数:strPlayer 玩家的GUID.,strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换., 返回:成功或失败. 备注:跨GS异步回调函数，不能保证绝对去触发回调。在二种情况下会失败。 1.玩家不在线 2.玩家跨GS跳服的一瞬间（这个时候系统认为玩家不在线）   callback回调函数格式： void callback(const std::stringamp; player, const std::stringamp; param1, hellip; paramN); param：是用ldquo;#rdquo;分隔的字符串，回调时系统会自动将param内容用ldquo;#rdquo;分隔成param1, param2, hellip; paramN，作为参数传回  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_TeamRunScript" value="lualib:Player_TeamRunScript($VAR1$)&#10;$END$" description="Player_TeamRunScript=&quot;bool  Player_TeamRunScript(string  strPlayer,string  strCallBack,string  strParam) 让玩家队伍里所有人执行一段脚本.  参数:strPlayer 玩家的GUID.,strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换., 返回:成功或失败. 备注:跨GS异步回调函数，不能保证绝对去触发回调。在三种情况下会失败。 1.玩家不在线 2.玩家跨GS跳服的一瞬间（这个时候系统认为玩家不在线） 3.玩家没有组队 callback回调函数格式： void callback(const std::stringamp; player, const std::stringamp; param1, hellip; paramN); param：是用ldquo;#rdquo;分隔的字符串，回调时系统会自动将param内容用ldquo;#rdquo;分隔成param1, param2, hellip; paramN，作为参数传回  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GuildRunScript" value="lualib:Player_GuildRunScript($VAR1$)&#10;$END$" description="Player_GuildRunScript=&quot;bool  Player_GuildRunScript(string  strPlayer,string  strCallBack,string  strParam) 让玩家行会里所有人执行一段脚本.  参数:strPlayer 玩家的GUID.,strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换., 返回:成功或失败. 备注:跨GS异步回调函数，不能保证绝对去触发回调。在三种情况下会失败。 1.玩家不在线 2.玩家跨GS跳服的一瞬间（这个时候系统认为玩家不在线） 3.玩家没有行会 callback回调函数格式： void callback(const std::stringamp; player, const std::stringamp; param1, hellip; paramN); param：是用ldquo;#rdquo;分隔的字符串，回调时系统会自动将param内容用ldquo;#rdquo;分隔成param1, param2, hellip; paramN，作为参数传回  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsPlayer" value="lualib:Player_IsPlayer($VAR1$)&#10;$END$" description="Player_IsPlayer=&quot;bool  Player_IsPlayer(string  strObject) 判断GUID是不是玩家.  参数:strObject 对象的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetItemGuid" value="lualib:Player_GetItemGuid($VAR1$)&#10;$END$" description="Player_GetItemGuid=&quot;string  Player_GetItemGuid(string  strPlayer,uint16  wSite) 获得玩家某装备位的物品GUID.  参数:strPlayer 对象的GUID.,wSite 装备位,详细解说请参考lua_logic_define.lua., 返回:对应位置物品的GUID. 备注:site的值可以根据如下定义运算出来： lua_site_weapon -- 装备格子开始位（武器） lua_site_mount --装备格子结束位（坐骑） lua_site_expand_1 -- 背包扩展位1 lua_site_expand_2 -- 背包扩展位2 lua_site_expand_3 -- 背包扩展位3 lua_site_expand_4 -- 背包扩展位4 lua_site_bag_0 --包裹0开始位（玩家默认背包) lua_site_bag_1 --包裹1开始位 l   926引擎已将背包扩展位修改成407~410 参考:eRoleSite,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetExpLimit" value="lualib:Player_GetExpLimit($VAR1$)&#10;$END$" description="Player_GetExpLimit=&quot;double  Player_GetExpLimit(string  strPlayer) 获得玩家当前等级经验上限.  参数:strPlayer 玩家的GUID., 返回:当前等级经验上限. 备注:如果服务器配置的经验上限超出double的表示范围，值会溢出（服务器中用的是UINT64，但lua不支持UINT64)  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetAntiIndulge" value="lualib:Player_GetAntiIndulge($VAR1$)&#10;$END$" description="Player_GetAntiIndulge=&quot;int32  Player_GetAntiIndulge(string  strPlayer) 取得玩家的防沉迷状态.  参数:strPlayer 玩家的GUID., 返回:0 = 无收益 1 = 经验减半 2 = 全收益. 备注:根据返回值，得知玩家的沉迷状态。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetForbidTalk" value="lualib:Player_SetForbidTalk($VAR1$)&#10;$END$" description="Player_SetForbidTalk=&quot;bool  Player_SetForbidTalk(string  strPlayer,string  strDesc,uint32  dwTimes) 将玩家禁言.  参数:strPlayer 玩家的GUID.,strDesc 禁言原因.,dwTimes 禁言时间,单位秒.注意该时间请如实填写,否则会数据溢出., 返回:成功或失败. 备注:times为相对时间，不要设置一个极大的值， 不然会数值溢出 警告:该函数是异步的,返回成功并不代表禁言成功.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_DisableForbidTalk" value="lualib:Player_DisableForbidTalk($VAR1$)&#10;$END$" description="Player_DisableForbidTalk=&quot;bool  Player_DisableForbidTalk(string  strPlayer) 取消玩家禁言.  参数:strPlayer 玩家的GUID., 返回:成功或失败. 警告:该函数是异步的,返回成功并不代表解除禁言成功.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_Kick" value="lualib:Player_Kick($VAR1$)&#10;$END$" description="Player_Kick=&quot;bool  Player_Kick(string  strPlayer) [此函数过期, 禁用] 踢玩家下线.  参数:strPlayer 玩家的GUID., 返回:成功或失败. 警告:该函数是异步的,返回成功并不代表踢人成功. 参考:KickByName,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_Catch" value="lualib:Player_Catch($VAR1$)&#10;$END$" description="Player_Catch=&quot;string  Player_Catch(string  strPlayer,string  strServantKey) 玩家捕捉宝宝.  参数:strPlayer 玩家的GUID.,strServantKey 宝宝的KeyName., 返回:宝宝的GUID,出错返回''. 备注:类似法师的召唤  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_Summon" value="lualib:Player_Summon($VAR1$)&#10;$END$" description="Player_Summon=&quot;string  Player_Summon(string  strPlayer,string  strServantKey,uint8  byLevel) 玩家召唤宝宝.  参数:strPlayer 玩家的GUID.,strServantKey 宝宝的KeyName.,byLevel 宝宝的等级., 返回:宝宝的GUID,出错返回''. 备注:如果指定的怪不能被召唤，则返回失败 类似道士的召唤  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetGhost" value="lualib:Player_SetGhost($VAR1$)&#10;$END$" description="Player_SetGhost=&quot;bool  Player_SetGhost(string  strPlayer,bool  bActive) 设置/取消玩家幽灵模式.  参数:strPlayer 玩家的GUID.,bActive true = 设置 false = 取消., 返回:无. 备注:GM隐身  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetInvincible" value="lualib:Player_SetInvincible($VAR1$)&#10;$END$" description="Player_SetInvincible=&quot;bool  Player_SetInvincible(string  strPlayer,bool  bActive) 设置/取消玩家无敌模式.  参数:strPlayer 玩家的GUID.,bActive true = 设置 false = 取消., 返回:无. 备注:GM无敌  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_RunGMCmd" value="lualib:Player_RunGMCmd($VAR1$)&#10;$END$" description="Player_RunGMCmd=&quot;bool  Player_RunGMCmd(string  strPlayer,string  strAlias,string  strParam) 让玩家执行GM指令.  参数:strPlayer 玩家的GUID.,strAlias GM指令的名字.,strParam GM指令的参数., 返回:成功或失败. 备注:玩家以GM的身份执行GM指令 GM指令的名字也可是别名  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ProgressBarStart" value="lualib:ProgressBarStart($VAR1$)&#10;$END$" description="ProgressBarStart=&quot;bool  ProgressBarStart(string  strPlayer,uint32  dwDuration,string  strDesc,string  strCompleteCallBack,string  strAbortCallBack,string  strParam) 让玩家开启进度条.  参数:strPlayer 玩家的GUID.,dwDuration 进度条的持续时间.,strDesc 进度条的描述文字.,strCompleteCallBack 进度条完成时回调函数.,strAbortCallBack 进度条被打断时回调函数.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换., 返回:成功或失败. 备注:void complete(const std::stringamp; player, const std::stringamp; params); void abort(const std::stringamp; player, const std::stringamp; params);  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LoginTime" value="lualib:LoginTime($VAR1$)&#10;$END$" description="LoginTime=&quot;uint32  LoginTime(string  strPlayer) 取得玩家的登陆时间.  参数:strPlayer 玩家的GUID., 返回:登陆时间,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:OnlineTime" value="lualib:OnlineTime($VAR1$)&#10;$END$" description="OnlineTime=&quot;uint32  OnlineTime(string  strPlayer) 取得玩家的本次登陆在线时间.  参数:strPlayer 玩家的GUID., 返回:本次登陆在线时间,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:OnlineTimeEx" value="lualib:OnlineTimeEx($VAR1$)&#10;$END$" description="OnlineTimeEx=&quot;uint32  OnlineTimeEx(string  strPlayer) 取得玩家的当天在线时间.  参数:strPlayer 玩家的GUID., 返回:当天在线时间,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LastLogoutTime" value="lualib:LastLogoutTime($VAR1$)&#10;$END$" description="LastLogoutTime=&quot;uint32  LastLogoutTime(string  strPlayer) 取得玩家的最后退出时间.  参数:strPlayer 玩家的GUID., 返回:最后退出时间.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TotalTime" value="lualib:TotalTime($VAR1$)&#10;$END$" description="TotalTime=&quot;uint32  TotalTime(string  strPlayer) 取得玩家的总计在线时间.  参数:strPlayer 玩家的GUID., 返回:总计在线时间,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GenTeam" value="lualib:GenTeam($VAR1$)&#10;$END$" description="GenTeam=&quot;bool  GenTeam(string  strLeader,table  tMembers) 创建队伍.  参数:strLeader 队长的Name.,tMembers 队伍成员的Name列表,lua table., 返回:异步调用,返回值忽略.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetAutoReply" value="lualib:SetAutoReply($VAR1$)&#10;$END$" description="SetAutoReply=&quot;bool  SetAutoReply(string  strPlayer,string  strMsg) 设置玩家自动回复.  参数:strPlayer 玩家的GUID.,strMsg 自动回复内容., 返回:异步调用,返回值忽略.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DisableAutoReply" value="lualib:DisableAutoReply($VAR1$)&#10;$END$" description="DisableAutoReply=&quot;bool  DisableAutoReply(string  strPlayer) 取消玩家自动回复.  参数:strPlayer 玩家的GUID., 返回:异步调用,返回值忽略.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetOffline" value="lualib:SetOffline($VAR1$)&#10;$END$" description="SetOffline=&quot;void  SetOffline(string  strPlayer,uint32  dwTimes) 设置玩家离线挂机.  参数:strPlayer 玩家的GUID.,dwTimes 挂机时间,单位:秒., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsOffline" value="lualib:IsOffline($VAR1$)&#10;$END$" description="IsOffline=&quot;bool  IsOffline(string  strPlayer) 判断玩家是否在离线挂机.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HardwareCode" value="lualib:HardwareCode($VAR1$)&#10;$END$" description="HardwareCode=&quot;string  HardwareCode(string  strPlayer) 取得玩家的硬件码.  参数:strPlayer 玩家的GUID., 返回:玩家的硬件码,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DelayCall" value="lualib:DelayCall($VAR1$)&#10;$END$" description="DelayCall=&quot;bool  DelayCall(string  strObject,uint32  iElapse,string  strCallBack,string  strParams) 给对象添加延时回调.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,iElapse 延时时间.,strCallBack 触发时,回调该函数.函数格式: 1 = 函数名 2 = 文件名:函数名.,strParams 自定义参数., 返回:成功或失败. 备注:DelayCall除了可以用做延时回调外，还可以在不影响环境的情况下回调其他脚本的函数；   例如想回调script_1中的func_1函数，老的写法是require了script_1再回调func_1，这样写容易造成环境混乱；   建议写作：lualib:DelayCall(object, 1, 'script_1:func_1', param)，这样就不需要require别的脚本，也就不会造成环境混乱了。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GiveItem" value="lualib:GiveItem($VAR1$)&#10;$END$" description="GiveItem=&quot;bool  GiveItem(string  strPlayer,string  strItemKey,uint16  wCount,string  strDesc,string  strTarget) 给予玩家非绑定物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GiveBindItem" value="lualib:GiveBindItem($VAR1$)&#10;$END$" description="GiveBindItem=&quot;bool  GiveBindItem(string  strPlayer,string  strItemKey,uint16  wCount,string  strDesc,string  strTarget) 给予玩家绑定物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:物品是绑定的  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TakeItem" value="lualib:TakeItem($VAR1$)&#10;$END$" description="TakeItem=&quot;bool  TakeItem(string  strPlayer,string  strItemKey,uint16  wCount,string  strDesc,string  strTarget) 删除玩家物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:简化版的删除物品，绑不绑定都会删  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TakeItemEx" value="lualib:TakeItemEx($VAR1$)&#10;$END$" description="TakeItemEx=&quot;bool  TakeItemEx(string  strPlayer,string  strItemKey,int32  wCount,uint8  bBind,bool  bEquip,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse,string  strDesc,string  strTarget) 删除玩家物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 删除数量.,bBind 绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TakeOff" value="lualib:TakeOff($VAR1$)&#10;$END$" description="TakeOff=&quot;bool  TakeOff(string  strPlayer,string  strItemKey) 让玩家脱装备.  参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TakeOffEx" value="lualib:TakeOffEx($VAR1$)&#10;$END$" description="TakeOffEx=&quot;bool  TakeOffEx(string  strPlayer,string  strItemInfo) 让玩家脱装备.  参数:strPlayer 玩家的GUID.,strItemInfo 装备的GUID或KeyName., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TakeOn" value="lualib:TakeOn($VAR1$)&#10;$END$" description="TakeOn=&quot;bool  TakeOn(string  strPlayer,string  strItemKey) 让玩家穿装备.  参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TakeOnEx" value="lualib:TakeOnEx($VAR1$)&#10;$END$" description="TakeOnEx=&quot;bool  TakeOnEx(string  strPlayer,string  strItemInfo,int  iSite) 让玩家穿装备.  参数:strPlayer 玩家的GUID.,strItemInfo 物品的GUID或物品的KeyName.,iSite 装备位置,仅当物品为护腕或戒指时,该参数才生效., 返回:成功或失败. 参考:eRoleSite,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GiveOneItem" value="lualib:GiveOneItem($VAR1$)&#10;$END$" description="GiveOneItem=&quot;string  GiveOneItem(string  strPlayer,string  strItemKey,uint16  wCount,string  strDesc,string  strTarget) 给予玩家单个非绑定物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.不能超过该物品的最大堆叠数,否则给予失败.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:新物品的GUID,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GiveOneBindItem" value="lualib:GiveOneBindItem($VAR1$)&#10;$END$" description="GiveOneBindItem=&quot;string  GiveOneBindItem(string  strPlayer,string  strItemKey,uint16  wCount,string  strDesc,string  strTarget) 给予玩家单个绑定物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.不能超过该物品的最大堆叠数,否则给予失败.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:新物品的GUID,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_SetSeeker" value="lualib:Monster_SetSeeker($VAR1$)&#10;$END$" description="Monster_SetSeeker=&quot;bool  Monster_SetSeeker(string  strMonster,table  tPath,uint8  byType,bool  bForce) 将该怪物设为自动行走怪.  参数:strMonster 怪物的GUID.,tPath 路径表,按X坐标,Y坐标顺序填写.如:{1, 1, 1, 3},第一步坐标(1, 1),第二步坐标(1, 3).,byType 行走类型, 0 = 普通行走 1 = 反复寻走.,bForce true = 强制寻路,不主动攻击也不回击 false = 根据怪物类型决定., 返回:属性值. 备注:path_table：对应lua table，table格式为： {first_step.x, first_step.y, second_step.x, second_step.y,hellip;} 路线点之间不要距离太远或不可达   type：0 普通巡路 到达终点后停下来 1 反复巡路 到达络点后原路返回 f   orce：true 是强制寻路 怪物即不主动攻击，受到攻击也不理会 false 不是强制寻路 怪物为主动怪时，发现可攻击目标会走正常攻击流程，受到攻击会还 警告:早期接口,不再提供技术支持.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetMaster" value="lualib:Monster_GetMaster($VAR1$)&#10;$END$" description="Monster_GetMaster=&quot;string  Monster_GetMaster(string  strMonster) 取得怪物主人的Name.  参数:strMonster 怪物的GUID., 返回:怪物主人的Name,如果对象不存在返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MonsterKey2ID" value="lualib:MonsterKey2ID($VAR1$)&#10;$END$" description="MonsterKey2ID=&quot;uint32  MonsterKey2ID(string  strMonsterKey) 根据怪物的KeyName取得怪物的ID.  参数:strMonsterKey 怪物的KeyName., 返回:怪物的ID,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_IsExist" value="lualib:Monster_IsExist($VAR1$)&#10;$END$" description="Monster_IsExist=&quot;bool  Monster_IsExist(string  strMonster) 判断怪物是否存在.  参数:strMonster 怪物的GUID., 返回:是或否. 备注:跨GS调用时，返回false  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_IsMonster" value="lualib:Monster_IsMonster($VAR1$)&#10;$END$" description="Monster_IsMonster=&quot;bool  Monster_IsMonster(string  strObject) 判断对象是否为怪物.  参数:strObject 对象的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_IsDie" value="lualib:Monster_IsDie($VAR1$)&#10;$END$" description="Monster_IsDie=&quot;bool  Monster_IsDie(string  strMonster) 判断怪物是否死亡.  参数:strMonster 怪物的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_Remove" value="lualib:Monster_Remove($VAR1$)&#10;$END$" description="Monster_Remove=&quot;bool  Monster_Remove(string  strMonster) 移除怪物.  参数:strMonster 怪物的GUID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetEscapePoint" value="lualib:Monster_GetEscapePoint($VAR1$)&#10;$END$" description="Monster_GetEscapePoint=&quot;table  Monster_GetEscapePoint(string  strMonster,uint16  wActorX,uint16  wActorY,uint16  wDistance) 计算怪物的逃跑点.  参数:strMonster 怪物的GUID.,wActorX 攻击者的X坐标.,wActorY 攻击者的Y坐标.,wDistance 逃跑距离., 返回:逃跑点坐标,返回lua table. 例:tPos = lualib:Monster_GenEscapePoint(XXXXX, 10, 203, 16); local x, y = tPos['x'], tPos['y']; 备注:假设怪物想逃跑，可以算出一个逃跑坐标。返回值是一个表。表中存放逃跑点坐标  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_Escape" value="lualib:Monster_Escape($VAR1$)&#10;$END$" description="Monster_Escape=&quot;bool  Monster_Escape(string  strMonster,uint16  wX,uint16  wY) 让怪物行走到某点.  参数:strMonster 怪物的GUID.,wX 目标X坐标.,wY 目标Y坐标., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_SpellTarget" value="lualib:Monster_SpellTarget($VAR1$)&#10;$END$" description="Monster_SpellTarget=&quot;bool  Monster_SpellTarget(string  strMonster,uint16  wSkillID,string  strTarget) 让怪物施放技能.  参数:strMonster 怪物的GUID.,wSkillID 技能ID.,strTarget 技能目标,可以是怪物、玩家、英雄., 返回:成功或失败. 备注:攻击技能必须存在，并且怪物有学到这个技能。技能要配置正确，有些技能怪物是不能施放的。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetAttackTarget" value="lualib:Monster_GetAttackTarget($VAR1$)&#10;$END$" description="Monster_GetAttackTarget=&quot;string  Monster_GetAttackTarget(string  strMonster) 取得怪物的攻击目标.  参数:strMonster 怪物的GUID., 返回:攻击目标的GUID,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_SetAttackTarget" value="lualib:Monster_SetAttackTarget($VAR1$)&#10;$END$" description="Monster_SetAttackTarget=&quot;bool  Monster_SetAttackTarget(string  strMonster,string  strTarget) 设置怪物的攻击目标.  参数:strMonster 怪物的GUID.,strTarget 怪物的目标., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetSpecial" value="lualib:Monster_GetSpecial($VAR1$)&#10;$END$" description="Monster_GetSpecial=&quot;table  Monster_GetSpecial(uint16  wMaxLevel,uint16  wMinLevel) 取得相应等级的抽取类型怪.  参数:wMaxLevel 最大等级.,wMinLevel 最小等级., 返回:符合条件的抽取怪KeyName列表,返回lua table. 备注:检索怪物表，返回所有满足等级条件的怪（自动过滤特殊怪，比如任务怪）。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Npc_Remove" value="lualib:Npc_Remove($VAR1$)&#10;$END$" description="Npc_Remove=&quot;bool  Npc_Remove(string  strNpc) 移除NPC.  参数:strNpc NPC的GUID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Npc_ChangeName" value="lualib:Npc_ChangeName($VAR1$)&#10;$END$" description="Npc_ChangeName=&quot;bool  Npc_ChangeName(string  strNpc,string  strName) 改变NPC的名字.  参数:strNpc NPC的GUID.,strName NPC的Name., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Npc_IsExist" value="lualib:Npc_IsExist($VAR1$)&#10;$END$" description="Npc_IsExist=&quot;bool  Npc_IsExist(string  strNpc) 判断NPC是否存在.  参数:strNpc NPC的GUID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddShop" value="lualib:AddShop($VAR1$)&#10;$END$" description="AddShop=&quot;bool  AddShop(string  strNpc,uint16  wShopId) 将NPC与指定商店关联起来 参数:strNpc NPC的GUID.,wShopId 商店ID., 返回:成功或失败. 备注:商店ID在商店模板表中，要写正确   在商店买卖前必须先AddShop，否则系统无法识别 参考:AddShop,OpenShop,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:OpenShop" value="lualib:OpenShop($VAR1$)&#10;$END$" description="OpenShop=&quot;void  OpenShop(string  strNpc,string  strPlayer,uint16  wShopId) 打开与NPC关联过的商店 参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,wShopId 商店ID., 返回:无返回值. 备注:NPC必须与该商店关联过. 参考:AddShop,OpenShop,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:OpenWarehouse" value="lualib:OpenWarehouse($VAR1$)&#10;$END$" description="OpenWarehouse=&quot;void  OpenWarehouse(string  strNpc,string  strPlayer) 打开玩家仓库 参数:strNpc NPC的GUID.,strPlayer 玩家GUID., 返回:无返回值. 参考:OpenWarehouse,OpenWarehouseAdv,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:OpenWarehouseAdv" value="lualib:OpenWarehouseAdv($VAR1$)&#10;$END$" description="OpenWarehouseAdv=&quot;void  OpenWarehouseAdv(string  strNpc,string  strPlayer) 打开玩家高级仓库 参数:strNpc NPC的GUID.,strPlayer 玩家GUID., 返回:无返回值. 参考:OpenWarehouse,OpenWarehouseAdv,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:NPCTalk" value="lualib:NPCTalk($VAR1$)&#10;$END$" description="NPCTalk=&quot;void  NPCTalk(string  strPlayer,string  strTalk) 打开物品的对话框 参数:strPlayer 玩家GUID.,strTalk 对话框的内容., 返回:无返回值. 参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:NPCTalkEx" value="lualib:NPCTalkEx($VAR1$)&#10;$END$" description="NPCTalkEx=&quot;void  NPCTalkEx(string  strNpc,string  strPlayer,string  strTalk) 打开NPC的对话框 参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,strTalk 对话框的内容., 返回:无返回值. 参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:NPCTalkDetail" value="lualib:NPCTalkDetail($VAR1$)&#10;$END$" description="NPCTalkDetail=&quot;void  NPCTalkDetail(string  strPlayer,string  strTalk,uint16  wWidth,uint16  wHeight) 打开物品的对话框 参数:strPlayer 玩家GUID.,strTalk 对话框的内容.,wWidth 对话框的宽度.,wHeight 对话框的高度., 返回:无返回值. 参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:NPCTalkDetailEx" value="lualib:NPCTalkDetailEx($VAR1$)&#10;$END$" description="NPCTalkDetailEx=&quot;void  NPCTalkDetailEx(string  strNpc,string  strPlayer,string  strTalk,uint16  wWidth,uint16  wHeight) 打开NPC的对话框 参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,strTalk 对话框的内容.,wWidth 对话框的宽度.,wHeight 对话框的高度., 返回:无返回值. 参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetRole" value="lualib:Item_GetRole($VAR1$)&#10;$END$" description="Item_GetRole=&quot;string  Item_GetRole(string  strItem) 取得物品的拥有者GUID.  参数:strItem 物品的GUID., 返回:拥有者的GUID,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetType" value="lualib:Item_GetType($VAR1$)&#10;$END$" description="Item_GetType=&quot;uint8  Item_GetType(string  strPlayer,string  strItem) 取得物品的类型.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:物品类型,具体类型请参考策划Item表.出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetSubType" value="lualib:Item_GetSubType($VAR1$)&#10;$END$" description="Item_GetSubType=&quot;uint8  Item_GetSubType(string  strPlayer,string  strItem) 取得物品的子类型.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:物品子类型,具体类型请参考策划Item表.出错返回0. 备注:主类型为1表装备，但其中子类型5符咒除外。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetSite" value="lualib:Item_GetSite($VAR1$)&#10;$END$" description="Item_GetSite=&quot;int32  Item_GetSite(string  strPlayer,string  strItem) 根据物品GUID取得该物品的包裹位.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:返回包裹位置,如果物品不存在返回0. 参考:eRoleSite,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetAmount" value="lualib:Item_GetAmount($VAR1$)&#10;$END$" description="Item_GetAmount=&quot;int32  Item_GetAmount(string  strPlayer,string  strItem) 根据物品GUID取得该物品的堆叠数量.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:返回堆叠数量.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_SetAmount" value="lualib:Item_SetAmount($VAR1$)&#10;$END$" description="Item_SetAmount=&quot;bool  Item_SetAmount(string  strPlayer,string  strItem,int32  iAmount) 根据物品GUID设置该物品的堆叠数量.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iAmount 堆叠数,不能超过该物品的最大堆叠数量., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetStack" value="lualib:Item_GetStack($VAR1$)&#10;$END$" description="Item_GetStack=&quot;int32  Item_GetStack(string  strKey) 根据物品KeyName取得该物品的最大堆叠数量.  参数:strKey 物品的KeyName., 返回:返回最大堆叠数量.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetDurability" value="lualib:Item_GetDurability($VAR1$)&#10;$END$" description="Item_GetDurability=&quot;int32  Item_GetDurability(string  strPlayer,string  strItem) 根据物品GUID取得该物品的当前耐久.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:物品的耐久,出错返回-1.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetMaxDurability" value="lualib:Item_GetMaxDurability($VAR1$)&#10;$END$" description="Item_GetMaxDurability=&quot;int32  Item_GetMaxDurability(string  strPlayer,string  strItem) 根据物品GUID取得该物品的最大耐久.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:物品的最大耐久,出错返回-1.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_SetDurability" value="lualib:Item_SetDurability($VAR1$)&#10;$END$" description="Item_SetDurability=&quot;bool  Item_SetDurability(string  strPlayer,string  strItem,int32  iDura) 根据物品GUID设置该物品的当前耐久.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iDura 耐久值., 返回:成功或失败. 备注:设置当前耐久不能超过道具模板表所设定的耐久  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_SetMaxDurability" value="lualib:Item_SetMaxDurability($VAR1$)&#10;$END$" description="Item_SetMaxDurability=&quot;bool  Item_SetMaxDurability(string  strPlayer,string  strItem,int32  iDura) 根据物品GUID设置该物品的最大耐久.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iDura 耐久值., 返回:成功或失败. 备注:设置最大耐久不能超过道具模板表所设定的耐久  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetRepairCharge" value="lualib:Item_GetRepairCharge($VAR1$)&#10;$END$" description="Item_GetRepairCharge=&quot;int  Item_GetRepairCharge(string  strPlayer,string  strItem,int  iType) 根据物品GUID查询该物品的修理价格.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iType 修理类型 1 = 普修 2 = 特修., 返回:物品修理价格.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetUsesCount" value="lualib:Item_GetUsesCount($VAR1$)&#10;$END$" description="Item_GetUsesCount=&quot;int16  Item_GetUsesCount(string  strPlayer,string  strItem) 根据物品GUID取得该物品的剩余使用次数.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:物品的使用次数,出错返回-1.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_SetUsesCount" value="lualib:Item_SetUsesCount($VAR1$)&#10;$END$" description="Item_SetUsesCount=&quot;bool  Item_SetUsesCount(string  strPlayer,string  strItem,int16  iValue) 根据物品GUID设置该物品的剩余使用次数.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iValue 使用次数., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_IsBind" value="lualib:Item_IsBind($VAR1$)&#10;$END$" description="Item_IsBind=&quot;bool  Item_IsBind(string  strPlayer,string  strItem) 根据物品GUID判断该物品是否绑定.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_SetBind" value="lualib:Item_SetBind($VAR1$)&#10;$END$" description="Item_SetBind=&quot;bool  Item_SetBind(string  strPlayer,string  strItem,bool  bBind) 根据物品GUID设置该物品是否绑定.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,bBind 是否绑定., 返回:成功或失败. 备注:是否绑定，1表是绑定，0表示不绑定  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_NotifyUpdate" value="lualib:Item_NotifyUpdate($VAR1$)&#10;$END$" description="Item_NotifyUpdate=&quot;void  Item_NotifyUpdate(string  strPlayer,string  strItem) 向物品的主人通知物品属性更新.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_GetIdentifyNum" value="lualib:Equip_GetIdentifyNum($VAR1$)&#10;$END$" description="Equip_GetIdentifyNum=&quot;int  Equip_GetIdentifyNum(string  player_guid,string  item_guid) 取得装备当前鉴定条目数 参数:player_guid 玩家的GUID.,item_guid 物品的GUID., 返回:取得装备当前鉴定条目数. 备注:最多三条  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_GetIdentifyProp" value="lualib:Equip_GetIdentifyProp($VAR1$)&#10;$END$" description="Equip_GetIdentifyProp=&quot;table  Equip_GetIdentifyProp(string  player_guid,string  item_guid,uint16  index) 获取装备的某条鉴定属性 参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 属性索引,取值范围[0-2],共三条., 返回:成功返回lua_table包括两个数据,0存储属性,1存储数据. 备注:返回值是一个表   att[0]为Att表中的属性编号，att[1]为该属性的属性值  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_SetIdentifyProp" value="lualib:Equip_SetIdentifyProp($VAR1$)&#10;$END$" description="Equip_SetIdentifyProp=&quot;bool  Equip_SetIdentifyProp(string  player_guid,string  item_guid,uint8  att0,uint16  v0,uint8  att1,uint16  v1,uint8  att2,uint16  v2) 设置装备的鉴定属性 参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,att0 属性名0.,v0 属性值0.,att1 属性名1.,v1 属性值1.,att2 属性名2.,v2 属性值2., 返回:成功返回true，失败返回false. 备注:lua_role_level = 0, lua_role_job, lua_role_hp,/// hp lua_role_max_hp, lua_role_mp,/// mp lua_role_max_mp, lua_role_max_phy_def, /// physical defense lua_role_min_phy_def, lua_role_max_mag_def, /// magical defense lua_role_min_mag_def, lua_ro  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_GetRefineLevel" value="lualib:Equip_GetRefineLevel($VAR1$)&#10;$END$" description="Equip_GetRefineLevel=&quot;uint8  Equip_GetRefineLevel(string  player_guid,string  item_guid) 取得装备精炼等级 参数:player_guid 玩家的GUID.,item_guid 物品的GUID., 返回:取得装备精炼等级. 备注:只有装备由此属性.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_SetRefineLevel" value="lualib:Equip_SetRefineLevel($VAR1$)&#10;$END$" description="Equip_SetRefineLevel=&quot;bool  Equip_SetRefineLevel(string  player_guid,string  item_guid,uint8  level) 设置装备的精炼等级 参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,level 精炼等级., 返回:无. 备注:level理论上可以设0-255，慎用（服务器没有限制精炼等级上限）。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_GetRefineProp" value="lualib:Equip_GetRefineProp($VAR1$)&#10;$END$" description="Equip_GetRefineProp=&quot;table  Equip_GetRefineProp(string  player_guid,string  item_guid) 获取装备的精炼属性 参数:player_guid 玩家的GUID.,item_guid 物品的GUID., 返回:成功返回lua_table包括两个数据,0存储属性,1存储数据. 备注:只有装备由此属性.   att[属性索引] = 属性值，例：att[89] = 10 表示魔攻上限百分比+10  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_SetRefineProp" value="lualib:Equip_SetRefineProp($VAR1$)&#10;$END$" description="Equip_SetRefineProp=&quot;bool  Equip_SetRefineProp(string  player_guid,string  item_guid,uint16  attr_name,int32  attr_value) 设置装备的精炼属性 参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,attr_name 属性名.,attr_value 属性值., 返回:成功返回true，失败返回false. 备注:只有装备由此属性.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_GetLuckCurse" value="lualib:Equip_GetLuckCurse($VAR1$)&#10;$END$" description="Equip_GetLuckCurse=&quot;int16  Equip_GetLuckCurse(string  strPlayer,string  strItem) 根据物品GUID取得该物品的幸运诅咒值.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:幸运或诅咒值. 备注:注意：这里的幸运诅咒取的是扩展属性值的幸运诅咒(动态值)，不计基础值(Item配置表中设置的)。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_SetLuckCurse" value="lualib:Equip_SetLuckCurse($VAR1$)&#10;$END$" description="Equip_SetLuckCurse=&quot;bool  Equip_SetLuckCurse(string  strPlayer,string  strItem,int32  iValue) 根据物品GUID设置该物品的幸运诅咒值.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iValue 幸运诅咒值.大于0为幸运,小于0为诅咒., 返回:成功或失败. 备注:大于0是幸运，小于0是诅咒  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_ChangeName" value="lualib:Item_ChangeName($VAR1$)&#10;$END$" description="Item_ChangeName=&quot;bool  Item_ChangeName(string  strPlayer,string  strItem,string  strName) 根据物品GUID设置该物品的自定义名称.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,strName 物品的新名字., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_Destroy" value="lualib:Item_Destroy($VAR1$)&#10;$END$" description="Item_Destroy=&quot;bool  Item_Destroy(string  strPlayer,string  strItem,string  strDesc,string  strTarget) 根据物品GUID销毁该物品.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,strDesc 销毁原因.,strTarget 销毁动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_GetExtNum" value="lualib:Equip_GetExtNum($VAR1$)&#10;$END$" description="Equip_GetExtNum=&quot;int  Equip_GetExtNum(string  player_guid,string  item_guid) 取得装备当前扩展条目数 参数:player_guid 玩家的GUID.,item_guid 物品的GUID., 返回:取得装备当前鉴定条目数, 取值范围[0, 10]. 备注:只有装备由此属性.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_GetExtProp" value="lualib:Equip_GetExtProp($VAR1$)&#10;$END$" description="Equip_GetExtProp=&quot;table  Equip_GetExtProp(string  player_guid,string  item_guid,uint16  index) 获取装备的某条扩展属性 参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 属性索引,取值范围[0-9],共十条., 返回:成功返回lua_table包括两个数据,0存储属性,1存储数据. 备注:只有装备由此属性.   att[0]为Att表中的属性编号，att[1]为该属性的属性值  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_SetExtProp" value="lualib:Equip_SetExtProp($VAR1$)&#10;$END$" description="Equip_SetExtProp=&quot;bool  Equip_SetExtProp(string  player_guid,string  item_guid,uint16  index,uint8  attr_name,uint16  attr_value) 设置装备的某条扩展属性 参数:player_guid 该参数现已无意义,默认填''即可.,item_guid 物品的GUID.,index 属性索引,取值范围[0-9],共十条.,attr_name 属性名.,attr_value 属性值., 返回:成功返回true，失败返回false. 备注:只有装备由此属性.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_SetQualProp" value="lualib:Equip_SetQualProp($VAR1$)&#10;$END$" description="Equip_SetQualProp=&quot;bool  Equip_SetQualProp(string  player_guid,string  item_guid,uint16  index,uint16  attr_name,int32  attr_value) 设置装备的某条品质属性 参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 品质属性索引,取值范围[0-5],共六条.,attr_name 属性名.,attr_value 属性值., 返回:成功返回true，失败返回false. 备注:只有装备由此属性.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Equip_GetQualProp" value="lualib:Equip_GetQualProp($VAR1$)&#10;$END$" description="Equip_GetQualProp=&quot;table  Equip_GetQualProp(string  player_guid,string  item_guid,uint16  index) 获取装备的某条品质属性 参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 品质属性索引,取值范围[0-5],共六条., 返回:成功返回lua_table包括两个数据,0存储属性,1存储数据. 备注:只有装备由此属性.   att[0]为Att表中的属性编号，att[1]为该属性的属性值  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemsByType" value="lualib:ItemsByType($VAR1$)&#10;$END$" description="ItemsByType=&quot;table  ItemsByType(string  strPlayer,int  iType,int  iSubtype,bool  bEquip,bool  bBag,bool  bWarehouse,bool  bWarehouseAdv) 玩家根据道具类型找物品.  参数:strPlayer 玩家的GUID.,iType 物品类型,具体类型请参考策划Item表.,iSubtype 物品子类型,具体类型请参考策划Item表.,bEquip 是否查找装备栏,bBag 是否查找包裹,bWarehouse 是否查找仓库,bWarehouseAdv 是否查找高级仓库, 返回:符合条件的物品列表,返回lua table.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetLife" value="lualib:Item_GetLife($VAR1$)&#10;$END$" description="Item_GetLife=&quot;int32  Item_GetLife(string  strPlayer,string  strItem) 根据物品GUID取得该物品的剩余存在时间.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:物品的剩余存在时间,出错返回-1.秒位:秒.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_SetLife" value="lualib:Item_SetLife($VAR1$)&#10;$END$" description="Item_SetLife=&quot;bool  Item_SetLife(string  strPlayer,string  strItem,int32  iValue) 根据物品GUID设置该物品的剩余存在时间.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iValue 剩余存在时间., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item2Json" value="lualib:Item2Json($VAR1$)&#10;$END$" description="Item2Json=&quot;string  Item2Json(string  strItem) 根据物品实体信息生成物品的JSON信息.  参数:strItem 物品的GUID., 返回:物品的JSON信息,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Json2Item" value="lualib:Json2Item($VAR1$)&#10;$END$" description="Json2Item=&quot;string  Json2Item(string  strPlayer,string  strJson) 根据物品的JSON信息生成物品的实体.  参数:strPlayer 玩家的GUID.,strJson 物品的JSON信息., 返回:物品的GUID,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Json2ItemEx" value="lualib:Json2ItemEx($VAR1$)&#10;$END$" description="Json2ItemEx=&quot;string  Json2ItemEx(string  strPlayer,string  strJson,bool  bNew) 根据物品的JSON信息生成物品的实体.  参数:strPlayer 玩家的GUID.,strJson 物品的JSON信息.,bNew 是否重新生成GUID., 返回:物品的GUID,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:CanFixEquip" value="lualib:CanFixEquip($VAR1$)&#10;$END$" description="CanFixEquip=&quot;bool  CanFixEquip(string  strItem,int32  iType) 判断某件装备能否被修理.  参数:strItem 装备的GUID.,iType 修理类型,1 = 普修 2 = 特修., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetLevel" value="lualib:Item_GetLevel($VAR1$)&#10;$END$" description="Item_GetLevel=&quot;int32  Item_GetLevel(string  strItem) 根据物品GUID取得该物品的使用等级.  参数:strItem 物品的GUID., 返回:物品的使用等级,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetIcon" value="lualib:Item_GetIcon($VAR1$)&#10;$END$" description="Item_GetIcon=&quot;uint32  Item_GetIcon(string  strItem) 根据物品GUID取得该物品的图标.  参数:strItem 物品的GUID., 返回:物品的图标ID,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemKey2ID" value="lualib:ItemKey2ID($VAR1$)&#10;$END$" description="ItemKey2ID=&quot;uint32  ItemKey2ID(string  strItemKey) 根据物品的KeyName取得物品的ID.  参数:strItemKey 物品的KeyName., 返回:物品的ID,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_DataRow" value="lualib:Item_DataRow($VAR1$)&#10;$END$" description="Item_DataRow=&quot;table  Item_DataRow(string  strItemKey) 根据物品KeyName取得该物品的配置表结构.  参数:strItemKey 物品的KeyName., 返回:物品的配置表结构. 备注:table['Name'] = item-gt;Name;      table['KeyName'] = item-gt;KeyName;      table['Type'] = item-gt;Type;      table['SubType'] = item-gt;SubType;      table['WeaponType'] = item-gt;WeaponType;      table['JuJuType'] = item-gt;JuJuType;      table['LogicType'] = item-gt;LogicType;      table['LogicSubType'] = item-gt;LogicSubType;      table['LS2'] = item-gt;LS2;      table['ShopType'] = item-gt;ShopType;      table['SaveLog'] = item-gt;SaveLog;      table['Color'] = item-gt;Color;      table['Quality'] = item-gt;Quality;      table['BigIcon'] = item-gt;BigIcon;      table['TipsIcon'] = item-gt;TipsIcon;      table['Icon'] = item-gt;Icon;      table['DropIcon'] = item-gt;DropIcon;      table['AvatarMan'] = item-gt;AvatarMan;      table['AvatarWomen'] = item-gt;AvatarWomen;      table['WingAvatarMan'] = item-gt;WingAvatarMan;      table['WingAvatarWomen'] = item-gt;WingAvatarWomen;      table['ShadowAvatarMan'] = item-gt;ShadowAvatarMan;      table['ShadowAvatarWomen'] = item-gt;ShadowAvatarWomen;      table['Brief'] = item-gt;Brief;      table['Desc'] = item-gt;Desc;      table['NaQiSound'] = item-gt;NaQiSound;      table['FangXiaSound'] = item-gt;FangXiaSound;      table['ShiYongSound'] = item-gt;ShiYongSound;      table['DiaoLuoSound'] = item-gt;DiaoLuoSound;      table['Gender'] = item-gt;Gender;      table['CutSound'] = item-gt;CutSound;      table['HitSound'] = item-gt;HitSound;      table['SelfWeight'] = item-gt;SelfWeight;      table['Durability'] = item-gt;Durability;      table['DurZeroAutoDel'] = item-gt;DurZeroAutoDel;      table['Stack'] = item-gt;Stack;      table['BindType'] = item-gt;BindType;      table['Tradable'] = item-gt;Tradable;      table['SpeDrop'] = item-gt;SpeDrop;      table['TipDrop'] = item-gt;TipDrop;      table['TipSell'] = item-gt;TipSell;      table['Confirmation'] = item-gt;Confirmation;      table['UseCount'] = item-gt;UseCount;      table['UseZeroAutoDel'] = item-gt;UseZeroAutoDel;      table['Level'] = item-gt;Level;      table['Job'] = item-gt;Job;      table['Gender'] = item-gt;Gender;      table['PhyLimit'] = item-gt;PhyLimit;      table['MagLimit'] = item-gt;MagLimit;      table['TaoLimit'] = item-gt;TaoLimit;      table['Effect'] = item-gt;Effect;      table['Dropable'] = item-gt;Dropable;      table['Storable'] = item-gt;Storable;      table['Repairable'] = item-gt;Repairable;      table['Sellable'] = item-gt;Sellable;      table['CanAuction'] = item-gt;CanAuction;      table['CanPurchase'] = item-gt;CanPurchase;      table['CanShortcut'] = item-gt;CanShortcut;      table['TimeLimit'] = item-gt;TimeLimit;      table['UseAbsTime'] = item-gt;UseAbsTime;      table['TimeUpAutoDel'] = item-gt;TimeUpAutoDel;      table['Track'] = item-gt;Track;      table['Script'] = item-gt;Script;      table['Suit'] = item-gt;Suit;      table['Identify'] = item-gt;Identify;      table['CanUnEquip'] = item-gt;CanUnEquip;      table['Drillable'] = item-gt;Drillable;      table['MaxDrill'] = item-gt;MaxDrill;      table['CanEnhance'] = item-gt;CanEnhance;      table['CanRefine'] = item-gt;CanRefine;      table['RefineCostDur'] = item-gt;RefineCostDur;      table['BagSize'] = item-gt;BagSize;      table['WarehouseSize'] = item-gt;WarehouseSize;      table['SkillId'] = item-gt;SkillId;      table['HP'] = item-gt;HP;      table['MP'] = item-gt;MP;      table['MaxPhyDef'] = item-gt;MaxPhyDef;      table['MinPhyDef'] = item-gt;MinPhyDef;      table['MaxMagDef'] = item-gt;MaxMagDef;      table['MinMagDef'] = item-gt;MinMagDef;      table['MaxPhyAtk'] = item-gt;MaxPhyAtk;      table['MinPhyAtk'] = item-gt;MinPhyAtk;      table['MaxMagAtk'] = item-gt;MaxMagAtk;      table['MinMagAtk'] = item-gt;MinMagAtk;      table['MaxTaoAtk'] = item-gt;MaxTaoAtk;      table['MinTaoAtk'] = item-gt;MinTaoAtk;      table['EA1'] = item-gt;EA1;      table['EA2'] = item-gt;EA2;      table['EA3'] = item-gt;EA3;      table['EA4'] = item-gt;EA4;      table['EA5'] = item-gt;EA5;      table['ED1'] = item-gt;ED1;      table['ED2'] = item-gt;ED2;      table['ED3'] = item-gt;ED3;      table['ED4'] = item-gt;ED4;      table['ED5'] = item-gt;ED5;      table['Weight'] = item-gt;Weight;      table['EquipWeight'] = item-gt;EquipWeight;      table['Brawn'] = item-gt;Brawn;      table['Hit'] = item-gt;Hit;      table['Miss'] = item-gt;Miss;      table['MagMiss'] = item-gt;MagMiss;      table['Burst'] = item-gt;Burst;      table['LC'] = item-gt;LC;      table['MoveSpeed'] = item-gt;MoveSpeed;      table['AttackSpeed'] = item-gt;AttackSpeed;      table['Poison'] = item-gt;Poison;      table['HPRec'] = item-gt;HPRec;      table['MPRec'] = item-gt;MPRec;      table['Intensity'] = item-gt;Intensity;      table['SuckHp'] = item-gt;SuckHp;      table['SuckHpPct'] = item-gt;SuckHpPct;      table['SuckMaxHpPct'] = item-gt;SuckMaxHpPct;      table['SuckMp'] = item-gt;SuckMp;      table['SuckMpPct'] = item-gt;SuckMpPct;      table['SuckMaxMpPct'] = item-gt;SuckMaxMpPct;      table['RefPhy'] = item-gt;RefPhy;      table['RefPhyPct'] = item-gt;RefPhyPct;      table['RefMag'] = item-gt;RefMag;      table['RefMagPct'] = item-gt;RefMagPct;      table['ImmMag'] = item-gt;ImmMag;      table['ImmMagPct'] = item-gt;ImmMagPct;      table['ImmPhy'] = item-gt;ImmPhy;      table['ImmPhyPct'] = item-gt;ImmPhyPct;      table['IsPhyImm'] = item-gt;IsPhyImm;      table['IsMagImm'] = item-gt;IsMagImm;      table['SellPrice'] = item-gt;SellPrice;      table['BuyPrice'] = item-gt;BuyPrice;      table['Bundle'] = item-gt;Bundle;      table['BundleDstId'] = item-gt;BundleDstId;      table['BuffId1'] = item-gt;BuffId1;      table['BuffId2'] = item-gt;BuffId2;      table['BuffId3'] = item-gt;BuffId3;      table['BuffId4'] = item-gt;BuffId4;      table['Rate'] = item-gt;Rate;      table['GemType'] = item-gt;GemType;      table['GemMatch'] = item-gt;GemMatch;      table['GemAtt1'] = item-gt;GemAtt1;      table['GemAttValue1'] = item-gt;GemAttValue1;      table['GemWarrior'] = item-gt;GemWarrior;      table['GemMage'] = item-gt;GemMage;      table['GemTao'] = item-gt;GemTao;      table['GemLevel'] = item-gt;GemLevel;      table['GemSynthesisLevel'] = item-gt;GemSynthesisLevel;      table['GemDigLevel'] = item-gt;GemDigLevel;      table['SynthesisId'] = item-gt;SynthesisId;      table['WhetherShowinHack'] = item-gt;WhetherShowinHack;      table['WhetherPick'] = item-gt;WhetherPick;      table['WhetherShowinEarth'] = item-gt;WhetherShowinEarth;      table['WhetherAcuraTip'] = item-gt;WhetherAcuraTip;      table['E1'] = item-gt;E1;      table['E2'] = item-gt;E2;      table['E3'] = item-gt;E3;  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SendMail" value="lualib:SendMail($VAR1$)&#10;$END$" description="SendMail=&quot;bool  SendMail(string  sender_name,string  receiver_name,string  text) 给某个玩家发送一封文本邮件.  参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容., 返回:true表示投递成功,false表示失败. 备注:若玩家不在线，则会在玩家上线后收到邮件  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetMapGuid" value="lualib:Map_GetMapGuid($VAR1$)&#10;$END$" description="Map_GetMapGuid=&quot;string  Map_GetMapGuid(string  strMapKey) 取得地图的GUID.  参数:strMapKey 地图的KeyName., 返回:地图的GUID,出错返回''. 备注:如果地图不在本GS上，虽然可以取到地图GUID，但是地图的格子信息是空的  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MapKey2ID" value="lualib:MapKey2ID($VAR1$)&#10;$END$" description="MapKey2ID=&quot;uint32  MapKey2ID(string  strMapKey) 根据地图的KeyName取得地图的ID.  参数:strMapKey 地图的KeyName., 返回:地图的ID,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetWidth" value="lualib:Map_GetWidth($VAR1$)&#10;$END$" description="Map_GetWidth=&quot;uint16  Map_GetWidth(string  strMap) 取得地图的宽度.  参数:strMap 地图的GUID., 返回:地图宽度,出错返回0. 备注:地图必须在本GS上  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetHeight" value="lualib:Map_GetHeight($VAR1$)&#10;$END$" description="Map_GetHeight=&quot;uint16  Map_GetHeight(string  strMap) 取得地图的高度.  参数:strMap 地图的GUID., 返回:地图高度,出错返回0. 备注:地图必须在本GS上  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetPlayerCount" value="lualib:Map_GetPlayerCount($VAR1$)&#10;$END$" description="Map_GetPlayerCount=&quot;int32  Map_GetPlayerCount(string  strMap,bool  bIgnoreDied) 取得地图上玩家的数量.  参数:strMap 地图的GUID.,bIgnoreDied 是否忽略死亡角色., 返回:玩家数量,出错返回-1. 备注:地图必须在本GS上  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetMonsterCount" value="lualib:Map_GetMonsterCount($VAR1$)&#10;$END$" description="Map_GetMonsterCount=&quot;int32  Map_GetMonsterCount(string  strMap,string  strMonsterKey,bool  bIgnoreDied,bool  bIgnoreServant) 取得地图上怪物的数量.  参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果为'',则代表所有怪.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物., 返回:怪物数量,出错返回-1. 备注:地图必须在本GS上 monster_key == ''，取所有怪  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetRegionPlayers" value="lualib:Map_GetRegionPlayers($VAR1$)&#10;$END$" description="Map_GetRegionPlayers=&quot;table  Map_GetRegionPlayers(string  strMap,uint16  wX,uint16  wY,uint16  wRange,bool  bIgnoreDied) [此函数过期, 禁用] 获取地图区域内的玩家列表.  参数:strMap 地图的GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,bIgnoreDied 是否忽略死亡角色., 返回:区域内玩家列表,返回lua table. 参考:Map_GetRegionPlayersEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetRegionMonsters" value="lualib:Map_GetRegionMonsters($VAR1$)&#10;$END$" description="Map_GetRegionMonsters=&quot;table  Map_GetRegionMonsters(string  strMap,string  strMonsterKey,uint16  wX,uint16  wY,uint16  wRange,bool  bIgnoreDied,bool  bIgnoreServant) [此函数过期, 禁用] 获取地图区域内的怪物列表.  参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果参数为'',则匹配所有怪物.,wX X坐标.,wY Y坐标.,wRange 范围.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物., 返回:区域内怪物列表,返回lua table. 备注:monster_name == ''，取所有怪 参考:Map_GetRegionMonstersEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetRegionItems" value="lualib:Map_GetRegionItems($VAR1$)&#10;$END$" description="Map_GetRegionItems=&quot;table  Map_GetRegionItems(string  strMap,string  strItemKey,uint16  wX,uint16  wY,uint16  wRange) [此函数过期, 禁用] 获取地图区域内的物品列表.  参数:strMap 地图的GUID.,strItemKey 物品的KeyName.如果该参数为'',则匹配所有物品.,wX X坐标.,wY Y坐标.,wRange 范围., 返回:区域内物品列表,返回lua table. 备注:item_name == ''，取所有道具 参考:Map_GetRegionItemsEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenItem" value="lualib:Map_GenItem($VAR1$)&#10;$END$" description="Map_GenItem=&quot;string  Map_GenItem(string  strMap,uint16  wX,uint16  wY,string  strItemKey,uint16  wCount,bool  bMustEmpty,uint32  dwFreeze) 在地图上指定位置刷出物品.  参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,strItemKey 物品的KeyName.,wCount 物品数量,必须不大于最大堆叠数.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位毫秒., 返回:物品的GUID,失败返回''. 备注:道具数量不可大于物品的最大堆叠数，否则会失败。比如：灵元珠最大堆叠数是999，如果count=1000，则接口调用失败。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenItemRnd" value="lualib:Map_GenItemRnd($VAR1$)&#10;$END$" description="Map_GenItemRnd=&quot;string  Map_GenItemRnd(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strItemKey,uint16  wCount,bool  bMustEmpty,uint32  dwFreeze) 在地图上随机位置刷出物品.  参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,strItemKey 物品的KeyName.,wCount 物品数量,必须不大于最大堆叠数.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位毫秒., 返回:物品的GUID,失败返回''. 备注:道具数量不可大于物品的最大堆叠数，否则会失败。比如：灵元珠最大堆叠数是999，如果count=1000，则接口调用失败。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_BatchGenMonster" value="lualib:Map_BatchGenMonster($VAR1$)&#10;$END$" description="Map_BatchGenMonster=&quot;bool  Map_BatchGenMonster(string  strMap,string  strMonsterKey,uint16  wCount,bool  bCanRelive) 在地图中随机刷怪.  参数:strMap 地图GUID.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenMonster" value="lualib:Map_GenMonster($VAR1$)&#10;$END$" description="Map_GenMonster=&quot;bool  Map_GenMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir,string  strMonsterKey,uint16  wCount,bool  bCanRelive) 在地图中指定范围刷怪.  参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenSingleMonster" value="lualib:Map_GenSingleMonster($VAR1$)&#10;$END$" description="Map_GenSingleMonster=&quot;string  Map_GenSingleMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir,string  strMonsterKey,bool  bCanRelive) 在地图中指定范围刷单只怪.  参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,bCanRelive 是否可以复活., 返回:怪物GUID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenNpc" value="lualib:Map_GenNpc($VAR1$)&#10;$END$" description="Map_GenNpc=&quot;string  Map_GenNpc(string  strMap,string  strNpcKey,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir) 在地图中指定范围刷NPC.  参数:strMap 地图GUID.,strNpcKey NPC的KeyName.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向., 返回:NPC的GUID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenNpcRnd" value="lualib:Map_GenNpcRnd($VAR1$)&#10;$END$" description="Map_GenNpcRnd=&quot;string  Map_GenNpcRnd(string  strMap,string  strNpcKey) 在地图中随机位置刷NPC.  参数:strMap 地图GUID.,strNpcKey NPC的KeyName., 返回:NPC的GUID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_ClearMonster" value="lualib:Map_ClearMonster($VAR1$)&#10;$END$" description="Map_ClearMonster=&quot;bool  Map_ClearMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strMonsterKey,bool  bIgnoreDied,bool  bIgnorePet) 清理地图指定范围中的怪物.  参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,strMonsterKey 怪物的KeyName.,bIgnoreDied 是否忽略死亡的怪.,bIgnorePet 是否忽略玩家随从., 返回:成功或失败. 备注:monster_key == ''，取所有怪  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_ClearItem" value="lualib:Map_ClearItem($VAR1$)&#10;$END$" description="Map_ClearItem=&quot;void  Map_ClearItem(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strItemKey) 清理地图指定范围中的物品.  参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,strItemKey 物品的KeyName., 返回:无返回值. 备注:item_key == ''，取所有道具  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_ClearNpc" value="lualib:Map_ClearNpc($VAR1$)&#10;$END$" description="Map_ClearNpc=&quot;bool  Map_ClearNpc(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strNpcKey) 清理地图指定范围中的NPC.  参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,strNpcKey NPC的KeyName,如果为''则清所有NPC., 返回:无. 备注:npc_key == ''，取所有NPC  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_AddEffect" value="lualib:Map_AddEffect($VAR1$)&#10;$END$" description="Map_AddEffect=&quot;bool  Map_AddEffect(string  strMap,uint16  wX,uint16  wY,uint32  dwEffectID,uint32  dwLife) 在地图指定位置播放特效.  参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,dwEffectID 特效ID,请参考策划配置表.,dwLife 特效持续时间,单位秒., 返回:成功或失败. 备注:特效没有出现包，所有当前范围以外的玩家永远不会看到该特效  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_IsInGS" value="lualib:Map_IsInGS($VAR1$)&#10;$END$" description="Map_IsInGS=&quot;bool  Map_IsInGS(string  strMapKey) 判断某地图是否在本GS上.  参数:strMapKey 地图的KeyName., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_AddJumpPoint" value="lualib:Map_AddJumpPoint($VAR1$)&#10;$END$" description="Map_AddJumpPoint=&quot;bool  Map_AddJumpPoint(string  strSourMap,string  strDestMap,uint16  wSourX,uint16  wSourY,uint16  wDestX,uint16  wDestY) 在地图上添加跳转点.  参数:strSourMap 源地图的GUID.,strDestMap 目标地图的GUID.,wSourX 源地图坐标X.,wSourY 源地图坐标Y.,wDestX 目标地图坐标X.,wDestY 目标地图坐标Y., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_DelJumpPoint" value="lualib:Map_DelJumpPoint($VAR1$)&#10;$END$" description="Map_DelJumpPoint=&quot;bool  Map_DelJumpPoint(string  strMap,uint16  wSourX,uint16  wSourY) 删除地图上的跳转点.  参数:strMap 地图的GUID.,wSourX 跳转点的源地图坐标X.,wSourY 跳转点的源地图坐标Y., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetRegionNpcs" value="lualib:Map_GetRegionNpcs($VAR1$)&#10;$END$" description="Map_GetRegionNpcs=&quot;table  Map_GetRegionNpcs(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strNpcKey) [此函数过期, 禁用] 获取地图区域内的NPC列表.  参数:strMap 地图的GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,strNpcKey NPC的KeyName.如果参数为'',则匹配所有NPC., 返回:区域内NPC列表,返回lua table. 备注:npc_key == ''，取所有NPC 参考:Map_GetRegionNpcsEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetMapNpc" value="lualib:Map_GetMapNpc($VAR1$)&#10;$END$" description="Map_GetMapNpc=&quot;string  Map_GetMapNpc(string  strMap,string  strNpcKey) 获取地图中某个NPC的GUID.  参数:strMap 地图的GUID.,strNpcKey NPC的KeyName., 返回:NPC的GUID,出错返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_JumpXY" value="lualib:Map_JumpXY($VAR1$)&#10;$END$" description="Map_JumpXY=&quot;void  Map_JumpXY(string  strMap,string  strPlayer,uint16  wX,uint16  wY,uint16  wRange) 玩家跳地图.  参数:strMap 副本的GUID.,strPlayer 玩家的GUID.,wX 跳转坐标X.,wY 跳转坐标Y.,wRange 跳转坐标范围., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_JumpRnd" value="lualib:Map_JumpRnd($VAR1$)&#10;$END$" description="Map_JumpRnd=&quot;bool  Map_JumpRnd(string  strMap,string  strPlayer) 玩家随机跳地图.  参数:strMap 副本的GUID.,strPlayer 玩家的GUID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_CreateDgn" value="lualib:Map_CreateDgn($VAR1$)&#10;$END$" description="Map_CreateDgn=&quot;string  Map_CreateDgn(string  strMapKey,bool  bLoadGrid,uint32  dwLife) 创建副本地图.  参数:strMapKey 地图的KeyName.,bLoadGrid 是否加载地图格子, true = 直接加载地图格子,副本开始销毁倒计时. false = 当有玩家进入时才加载地图格子,副本开始销毁倒计时.,dwLife 副本的生存时间,单位秒., 返回:副本的GUID. 备注:load_grid：决定系统是不是立即初始化副本，为true时副本立即被初始化，并开始销毁倒计时。为false，只有当玩家第一次进入副本时才开始初始化，这样做可以省内存，因为有些副本可能生成了但从来没人进去。 Life_time：决定副本的生存时间，如果life_time=0副本创建后立即被销毁。Life_time的值是一个相对时间，设置过大的数值会造成溢出。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_DestroyDgn" value="lualib:Map_DestroyDgn($VAR1$)&#10;$END$" description="Map_DestroyDgn=&quot;void  Map_DestroyDgn(string  strMap) 销毁副本地图.  参数:strMap 副本地图的GUID., 返回:无返回值. 备注:副本销毁前，会将副本中的玩家传送到进入时的位置，副本中的道具、NPC、怪物一切对象会自动销毁。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetDgnTicket" value="lualib:Player_SetDgnTicket($VAR1$)&#10;$END$" description="Player_SetDgnTicket=&quot;bool  Player_SetDgnTicket(string  strPlayer,string  strMap) 给玩家设置副本门票.  参数:strPlayer 玩家的GUID.,strMap 副本的GUID., 返回:成功或失败. 备注:副本门票是一个形象的说法。可以用来唯一标识副本实例。在进入副本之前必须给玩家打上副本门票。 一个地图只要被配成了副本，服务器就允许生成多个地图实例。 当服务器启动时会创建地图数据。当地图类型为固定地图时，如果该地图不是配置在本GS上，服务器不会加载地图格子信息（省资源）。如若地图类型为副本地图时，服务器则总是加载地图格子信息（忽略GS信息），该格子信息用来为创建副本做参照，因为副本在每个GS上都有可能被创建（服务器根据负载动态选择）。 副本的创建分二种，一种是创建时就加载格子信息。另一种是当有玩家进  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_HasDgnTicket" value="lualib:Player_HasDgnTicket($VAR1$)&#10;$END$" description="Player_HasDgnTicket=&quot;bool  Player_HasDgnTicket(string  strPlayer,string  strMap) 判断玩家是否拥有副本门票.  参数:strPlayer 玩家的GUID.,strMap 副本的GUID., 返回:成功或失败. 备注:如果玩家没有该副本的门票或副本已关闭则返回false  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_EnterDgn" value="lualib:Player_EnterDgn($VAR1$)&#10;$END$" description="Player_EnterDgn=&quot;bool  Player_EnterDgn(string  strPlayer,string  strMapKey,uint16  wX,uint16  wY,uint16  wRange) 让玩家进入副本.  参数:strPlayer 玩家的GUID.,strMapKey 副本的KeyName.,wX 副本的X坐标.,wY 副本的Y坐标.,wRange 坐标范围., 返回:成功或失败. 警告:多GS情况下,调用该接口后不能再对玩家进行任何操作.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetDgnByTicket" value="lualib:Player_GetDgnByTicket($VAR1$)&#10;$END$" description="Player_GetDgnByTicket=&quot;string  Player_GetDgnByTicket(string  strPlayer,string  strMapKey) 根据玩家的副本KeyName找到副本的GUID.  参数:strPlayer 玩家的GUID.,strMapKey 副本的KeyName., 返回:副本的GUID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_ClearDgnPlayer" value="lualib:Map_ClearDgnPlayer($VAR1$)&#10;$END$" description="Map_ClearDgnPlayer=&quot;bool  Map_ClearDgnPlayer(string  strMap) 清理副本中所有的玩家.  参数:strMap 副本的GUID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_ClearDgnMonster" value="lualib:Map_ClearDgnMonster($VAR1$)&#10;$END$" description="Map_ClearDgnMonster=&quot;bool  Map_ClearDgnMonster(string  strMap) 清理副本中所有的怪物.  参数:strMap 副本的GUID., 返回:成功或失败. 警告:只清理普通怪,玩家的随从、守护怪不清理.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_ClearDgnItem" value="lualib:Map_ClearDgnItem($VAR1$)&#10;$END$" description="Map_ClearDgnItem=&quot;bool  Map_ClearDgnItem(string  strMap) 清理副本中所有的物品.  参数:strMap 副本的GUID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_ClearDgnNpc" value="lualib:Map_ClearDgnNpc($VAR1$)&#10;$END$" description="Map_ClearDgnNpc=&quot;bool  Map_ClearDgnNpc(string  strMap) 清理副本中所有的NPC.  参数:strMap 副本的GUID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_IsDgnExist" value="lualib:Map_IsDgnExist($VAR1$)&#10;$END$" description="Map_IsDgnExist=&quot;bool  Map_IsDgnExist(string  strMap) 判断副本是否存在.  参数:strMap 副本的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsFamilyAlly" value="lualib:IsFamilyAlly($VAR1$)&#10;$END$" description="IsFamilyAlly=&quot;bool  IsFamilyAlly(string  strPlayer,string  strFamilyName) 判断玩家的公会与指定的公会是否为同盟.  参数:strPlayer 玩家的GUID.,strFamilyName 同盟公会的名字., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsInFamily" value="lualib:IsInFamily($VAR1$)&#10;$END$" description="IsInFamily=&quot;bool  IsInFamily(string  strPlayer,string  strFamilyName) 判断玩家是否在指定的公会中.  参数:strPlayer 玩家的GUID.,strFamilyName 公会的名字., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasFamilyWar" value="lualib:HasFamilyWar($VAR1$)&#10;$END$" description="HasFamilyWar=&quot;bool  HasFamilyWar(string  strFamilyName1,string  strFamilyName2) 判断两个行会是否处于战争状态.  参数:strFamilyName1 第一个行会的名字.,strFamilyName2 第二个行会的名字., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetRunningFamilyWar" value="lualib:GetRunningFamilyWar($VAR1$)&#10;$END$" description="GetRunningFamilyWar=&quot;table  GetRunningFamilyWar(string  strPlayer) 取得正在与玩家行会作战的行会列表.  参数:strPlayer 玩家的GUID., 返回:作战行会列表,返回lua table. 警告:服务器功能的扩展,脚本作者不应该使用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:NotifyRunningFamilyWar" value="lualib:NotifyRunningFamilyWar($VAR1$)&#10;$END$" description="NotifyRunningFamilyWar=&quot;void  NotifyRunningFamilyWar(string  strPlayer) 将正在与玩家行会作战的行会列表知通给玩家.  参数:strPlayer 玩家的GUID., 返回:无返回值. 警告:服务器功能的扩展,脚本作者不应该使用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:CreateFamily" value="lualib:CreateFamily($VAR1$)&#10;$END$" description="CreateFamily=&quot;int32  CreateFamily(string  strPlayer,string  strFamilyName) 验证是否能创建行会 参数:strPlayer 玩家GUID.,strFamilyName 行会名字., 返回:返回0可以创建,返回-1代表失败. 备注:异步操作，不能保证成功  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetAllFamilys" value="lualib:GetAllFamilys($VAR1$)&#10;$END$" description="GetAllFamilys=&quot;table  GetAllFamilys(void  ) 取得服务器上所有行会的名字列表.  参数: , 返回:行会名列表,返回lua table.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetFamilyJoinList" value="lualib:GetFamilyJoinList($VAR1$)&#10;$END$" description="GetFamilyJoinList=&quot;int32  GetFamilyJoinList(string  strPlayer) 发送行会列表到客户端 参数:strPlayer 玩家GUID., 返回:返回0成功,返回-1代表失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetFamilyName" value="lualib:GetFamilyName($VAR1$)&#10;$END$" description="GetFamilyName=&quot;string  GetFamilyName(string  strPlayer) 获取玩家的行会名.  参数:strPlayer 玩家GUID., 返回:行会名,没有则返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetFamilyTitle" value="lualib:GetFamilyTitle($VAR1$)&#10;$END$" description="GetFamilyTitle=&quot;string  GetFamilyTitle(string  strPlayer) 获取玩家的行会封号.  参数:strPlayer 玩家GUID., 返回:行会封号,没有则返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:StartFamilyWar" value="lualib:StartFamilyWar($VAR1$)&#10;$END$" description="StartFamilyWar=&quot;bool  StartFamilyWar(string  strFamily1,string  strFamily2) 通知CS二个行会开始交战 参数:strFamily1 行会的名字.,strFamily2 行会的名字., 返回:成功或失败. 警告:该接口用来扩展服务器的功能,脚本作者不要使用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetAllCastle" value="lualib:GetAllCastle($VAR1$)&#10;$END$" description="GetAllCastle=&quot;table  GetAllCastle(void  ) 取得服务器里的所有城堡.  参数: , 返回:服务器城堡列表,返回lua table.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasCastle" value="lualib:HasCastle($VAR1$)&#10;$END$" description="HasCastle=&quot;bool  HasCastle(string  strCastleName) 判断某城堡是否存在.  参数:strCastleName 城堡名., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsCastleWarStart" value="lualib:IsCastleWarStart($VAR1$)&#10;$END$" description="IsCastleWarStart=&quot;bool  IsCastleWarStart(string  strCastleName) 判断某城堡战是否开启.  参数:strCastleName 城堡名., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:StartCastleWar" value="lualib:StartCastleWar($VAR1$)&#10;$END$" description="StartCastleWar=&quot;bool  StartCastleWar(string  strCastleName,string  strFamilys,string  strStartTime,uint32  dwDuration) 开启城堡战.  参数:strCastleName 城堡名.,strFamilys 攻城的所有行会.如:行会1amp;行会2amp;行会3amp;...amp;行会n.,strStartTime 攻城时间.如:2012-10-20 20:30:00.,dwDuration 持续时间,单位:秒., 返回:成功或失败. 备注:familys：行会1amp;行会2amp;行会3hellip;  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:StopCastleWar" value="lualib:StopCastleWar($VAR1$)&#10;$END$" description="StopCastleWar=&quot;bool  StopCastleWar(string  strCastleName) 停止城堡战.  参数:strCastleName 城堡名., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasCastleWar" value="lualib:HasCastleWar($VAR1$)&#10;$END$" description="HasCastleWar=&quot;bool  HasCastleWar(string  strCastleName,string  strFamilyName) 判断某行会是否在某城堡的攻击者列表中.  参数:strCastleName 城堡名.,strFamilyName 行会名., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetCastleOwnFamily" value="lualib:GetCastleOwnFamily($VAR1$)&#10;$END$" description="GetCastleOwnFamily=&quot;string  GetCastleOwnFamily(string  strCastleName) 获取某城堡的拥有者行会.  参数:strCastleName 城堡名., 返回:行会名.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetCastleOwnFamily" value="lualib:SetCastleOwnFamily($VAR1$)&#10;$END$" description="SetCastleOwnFamily=&quot;void  SetCastleOwnFamily(string  strCastleName,string  strFamilyName) 设置某城堡的拥有者行会.  参数:strCastleName 城堡名.,strFamilyName 行会名., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetCastleAttackFamily" value="lualib:GetCastleAttackFamily($VAR1$)&#10;$END$" description="GetCastleAttackFamily=&quot;string  GetCastleAttackFamily(string  strCastleName) 获取某城堡的所有攻击者行会.  参数:strCastleName 城堡名., 返回:所有的攻击者行会,多个行会间用amp;隔开.如:行会1amp;行会2amp;行会3amp;...amp;行会n.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetCastleTempFamily" value="lualib:GetCastleTempFamily($VAR1$)&#10;$END$" description="GetCastleTempFamily=&quot;string  GetCastleTempFamily(string  strCastleName) 获取某城堡的临时占有行会.  参数:strCastleName 城堡名., 返回:临时占有行会的名字.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetCastleTempFamily" value="lualib:SetCastleTempFamily($VAR1$)&#10;$END$" description="SetCastleTempFamily=&quot;void  SetCastleTempFamily(string  strCastleName,string  strFamilyName) 设置某城堡的临时占有行会.  参数:strCastleName 城堡名.,strFamilyName 临时占有行会名., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetCastleCustomVarInt" value="lualib:SetCastleCustomVarInt($VAR1$)&#10;$END$" description="SetCastleCustomVarInt=&quot;void  SetCastleCustomVarInt(string  strCastleName,string  strKey,int32  iValue) 设置某城堡的数值型自定义变量.  参数:strCastleName 城堡名.,strKey 变量名.,iValue 变量值., 返回:无返回值. 备注:类似于SetInt，只是SetCastleCustomVarInt是专给城堡设置变量。常与GetCastleCustomVarInt一起用  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetCastleCustomVarInt" value="lualib:GetCastleCustomVarInt($VAR1$)&#10;$END$" description="GetCastleCustomVarInt=&quot;int32  GetCastleCustomVarInt(string  strCastleName,string  strKey) 取得某城堡的数值型自定义变量.  参数:strCastleName 城堡名.,strKey 变量名., 返回:变量值. 备注:类似于GetInt，只是GetCastleCustomVarInt是专给城堡设置变量。常与SetCastleCustomVarInt一起用  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetCastleCustomVarStr" value="lualib:SetCastleCustomVarStr($VAR1$)&#10;$END$" description="SetCastleCustomVarStr=&quot;void  SetCastleCustomVarStr(string  strCastleName,string  strKey,string  strValue) 设置某城堡的字符型自定义变量.  参数:strCastleName 城堡名.,strKey 变量名.,strValue 变量值., 返回:无返回值. 备注:跟SetStr，只是SetCastleCustomVarStr专门给城堡设置字符型变量，常和GetCastleCustomVarStr一起用  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetCastleCustomVarStr" value="lualib:GetCastleCustomVarStr($VAR1$)&#10;$END$" description="GetCastleCustomVarStr=&quot;string  GetCastleCustomVarStr(string  strCastleName,string  strKey) 取得某城堡的字符型自定义变量.  参数:strCastleName 城堡名.,strKey 变量名., 返回:变量值. 备注:跟GetStr，只是GetCastleCustomVarStr专门给城堡设置字符型变量，常和SetCastleCustomVarStr一起用  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetCastleMapGuid" value="lualib:GetCastleMapGuid($VAR1$)&#10;$END$" description="GetCastleMapGuid=&quot;string  GetCastleMapGuid(string  strCastleName) 取得某城堡的攻城地图GUID.  参数:strCastleName 城堡名., 返回:攻城地图的GUID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetCastleBasiGuid" value="lualib:GetCastleBasiGuid($VAR1$)&#10;$END$" description="GetCastleBasiGuid=&quot;string  GetCastleBasiGuid(string  strCastleName) 取得某城堡的皇宫地图GUID.  参数:strCastleName 城堡名., 返回:皇宫地图的GUID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddTitle" value="lualib:AddTitle($VAR1$)&#10;$END$" description="AddTitle=&quot;void  AddTitle(string  strPlayer,uint16  wTitleID) 给玩家添加称号.  参数:strPlayer 玩家的GUID.,wTitleID 称号的ID., 返回:无返回值. 备注:根据称号ID，给玩家配置相关称号  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasTitle" value="lualib:HasTitle($VAR1$)&#10;$END$" description="HasTitle=&quot;bool  HasTitle(string  strPlayer,uint16  wTitleID) 判断玩家是否拥有添加称号.  参数:strPlayer 玩家的GUID.,wTitleID 称号的ID., 返回:无.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:RemoveTitle" value="lualib:RemoveTitle($VAR1$)&#10;$END$" description="RemoveTitle=&quot;void  RemoveTitle(string  strPlayer,uint16  wTitleID) 移除玩家称号.  参数:strPlayer 玩家的GUID.,wTitleID 称号的ID., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ApplyTitle" value="lualib:ApplyTitle($VAR1$)&#10;$END$" description="ApplyTitle=&quot;void  ApplyTitle(string  strPlayer,uint16  wTitleID) 给玩家应用称号.  参数:strPlayer 玩家的GUID.,wTitleID 称号的ID., 返回:无返回值. 警告:如果称号在使用中,则会取消该称号.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:CanAcceptQuest" value="lualib:CanAcceptQuest($VAR1$)&#10;$END$" description="CanAcceptQuest=&quot;bool  CanAcceptQuest(string  strPlayer,uint16  wQuestID) 判断某任务是否可接.  参数:strPlayer 玩家的GUID.,wQuestID 任务的ID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:CanAccomplishQuest" value="lualib:CanAccomplishQuest($VAR1$)&#10;$END$" description="CanAccomplishQuest=&quot;bool  CanAccomplishQuest(string  strPlayer,uint16  wQuestID) 判断某任务是否可提交.  参数:strPlayer 玩家的GUID.,wQuestID 任务的ID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AcceptQuest" value="lualib:AcceptQuest($VAR1$)&#10;$END$" description="AcceptQuest=&quot;bool  AcceptQuest(string  strPlayer,uint16  wQuestID) 玩家接受任务.  参数:strPlayer 玩家的GUID.,wQuestID 任务的ID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AccomplishQuest" value="lualib:AccomplishQuest($VAR1$)&#10;$END$" description="AccomplishQuest=&quot;bool  AccomplishQuest(string  strPlayer,uint16  wQuestID,uint16  wSelect) 玩家提交任务.  参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,wSelect 选择项,默认填0., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasQuest" value="lualib:HasQuest($VAR1$)&#10;$END$" description="HasQuest=&quot;bool  HasQuest(string  strPlayer,uint16  wQuestID) 判断玩家是否拥有某个任务.  参数:strPlayer 玩家的GUID.,wQuestID 任务的ID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DropQuest" value="lualib:DropQuest($VAR1$)&#10;$END$" description="DropQuest=&quot;bool  DropQuest(string  strPlayer,uint16  wQuestID) 玩家放弃任务.  参数:strPlayer 玩家的GUID.,wQuestID 任务的ID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ForceAcceptQuest" value="lualib:ForceAcceptQuest($VAR1$)&#10;$END$" description="ForceAcceptQuest=&quot;bool  ForceAcceptQuest(string  strPlayer,uint16  wQuestID) 强制玩家接受任务.  参数:strPlayer 玩家的GUID.,wQuestID 任务的ID., 返回:成功或失败. 备注:强制接受任务  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ForceQuestReady" value="lualib:ForceQuestReady($VAR1$)&#10;$END$" description="ForceQuestReady=&quot;bool  ForceQuestReady(string  strPlayer,uint16  wQuestID) 强制玩家完成任务.  参数:strPlayer 玩家的GUID.,wQuestID 任务的ID., 返回:成功或失败. 备注:强制完成任务  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:QuestRemainCount" value="lualib:QuestRemainCount($VAR1$)&#10;$END$" description="QuestRemainCount=&quot;int32  QuestRemainCount(string  strPlayer,uint16  wQuestID) 查询玩家任务剩余次数.  参数:strPlayer 玩家的GUID.,wQuestID 任务的ID., 返回:剩余次数.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GenEscorter" value="lualib:GenEscorter($VAR1$)&#10;$END$" description="GenEscorter=&quot;bool  GenEscorter(string  strPlayer,string  strMonsterKey,uint32  dwLife) 生成需要护送的镖车.  参数:strPlayer 玩家的GUID.,strMonsterKey 镖车的KeyName.,dwLife 镖车的生存时间,单位:秒., 返回:成功或失败. 备注:life存活时间为相对时间，请不要设置太大的值以避免溢出 当玩家已有镖车时，再次生成镖车，会将以前的镖车移掉（前提是你的镖车在附近） 跨GS后镖车的GUID会变更，所以不要事先保存镖车GUID备用，应该实时去取  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GenTraveler" value="lualib:GenTraveler($VAR1$)&#10;$END$" description="GenTraveler=&quot;bool  GenTraveler(string  strPlayer,string  strMonsterKey,uint32  dwLife,string  strPaths) 生成自动行走的镖车.  参数:strPlayer 玩家的GUID.,strMonsterKey 镖车的KeyName.,dwLife 镖车的生存时间,单位:秒.,strPaths 镖车的路径字符串.详情请参考镖车脚本写法., 返回:成功或失败. 备注:life存活时间为相对时间，请不要设置太大的值以避免溢出 当玩家已有镖车时，再次生成镖车，会将以前的镖车移掉（前提是你的镖车在附近） 跨GS后镖车的GUID会变更，所以不要事先保存镖车GUID备用，应该实时去取  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsEscorterDied" value="lualib:IsEscorterDied($VAR1$)&#10;$END$" description="IsEscorterDied=&quot;bool  IsEscorterDied(string  strPlayer) 判断玩家镖车是否存活.  参数:strPlayer 玩家的GUID., 返回:是或否. 备注:玩家没有镖车时，也处于镖车死亡状态  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:RemoveEscorter" value="lualib:RemoveEscorter($VAR1$)&#10;$END$" description="RemoveEscorter=&quot;bool  RemoveEscorter(string  strPlayer) 移除玩家镖车.  参数:strPlayer 玩家的GUID., 返回:成功或失败. 备注:新引擎更新后，移除镖车时，镖车不需要在你附近  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetEscorter" value="lualib:GetEscorter($VAR1$)&#10;$END$" description="GetEscorter=&quot;string  GetEscorter(string  strPlayer) 取得玩家镖车GUID.  参数:strPlayer 玩家的GUID., 返回:镖车GUID,出错返回''. 备注:镖车必须与你在同一个GS上，否则返回'' 跨GS后镖车的GUID会变更，所以不要事先保存镖车GUID备用，应该实时去取 警告:跨GS后镖车的GUID会变更.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddScheduled" value="lualib:AddScheduled($VAR1$)&#10;$END$" description="AddScheduled=&quot;bool  AddScheduled(uint32  dwScheduleID,string  strScheduleName,int16  iType,table  tTime,string  strCallBack,string  strParam) 给服务器添加计划任务.  参数:dwScheduleID 计划任务ID,通过脚本添加的计划任务ID必须大于100000.,strScheduleName 计划任务名字.,iType 计划任务类型:1 = Y-m-d h:m:s 特定时间, 2 = m-d h:m:s 每年执行, 3 = d h:m:s 每月执行, 4 = w h:m:s 每周执行, 5 = h:m:s 每天执行.,tTime 计划任务时间表.如:计划任务类型为4,则{'0 19:30:00', '3 19:30:00'}，代表每周日19:30:00、周三19:30:00触发计划任务.每周的第一天从周日开始.,strCallBack 计划任务回调函数.,strParam 参数，脚本使用者自由设置,方便上下文切换,回调时由服务器做为参数自动传回., 返回:成功或失败. 备注:计划任务跟活动共享ID，因为活动本身就属于计划任务的一部分，所以添加计划任务时不要使用跟活动相同的ID，避免造成ID冲突。 通过脚本添加的计划任务ID必须大于100000才能避免跟活动ID冲突。 计划任务类型: 1 %Y-%m-%d %h:%m:%s 特定时间 2 %m-%d %h:%m:%s 某年执行 3 %d %h:%m:%s 某日执行 4 %w %h:%m:%s 某周几执行 警告:通过脚本添加的计划任务ID必须大于100000.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DisableScheduled" value="lualib:DisableScheduled($VAR1$)&#10;$END$" description="DisableScheduled=&quot;void  DisableScheduled(uint32  dwScheduleID) 清除服务器计划任务.  参数:dwScheduleID 计划任务ID,通过脚本添加的计划任务ID必须大于100000., 返回:无返回值. 备注:不要跨GS调用  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:JoinCamp" value="lualib:JoinCamp($VAR1$)&#10;$END$" description="JoinCamp=&quot;bool  JoinCamp(string  strPlayer,uint32  dwCampID,uint32  dwIntegral) 加入活动.  参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,dwIntegral 该活动的积分值., 返回:成功或失败. 备注:调用该接口系统会自动计算玩家该活动当日参加次数、总参加次数、当日所获积分、总积分数。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:CampCount" value="lualib:CampCount($VAR1$)&#10;$END$" description="CampCount=&quot;uint32  CampCount(string  strPlayer,uint32  dwCampID) 取得该活动当天参与次数.  参数:strPlayer 玩家的GUID.,dwCampID 活动ID., 返回:当天参与活动次数.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:CampCounts" value="lualib:CampCounts($VAR1$)&#10;$END$" description="CampCounts=&quot;uint32  CampCounts(string  strPlayer,uint32  dwCampID) 取得该活动总计参与次数.  参数:strPlayer 玩家的GUID.,dwCampID 活动ID., 返回:总计参与活动次数.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:CampInteg" value="lualib:CampInteg($VAR1$)&#10;$END$" description="CampInteg=&quot;uint32  CampInteg(string  strPlayer,uint32  dwCampID) 取得该活动当天积分.  参数:strPlayer 玩家的GUID.,dwCampID 活动ID., 返回:当天活动积分.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:CampIntegs" value="lualib:CampIntegs($VAR1$)&#10;$END$" description="CampIntegs=&quot;uint32  CampIntegs(string  strPlayer,uint32  dwCampID) 取得该活动总计积分.  参数:strPlayer 玩家的GUID.,dwCampID 活动ID., 返回:总计活动积分.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:VerifyCampLevel" value="lualib:VerifyCampLevel($VAR1$)&#10;$END$" description="VerifyCampLevel=&quot;bool  VerifyCampLevel(string  strPlayer,uint32  dwCampID) 判断玩家是否满足活动等级.  参数:strPlayer 玩家的GUID.,dwCampID 活动ID., 返回:是或否. 备注:等级限制在活动管理表中。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:VerifyCampCount" value="lualib:VerifyCampCount($VAR1$)&#10;$END$" description="VerifyCampCount=&quot;bool  VerifyCampCount(string  strPlayer,uint32  dwCampID) 判断玩家是否被活动次数限制所允许.  参数:strPlayer 玩家的GUID.,dwCampID 活动ID., 返回:是或否. 备注:返回true表示该活动还能继续参加，返回false表示该活动已经没有可以参加的次数了。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_FileExists" value="lualib:IO_FileExists($VAR1$)&#10;$END$" description="IO_FileExists=&quot;bool  IO_FileExists(string  strFileName) 判断文件是否存在.  参数:strFileName 文件名., 返回:存在或不存在. 备注:只允许操作服务器data目录。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_FileCTime" value="lualib:IO_FileCTime($VAR1$)&#10;$END$" description="IO_FileCTime=&quot;string  IO_FileCTime(string  strFileName) 返回文件创建时间.  参数:strFileName 文件名., 返回:时间格式串. 备注:只允许操作服务器data目录。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_FileMTime" value="lualib:IO_FileMTime($VAR1$)&#10;$END$" description="IO_FileMTime=&quot;string  IO_FileMTime(string  strFileName) 返回文件修改时间.  参数:strFileName 文件名., 返回:时间格式串. 备注:只允许操作服务器data目录。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_CreateTextFile" value="lualib:IO_CreateTextFile($VAR1$)&#10;$END$" description="IO_CreateTextFile=&quot;bool  IO_CreateTextFile(string  strFileName,bool  bOverlap) 创建文本文件.  参数:strFileName 文件名.,bOverlap 是否覆盖. false = 文件存在时创建失败., 返回:成功或失败. 备注:只允许操作服务器data目录，如果原文件存在，并且不允许覆盖，则返回失败 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_EmptyTextFile" value="lualib:IO_EmptyTextFile($VAR1$)&#10;$END$" description="IO_EmptyTextFile=&quot;bool  IO_EmptyTextFile(string  strFileName) 清空文本文件内容.  参数:strFileName 文件名., 返回:成功或失败. 备注:只允许操作服务器data目录。清空文件。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_GetFileText" value="lualib:IO_GetFileText($VAR1$)&#10;$END$" description="IO_GetFileText=&quot;table  IO_GetFileText(string  strFileName) 读取文本文件内容,换行生成列表.  参数:strFileName 文件名., 返回:文件内容列表,返回lua table. 备注:只允许操作服务器data目录，按行返回文件的内容（不包括回车符）。行号从1开始。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_SetFileText" value="lualib:IO_SetFileText($VAR1$)&#10;$END$" description="IO_SetFileText=&quot;bool  IO_SetFileText(string  strFileName,string  strContent) 设置文本文件内容.  参数:strFileName 文件名.,strContent 文本内容., 返回:成功失败. 备注:只允许操作服务器data目录。先清除文件内容再写入新内容。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_AppendFile" value="lualib:IO_AppendFile($VAR1$)&#10;$END$" description="IO_AppendFile=&quot;bool  IO_AppendFile(string  strFileName,string  strContent) 追加文本内容到文本文件中.  参数:strFileName 文件名.,strContent 文本内容., 返回:成功失败. 备注:只允许操作服务器data目录，在文件尾追加新内容。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_CheckTextInFile" value="lualib:IO_CheckTextInFile($VAR1$)&#10;$END$" description="IO_CheckTextInFile=&quot;bool  IO_CheckTextInFile(string  strFileName,string  strContent) 检查文本内容是否等于文本文件中的某一行.  参数:strFileName 文件名.,strContent 文本内容., 返回:是或否. 备注:只允许操作服务器data目录。对文件中的每行进行字符串比较（不包括回车符），找到匹配的就返回true否则false。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_TextFileDeleteLineStr" value="lualib:IO_TextFileDeleteLineStr($VAR1$)&#10;$END$" description="IO_TextFileDeleteLineStr=&quot;bool  IO_TextFileDeleteLineStr(string  strFileName,string  strContent) 从文本文件中删除行内容为指定字符串的行.  参数:strFileName 文件名.,strContent 文本内容,不能包含回车换行符., 返回:成功或失败. 备注:只允许操作服务器data目录。先对文件中的每行进行字符串比较（不包括回车符），并删除最先匹配的。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_TextFileInsertLine" value="lualib:IO_TextFileInsertLine($VAR1$)&#10;$END$" description="IO_TextFileInsertLine=&quot;bool  IO_TextFileInsertLine(string  strFileName,uint32  dwLine,string  strContent) 在文本文件中插入内容.  参数:strFileName 文件名.,dwLine 前插行号.最小为1,最大为真实行数.,strContent 文本内容,不能包含回车换行符., 返回:成功或失败. 备注:只允许操作服务器data目录。插入方式为前插，即插入后的行号为参数指定的行号。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_TextFileDeleteLine" value="lualib:IO_TextFileDeleteLine($VAR1$)&#10;$END$" description="IO_TextFileDeleteLine=&quot;bool  IO_TextFileDeleteLine(string  strFileName,uint32  dwLine) 从文本文件中删除指定行.  参数:strFileName 文件名.,dwLine 行号.最小为1,最大为真实行数., 返回:成功或失败. 备注:只允许操作服务器data目录 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_TextFileGetLine" value="lualib:IO_TextFileGetLine($VAR1$)&#10;$END$" description="IO_TextFileGetLine=&quot;string  IO_TextFileGetLine(string  strFileName,uint32  dwLine) 从文本文件中取出指定行.  参数:strFileName 文件名.,dwLine 行号.最小为1,最大为真实行数., 返回:行内容. 备注:只允许操作服务器data目录。行号从1开始。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_TextFileRndGetLine" value="lualib:IO_TextFileRndGetLine($VAR1$)&#10;$END$" description="IO_TextFileRndGetLine=&quot;string  IO_TextFileRndGetLine(string  strFileName) 从文本文件中取出随机行.  参数:strFileName 文件名., 返回:行内容. 备注:只允许操作服务器data目录。随机取出某一行，不包括回车符。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_TextFileCheckLine" value="lualib:IO_TextFileCheckLine($VAR1$)&#10;$END$" description="IO_TextFileCheckLine=&quot;int32  IO_TextFileCheckLine(string  strFileName,string  strContent) 检查文本内容是否等于文本文件中的某一行,并返回行号.  参数:strFileName 文件名.,strContent 文本内容,不能包含回车换行符., 返回:行号,返之-1. 备注:只允许操作服务器data目录，直接将字符串跟文件中每一行进行字符串比较。返回最先匹配行的行号，行号从1开始。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_DirExists" value="lualib:IO_DirExists($VAR1$)&#10;$END$" description="IO_DirExists=&quot;bool  IO_DirExists(string  strDirName) 判断文件目录是否存在.  参数:strDirName 文件目录名., 返回:是或否. 备注:只允许操作服务器data目录。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_ForceDir" value="lualib:IO_ForceDir($VAR1$)&#10;$END$" description="IO_ForceDir=&quot;bool  IO_ForceDir(string  strDirName) 创建文件目录.  参数:strDirName 文件目录名.支持多级,如:aa/bb/cc,会依次创建三个目录., 返回:是或否. 备注:只允许操作服务器data目录，可以多级创建目录。 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_GetLuaPath" value="lualib:IO_GetLuaPath($VAR1$)&#10;$END$" description="IO_GetLuaPath=&quot;string  IO_GetLuaPath(void  ) 返回服务器LUA文件夹的绝对路径.  参数: , 返回:LUA文件夹路径.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_SetCustomVarInt" value="lualib:IO_SetCustomVarInt($VAR1$)&#10;$END$" description="IO_SetCustomVarInt=&quot;bool  IO_SetCustomVarInt(string  strKey,int  iValue) [此函数过期, 禁用] 在数据库中存储整型数值变量.  参数:strKey 变量名.,iValue 变量值, 返回:成功或失败. 备注:常和IO_GetCustomVarInt从数据库中读取自定义变量一起用 参考:SetDBNum,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_GetCustomVarInt" value="lualib:IO_GetCustomVarInt($VAR1$)&#10;$END$" description="IO_GetCustomVarInt=&quot;int  IO_GetCustomVarInt(string  strKey) [此函数过期, 禁用] 从数据库中读取整型数值变量.  参数:strKey 变量名., 返回:变量值. 参考:GetDBNum,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_ClearCustomVarInt" value="lualib:IO_ClearCustomVarInt($VAR1$)&#10;$END$" description="IO_ClearCustomVarInt=&quot;void  IO_ClearCustomVarInt(string  strKey) [此函数过期, 禁用] 从数据库中删除整型数值变量.  参数:strKey 变量名., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_SetCustomVarStr" value="lualib:IO_SetCustomVarStr($VAR1$)&#10;$END$" description="IO_SetCustomVarStr=&quot;bool  IO_SetCustomVarStr(string  strKey,string  iValue) [此函数过期, 禁用] 在数据库中存储字符型变量.  参数:strKey 变量名.,iValue 变量值, 返回:成功或失败. 备注:通常和IO_GetCustomVarStr()从数据库中读取自定义（字符型）变量，一起用 参考:SetDBStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_GetCustomVarStr" value="lualib:IO_GetCustomVarStr($VAR1$)&#10;$END$" description="IO_GetCustomVarStr=&quot;string  IO_GetCustomVarStr(string  strKey) [此函数过期, 禁用] 从数据库中读取字符型变量.  参数:strKey 变量名., 返回:变量值. 备注:通常和IO_SetCustomVarStr一起用 参考:GetDBStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_ClearCustomVarStr" value="lualib:IO_ClearCustomVarStr($VAR1$)&#10;$END$" description="IO_ClearCustomVarStr=&quot;void  IO_ClearCustomVarStr(string  strKey) [此函数过期, 禁用] 从数据库中删除字符型变量.  参数:strKey 变量名., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_item_appear" value="lualib:on_item_appear($VAR1$)&#10;$END$" description="on_item_appear=&quot;void  on_item_appear(string  strMap,string  strItem,uint16  wItemID,string  strItemKey,uint16  wX,uint16  wY) 物品出现在地图时回调.  参数:strMap 地图的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,wX 物品的X坐标.,wY 物品的Y坐标., 返回:无返回值. 备注:  lua_trigger_item_appear 物品在地图出现触发，回调函数:void on_item_appear(const std::stringamp; map, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key, unsigned short x, unsigned short y);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_leave_map" value="lualib:on_leave_map($VAR1$)&#10;$END$" description="on_leave_map=&quot;void  on_leave_map(string  strPlayer) 玩家离开地图时回调.  参数:strPlayer 玩家的GUID., 返回:无返回值. 备注:lua_trigger_leave_map 离开地图触发。非系统级触发，需要手动添加。   回调函数：void on_leave_map(const std::stringamp; player)。  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_enter_map" value="lualib:on_enter_map($VAR1$)&#10;$END$" description="on_enter_map=&quot;void  on_enter_map(string  strPlayer) 玩家进入地图时回调.  参数:strPlayer 玩家的GUID., 返回:无返回值. 备注:lua_trigger_enter_map 进入地图触发。非系统级触发，需要手动添加触发器。   回调函数：void on_enter_map(const std::stringamp; player)。  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_monster_disappear" value="lualib:on_monster_disappear($VAR1$)&#10;$END$" description="on_monster_disappear=&quot;void  on_monster_disappear(string  strMonster,uint16  wMonsterID,string  strMonsterName,uint16  wX,uint16  wY) 怪物消失在地图时回调.  参数:strMonster 怪物的GUID.,wMonsterID 怪物的ID.,strMonsterName 怪物的Name.,wX 怪物的X坐标.,wY 怪物的Y坐标., 返回:无返回值. 备注:  lua_trigger_monster_disappear 怪物消失触发，回调函数:void on_monster_disappear(const std::stringamp; monster, unsigned short monster_id, const std::stringamp; monster_key, unsigned short x, unsigned short y); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_monster_appear" value="lualib:on_monster_appear($VAR1$)&#10;$END$" description="on_monster_appear=&quot;void  on_monster_appear(string  strMonster,uint16  wMonsterID,string  strMonsterName,uint16  wX,uint16  wY) 怪物出现在地图时回调.  参数:strMonster 怪物的GUID.,wMonsterID 怪物的ID.,strMonsterName 怪物的Name.,wX 怪物的X坐标.,wY 怪物的Y坐标., 返回:无返回值. 备注:  lua_trigger_monster_appear 怪物出现触发，回调函数:void on_monster_appear(const std::stringamp; monster, unsigned short monster_id, const std::stringamp; monster_key, unsigned short x, unsigned short y); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_map_destroy" value="lualib:on_map_destroy($VAR1$)&#10;$END$" description="on_map_destroy=&quot;void  on_map_destroy(string  strMap,string  strMapKey) 地图结束时回调.  参数:strMap 地图的GUID.,strMapKey 地图的KeyName., 返回:无返回值. 备注:lua_trigger_map_destroy 地图销毁前触发。系统级触发，不需要手动添加。   回调函数：void on_map_destroy(const std::stringamp; map, const std::stringamp; map_key)。       该触发器触发时，地图中的所有玩家、怪物、NPC、物品等对象都已被清除。  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_map_create" value="lualib:on_map_create($VAR1$)&#10;$END$" description="on_map_create=&quot;void  on_map_create(string  strMap,string  strMapKey) 地图生成时回调.  参数:strMap 地图的GUID.,strMapKey 地图的KeyName., 返回:无返回值. 备注:lua_trigger_map_create 地图创建后触发。系统级触发，不需要手动添加触发器。   回调函数：void on_map_create(const std::stringamp; map, const std::stringamp; map_key)。  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_gp" value="lualib:on_gp($VAR1$)&#10;$END$" description="on_gp=&quot;void  on_gp(string  strPlayer,int32  iGPRuntime,int32  iGPTotal,int32  iAvgTick) 玩家检测到外挂行为时回调.  参数:strPlayer 玩家的GUID.,iGPRuntime 当前违规行为次数.,iGPTotal 违规行为的总次数.,iAvgTick 单次违规差值., 返回:无返回值. 备注:lua_trigger_gp 防外挂触发。非系统级触发，需要手动添加触发器。   回调函数：void on_gp(const std::stringamp; player, int gp_runtime, int gp, int diff_avg_tick)。  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_castle_war_init" value="lualib:on_castle_war_init($VAR1$)&#10;$END$" description="on_castle_war_init=&quot;void  on_castle_war_init(string  strCastleName,string  strCastle,string  strBasilica) 攻城战申请成功时回调.  参数:strCastleName 攻城城堡的名字.,strCastle 攻城城堡的GUID.,strBasilica 攻城城堡皇宫的GUID., 返回:无返回值. 备注:lua_trigger_castle_war_init 城堡数据初始化时触发（攻城申请注册成功或服务器重启后都会初始化城堡数据）。非系统级触发，需要手动添加触发器。   回调函数：void on_castle_war_init(const std::stringamp; castle_name, const std::stringamp; dst_map, const std::stringamp; basilica_map)。  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_castle_war_end" value="lualib:on_castle_war_end($VAR1$)&#10;$END$" description="on_castle_war_end=&quot;void  on_castle_war_end(string  strCastleName,string  strCastle,string  strBasilica) 攻城战关闭时回调.  参数:strCastleName 攻城城堡的名字.,strCastle 攻城城堡的GUID.,strBasilica 攻城城堡皇宫的GUID., 返回:无返回值. 备注:lua_trigger_castle_war_end 城堡战结束时触发。非系统级触发，需要手动添加触发器。   回调函数：void on_castle_war_end(const std::stringamp; castle_name, const std::stringamp; dst_map, const std::stringamp; basilica_map)。  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_castle_war_start" value="lualib:on_castle_war_start($VAR1$)&#10;$END$" description="on_castle_war_start=&quot;void  on_castle_war_start(string  strCastleName,string  strCastle,string  strBasilica) 攻城战开启时回调.  参数:strCastleName 攻城城堡的名字.,strCastle 攻城城堡的GUID.,strBasilica 攻城城堡皇宫的GUID., 返回:无返回值. 备注:lua_trigger_castle_war_start  城堡战开始时触发。非系统级触发，需要玩家手动添加触发器。   回调函数：void on_castle_war_start(const std::stringamp; castle_name, const std::stringamp; dst_map, const std::stringamp; basilica_map)。 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_logout" value="lualib:on_logout($VAR1$)&#10;$END$" description="on_logout=&quot;void  on_logout(string  strPlayer) 玩家退出游戏时回调.  参数:strPlayer 玩家的GUID., 返回:无返回值. 备注:lua_trigger_logout  玩家退出游戏时触发。非系统级触发，需要手动添加触发器。   回调函数：void on_logout(const std::stringamp; player)。 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_login" value="lualib:on_login($VAR1$)&#10;$END$" description="on_login=&quot;void  on_login(string  strPlayer) 玩家进入游戏时回调.  参数:strPlayer 玩家的GUID., 返回:无返回值. 备注:lua_trigger_login 角色登陆时触发。非系统级触发，需要手动添加触发器。   回调函数：void callback(const std::stringamp; player)。 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_first_in_game" value="lualib:on_first_in_game($VAR1$)&#10;$END$" description="on_first_in_game=&quot;void  on_first_in_game(string  strPlayer) 新玩家第一次进入游戏时回调.  参数:strPlayer 新人玩家的GUID., 返回:无返回值. 备注:lua_trigger_first_in_game 角色第一次登陆时触发，非系统级触发，需要手动添加触发器。   回调函数：void callback(const std::stringamp; player)。 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_system_start" value="lualib:on_system_start($VAR1$)&#10;$END$" description="on_system_start=&quot;void  on_system_start(void  ) 系统启动回调.  参数: , 返回:无返回值. 备注:lua_trigger_system_start 系统级触发，系统启动时自动触发（无需添加）。   回调函数：void on_system_start(void)在system.lua中已添加。 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddTrigger" value="lualib:AddTrigger($VAR1$)&#10;$END$" description="AddTrigger=&quot;void  AddTrigger(string  strObject,int  iType,string  strCallBack) 给对象添加触发器.  参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,iType 触发器的类型.,strCallBack 回调函数的名字., 返回:无返回值. 备注:触发器的类型可在logic_def_lua.lua中查找，但使用时需要require该脚本 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasTrigger" value="lualib:HasTrigger($VAR1$)&#10;$END$" description="HasTrigger=&quot;bool  HasTrigger(string  strObject,int  iType,string  strCallBack) 判断对象是否拥有某触发器.  参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,iType 触发器的类型.,strCallBack 回调函数的名字., 返回:是或否. 备注:触发器的类型可在logic_def_lua.lua中查找，但使用时需要require该脚本 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:RemoveTrigger" value="lualib:RemoveTrigger($VAR1$)&#10;$END$" description="RemoveTrigger=&quot;bool  RemoveTrigger(string  strObject,int  iType,string  strCallBack) 移除对象拥有的某触发器.  参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,iType 触发器的类型.,strCallBack 回调函数的名字., 返回:成功或失败. 备注:触发器的类型可在logic_def_lua.lua中查找，但使用时需要require该脚本 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ClearTrigger" value="lualib:ClearTrigger($VAR1$)&#10;$END$" description="ClearTrigger=&quot;void  ClearTrigger(string  strObject) 移除对象拥有的所有触发器.  参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统., 返回:无返回值. 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetTriggerFilters" value="lualib:SetTriggerFilters($VAR1$)&#10;$END$" description="SetTriggerFilters=&quot;string  SetTriggerFilters() SetTriggerFilters(对象GUID，触发器类型，过滤类型) 参数: 返回:  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddTimerEx" value="lualib:AddTimerEx($VAR1$)&#10;$END$" description="AddTimerEx=&quot;bool  AddTimerEx(string  strObject,uint32  dwTimerID,int32  iElapse,int32  iCount,string  strCallBack,string  strParam) 给对象添加定时器.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,iElapse 定时器的触发间隔,单位:毫秒.,iCount 定时器的触发次数.设为-1时,无限触发.,strCallBack 定时器触发时,回调该函数.函数格式: 1 = 函数名 2 = 文件名:函数名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换., 返回:成功或失败. 备注:void callback(const std::stringamp; object, unsigned int timer_id, const std::stringamp; param1hellip;parmN);  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DisableTimer" value="lualib:DisableTimer($VAR1$)&#10;$END$" description="DisableTimer=&quot;bool  DisableTimer(string  strObject,uint32  dwTimerID) 取消对象的定时器.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一., 返回:成功或失败. 备注:清除定时器时有二种情况：   1.在定时器的回调中删除自身时，删除动作是异步的。系统会将定时器回调次数强制修改为0，让定时器自然消亡。   2.在其它场合删除定时器时，直接执行删除动作。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GSRunScript" value="lualib:GSRunScript($VAR1$)&#10;$END$" description="GSRunScript=&quot;void  GSRunScript(string  strCallBack,string  strParam) 让GS里所有人执行一段脚本.  参数:strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换., 返回:无返回值. 备注:callback回调函数格式： void callback(const std::stringamp; player, const std::stringamp; param1, hellip; paramN); param：是用ldquo;#rdquo;分隔的字符串，回调时系统会自动将param内容用ldquo;#rdquo;分隔成param1, param2, hellip; paramN，作为参数传回  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GSTriggerScript" value="lualib:GSTriggerScript($VAR1$)&#10;$END$" description="GSTriggerScript=&quot;void  GSTriggerScript(string  strCallBack,string  strParam) 让所有GS去执行一段脚本.  参数:strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换., 返回:无返回值. 备注:callback回调函数格式： void callback(const std::stringamp; param1, hellip; paramN); param：是用ldquo;#rdquo;分隔的字符串，回调时系统会自动将param内容用ldquo;#rdquo;分隔成param1, param2, hellip; paramN，作为参数传回  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GenRandom" value="lualib:GenRandom($VAR1$)&#10;$END$" description="GenRandom=&quot;int32  GenRandom(int32  iMin,int32  iMax) 成生随机数.  参数:iMin 最小值.,iMax 最大值., 返回:返回随机数iRnd,取值范围:(iMin lt; iMax) (iMin lt;= iRnd lt;= iMax).  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetConstVar" value="lualib:GetConstVar($VAR1$)&#10;$END$" description="GetConstVar=&quot;string  GetConstVar(string  strKey) 读取系统常量表.  参数:strKey 常量名., 返回:常量值,出错返回''. 备注:config/const_var.xml里的变量。   脚本只能读取，不能修改。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ReloadConfig" value="lualib:ReloadConfig($VAR1$)&#10;$END$" description="ReloadConfig=&quot;bool  ReloadConfig(string  strTableKey) 重载系统表.  参数:strTableKey 配置表名., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ReloadGMList" value="lualib:ReloadGMList($VAR1$)&#10;$END$" description="ReloadGMList=&quot;void  ReloadGMList(void  ) 重载GM表.  参数: , 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ReloadScript" value="lualib:ReloadScript($VAR1$)&#10;$END$" description="ReloadScript=&quot;bool  ReloadScript(int32  iScriptType) 重载某类型脚本.  参数:iScriptType 脚本类型., 返回:成功或失败. 备注:E_OBJ_PLAYER = 0, E_OBJ_HERO, E_OBJ_MONSTER, E_OBJ_NPC, E_OBJ_ITEM, E_OBJ_MAP, E_OBJ_TEAM, E_OBJ_GUILD, E_OBJ_EVENT, E_OBJ_SCENEMAGIC, E_OBJ_SYSTEM,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:StrSplit" value="lualib:StrSplit($VAR1$)&#10;$END$" description="StrSplit=&quot;table  StrSplit(string  strMaster,string  strSplit) 字符串分割函数.  参数:strMaster 被分割串.,strSplit 分割符., 返回:分割后的子串列表,返回lua table.如: tSubStr = lualib:StrSplit('aa##bb##cc#d', '##'); tSubStr = {'aa', 'bb', 'cc#d'};  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsInCollection" value="lualib:IsInCollection($VAR1$)&#10;$END$" description="IsInCollection=&quot;bool  IsInCollection(string  strMaster,string  strSplit,string  strSubStr) 字符串查找函数.  参数:strMaster 被分割串.,strSplit 分割符.,strSubStr 子字符串., 返回:主字符串被分割后的列表中,是否存在子字符串.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetSvrId" value="lualib:GetSvrId($VAR1$)&#10;$END$" description="GetSvrId=&quot;uint32  GetSvrId(void  ) 获取服务器ID.  参数: , 返回:服务器ID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetZoneId" value="lualib:GetZoneId($VAR1$)&#10;$END$" description="GetZoneId=&quot;uint32  GetZoneId(void  ) 获取区ID.  参数: , 返回:区ID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetGroupId" value="lualib:GetGroupId($VAR1$)&#10;$END$" description="GetGroupId=&quot;uint32  GetGroupId(void  ) 获取组ID.  参数: , 返回:组ID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetAgentId" value="lualib:GetAgentId($VAR1$)&#10;$END$" description="GetAgentId=&quot;uint32  GetAgentId(void  ) 获取代理ID.  参数: , 返回:代理ID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetZoneName" value="lualib:GetZoneName($VAR1$)&#10;$END$" description="GetZoneName=&quot;string  GetZoneName(void  ) 获取区域名字.  参数: , 返回:区域名字.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SkillKey2ID" value="lualib:SkillKey2ID($VAR1$)&#10;$END$" description="SkillKey2ID=&quot;uint32  SkillKey2ID(string  strSkillKey) 根据技能的KeyName取得技能的ID.  参数:strSkillKey 技能的KeyName., 返回:技能的ID,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:BuffKey2ID" value="lualib:BuffKey2ID($VAR1$)&#10;$END$" description="BuffKey2ID=&quot;uint32  BuffKey2ID(string  strBuffKey) 根据BUFF的KeyName取得BUFF的ID.  参数:strBuffKey BUFF的KeyName., 返回:BUFF的ID,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Mod" value="lualib:Mod($VAR1$)&#10;$END$" description="Mod=&quot;int32  Mod(int32  iMaster,int32  iSlave) 求模运算.  参数:iMaster 被除数.,iSlave 除数., 返回:求模值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetAllPlayerCount" value="lualib:GetAllPlayerCount($VAR1$)&#10;$END$" description="GetAllPlayerCount=&quot;int  GetAllPlayerCount(void  ) 取得服务器所有人数.  参数: , 返回:服务器人数. 备注:只能取到在线的。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:RunClientScript" value="lualib:RunClientScript($VAR1$)&#10;$END$" description="RunClientScript=&quot;bool  RunClientScript(string  strObject,string  strLuaFile,string  strLuaFunction,string  strParam) 指定运行客户端脚本.  参数:strObject 对象的GUID,对象可以为系统、玩家、队伍、行会、地图.,strLuaFile 客户端LUA文件名.,strLuaFunction 客户端LUA函数名.,strParam 自定义参数., 返回:成功或失败. 备注:GUID:可以为玩家，地图，队伍，行会，系统。让服务器有机会调用客户端的脚本。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MapRndPos" value="lualib:MapRndPos($VAR1$)&#10;$END$" description="MapRndPos=&quot;table  MapRndPos(string  strMapKey) 取得地图随机点.  参数:strMapKey 地图的KeyName., 返回:随机点坐标,返回lua table. 如:local tPos = lualib:MapRndPos('龙城'); local x, y = tPos['x'], tPos['y']; 备注:可跨GS调用。   返回值格式：   local tPos = lualib:MapRndPos(strMapKeyName);   tPos['x'] = 随机点的X坐标   tPos['y'] = 随机点的Y坐标  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetTotalBill" value="lualib:GetTotalBill($VAR1$)&#10;$END$" description="GetTotalBill=&quot;int32  GetTotalBill(string  strPlayer) 取得玩家充值元宝数.  参数:strPlayer 玩家的GUID., 返回:冲值元宝数.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetFbdLogin" value="lualib:SetFbdLogin($VAR1$)&#10;$END$" description="SetFbdLogin=&quot;void  SetFbdLogin(string  strKeyword,uint8  byType,uint32  dwTimes,string  strDesc) 禁止登陆.  参数:strKeyword 禁止登陆关键字.,byType 登陆类型,决定登陆关键字的含义.1 = IP 2 = 角色 3 = 帐号 4 = 硬件码.,dwTimes 禁止持续时间,单位:秒.,strDesc 禁止原因., 返回:无返回值. 备注:登陆类型,决定登陆关键字的含义.1 = IP 2 = 角色 3 = 帐号 4 = 硬件码.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DisaFbdLogin" value="lualib:DisaFbdLogin($VAR1$)&#10;$END$" description="DisaFbdLogin=&quot;void  DisaFbdLogin(string  strKeyword,uint8  byType) 解除禁止登陆.  参数:strKeyword 禁止登陆关键字.,byType 登陆类型,决定登陆关键字的含义.1 = IP 2 = 角色 3 = 帐号 4 = 硬件码., 返回:无返回值. 备注:登陆类型,决定登陆关键字的含义.1 = IP 2 = 角色 3 = 帐号 4 = 硬件码.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsBanString" value="lualib:IsBanString($VAR1$)&#10;$END$" description="IsBanString=&quot;bool  IsBanString(string  strString) 判断字符串是不是敏感词.  参数:strString 字符串., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsBanItem" value="lualib:IsBanItem($VAR1$)&#10;$END$" description="IsBanItem=&quot;bool  IsBanItem(string  strItem,string  strMap) 判断是不是地图禁止物品.  参数:strItem 物品GUID.,strMap 地图GUID., 返回:是或否. 备注:参考策划Map配置表。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MonstersByKey" value="lualib:MonstersByKey($VAR1$)&#10;$END$" description="MonstersByKey=&quot;table  MonstersByKey(string  strMonsterKey,int32  iLimit,bool  bIgnoreDie,bool  bIgnorePet) 取得当前GS上符合条件的怪物GUID列表.  参数:strMonsterKey 怪物的KeyName.,iLimit 获取最大数量上限.,bIgnoreDie 是否忽略死亡.,bIgnorePet 是否忽略随从., 返回:怪物GUID列表. 备注:注意该接口是在GS所有的怪物里面（一般都有10W+)遍历查找指定怪物，非常消耗服务器资源，尽可能少用。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetURL" value="lualib:GetURL($VAR1$)&#10;$END$" description="GetURL=&quot;bool  GetURL(string  Url,string  callback,string  param_list,uint32  timeout) 获取一个URL的内容 参数:Url http链接地址.,callback 获取内容后的回调函数.,param_list 预设的回调参数.,timeout 超时时间., 返回:true表示投递请求成功（不表示获取内容成功）. 备注:回调函数格式： void callback(const std::stringamp; param, INT32 errcode, const std::stringamp; result);  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Base64Encode" value="lualib:Base64Encode($VAR1$)&#10;$END$" description="Base64Encode=&quot;string  Base64Encode(string  strString) 将字符串进行BASE64编码.  参数:strString 字符串., 返回:编码后的字符串.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Base64Decode" value="lualib:Base64Decode($VAR1$)&#10;$END$" description="Base64Decode=&quot;string  Base64Decode(string  strString) 将字符串进行BASE64解码.  参数:strString 字符串., 返回:解编码后的字符串.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:UrlEncode" value="lualib:UrlEncode($VAR1$)&#10;$END$" description="UrlEncode=&quot;string  UrlEncode(string  strString) 将字符串进行URL编码.  参数:strString 字符串., 返回:编码后的字符串.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:UrlDecode" value="lualib:UrlDecode($VAR1$)&#10;$END$" description="UrlDecode=&quot;string  UrlDecode(string  strString) 将字符串进行URL解码.  参数:strString 字符串., 返回:解编码后的字符串.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GenUniqueID" value="lualib:GenUniqueID($VAR1$)&#10;$END$" description="GenUniqueID=&quot;string  GenUniqueID(void  ) 生成系统唯一标识符.  参数: , 返回:标识符字符串. 备注:生成系统内唯一标识符字符串  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetPlayerCount" value="lualib:GetPlayerCount($VAR1$)&#10;$END$" description="GetPlayerCount=&quot;uint32  GetPlayerCount(bool  bOffline) 取得服务器上所有玩家数量.  参数:bOffline 是否只取离线玩家数量., 返回:服务器上玩家数量.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetVipRemain" value="lualib:GetVipRemain($VAR1$)&#10;$END$" description="GetVipRemain=&quot;uint32  GetVipRemain(string  strPlayer,int  iVipID) 取得VIP功能剩余时间.  参数:strPlayer 玩家的GUID.,iVipID VIP功能ID., 返回:剩余时间,单位:秒.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetVipLevelRemain" value="lualib:GetVipLevelRemain($VAR1$)&#10;$END$" description="GetVipLevelRemain=&quot;uint32  GetVipLevelRemain(string  strPlayer,int  iVipLevel) 取得VIP等级剩余时间.  参数:strPlayer 玩家的GUID.,iVipLevel VIP等级., 返回:剩余时间,单位:秒.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetVipLevel" value="lualib:GetVipLevel($VAR1$)&#10;$END$" description="GetVipLevel=&quot;uint32  GetVipLevel(string  strPlayer) 取得VIP等级.  参数:strPlayer 玩家的GUID., 返回:玩家的VIP等级.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetVipLevel" value="lualib:SetVipLevel($VAR1$)&#10;$END$" description="SetVipLevel=&quot;void  SetVipLevel(string  strPlayer,int  iVipLevel) 设置VIP等级.  参数:strPlayer 玩家的GUID.,iVipLevel VIP等级., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ShowFormWithContent" value="lualib:ShowFormWithContent($VAR1$)&#10;$END$" description="ShowFormWithContent=&quot;void  ShowFormWithContent(string  strPlayer,string  strFormName,string  strContent) 通知客户端显示表单 参数:strPlayer 玩家GUID.,strFormName 表单名字.,strContent 提交的内容., 返回:无返回值. 参考:ShowForm,ShowFormWithContent,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Str2Time" value="lualib:Str2Time($VAR1$)&#10;$END$" description="Str2Time=&quot;uint32  Str2Time(string  strDateTime) 将字符串时间转换成数值型时间.  参数:strDateTime 字符串时间,时间格式:Y-m-d H:M:S或Y-m-d., 返回:数值时间. 备注:返回的时间数值与lua内建时间函数兼容，不须要额外转换操作。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendWarnMsg" value="lualib:SysMsg_SendWarnMsg($VAR1$)&#10;$END$" description="SysMsg_SendWarnMsg=&quot;bool  SysMsg_SendWarnMsg(string  strPlayer,string  strMsg) 发送客户端底部警告消息.  参数:strPlayer 玩家的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:当玩家不在本GS上时，可以调用跨GS版本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysWarnMsg" value="lualib:SysWarnMsg($VAR1$)&#10;$END$" description="SysWarnMsg=&quot;bool  SysWarnMsg(string  strPlayer,string  strMsg) 发送客户端底部警告消息.  参数:strPlayer 玩家的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:当玩家不在本GS上时，可以调用跨GS版本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendPromptMsg" value="lualib:SysMsg_SendPromptMsg($VAR1$)&#10;$END$" description="SysMsg_SendPromptMsg=&quot;bool  SysMsg_SendPromptMsg(string  strPlayer,string  strMsg) 发送客户端底部提示消息.  参数:strPlayer 玩家的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:当玩家不在本GS上时，可以调用跨GS版本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysPromptMsg" value="lualib:SysPromptMsg($VAR1$)&#10;$END$" description="SysPromptMsg=&quot;bool  SysPromptMsg(string  strPlayer,string  strMsg) 发送客户端底部提示消息.  参数:strPlayer 玩家的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:当玩家不在本GS上时，可以调用跨GS版本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendTriggerMsg" value="lualib:SysMsg_SendTriggerMsg($VAR1$)&#10;$END$" description="SysMsg_SendTriggerMsg=&quot;bool  SysMsg_SendTriggerMsg(string  strPlayer,string  strMsg) 发送客户端底部触发消息.  参数:strPlayer 玩家的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:当玩家不在本GS上时，可以调用跨GS版本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysTriggerMsg" value="lualib:SysTriggerMsg($VAR1$)&#10;$END$" description="SysTriggerMsg=&quot;bool  SysTriggerMsg(string  strPlayer,string  strMsg) 发送客户端底部触发消息.  参数:strPlayer 玩家的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:当玩家不在本GS上时，可以调用跨GS版本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendInputDlg" value="lualib:SysMsg_SendInputDlg($VAR1$)&#10;$END$" description="SysMsg_SendInputDlg=&quot;bool  SysMsg_SendInputDlg(string  strPlayer,uint32  dwDlgID,string  strContent,uint32  dwTimeOut,uint32  dwMaxLen,string  strCallBack,string  strParam) 通知客户端显示输入框.  参数:strPlayer 玩家的GUID.,dwDlgID 输入框ID,任填.同GUID下ID必须唯一.,strContent 输入框内容.,dwTimeOut 输入框超时时间,单位:秒.,dwMaxLen 输入框最大输入长度.,strCallBack 输入框回调函数名字.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回., 返回:成功或失败. 备注:param：由脚本作者来维护，当回调时，服务器自动将param作为参数传回，   如果希望将多个参数传入，则可以以'#'等分割符链接多个参数为一个字符串作为param，然后再callback函数中调用lualib:StrSplit(param, '#')解析出多个参数   回调函数格式：void callback(UINT32 dlg_id, const std::stringamp; player, const std::stringamp; input_str, const std::stringamp; param)  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:InputDlgEx" value="lualib:InputDlgEx($VAR1$)&#10;$END$" description="InputDlgEx=&quot;void  InputDlgEx(string  player,int  dlg_id,string  content,int  timeout,int  param_len,string  callback,string  param) 发送显示通用输入框请求 参数:player 玩家的GUID,dlg_id 输入框的标识符,content 输入框的内容,timeout 输入框超时时间,param_len 输入框输入长度限制,callback 回调函数,param 自定义参数, 返回:无返回值. 备注:param：由脚本作者来维护，当回调时，服务器自动将param作为参数传回，   如果希望将多个参数传入，则可以以'#'等分割符链接多个参数为一个字符串作为param，然后再callback函数中调用lualib:StrSplit(param, '#')解析出多个参数   回调函数格式：void callback(UINT32 dlg_id, const std::stringamp; player, const std::stringamp; input_str, const std::stringamp; param) 参考:SysMsg_SendInputDlg,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendMsgDlg" value="lualib:SysMsg_SendMsgDlg($VAR1$)&#10;$END$" description="SysMsg_SendMsgDlg=&quot;bool  SysMsg_SendMsgDlg(string  strPlayer,uint32  dwDlgID,string  strContent,uint32  dwTimeOut,string  strCallBack,string  strParam) 通知客户端显示消息框.  参数:strPlayer 玩家的GUID.,dwDlgID 消息框ID,任填.同GUID下ID必须唯一.,strContent 消息框内容.,dwTimeOut 消息框超时时间,单位:秒.,strCallBack 消息框回调函数名字.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回., 返回:成功或失败. 备注:content：使用宏             #BUTTON[0-n]#[按钮文字]#BUTTONEND# 来定义按钮。客户端会解析宏，从而在面板上生成按钮。当用户点击按钮时，服务器会回调按钮点击事件。回调时，会给出参数n的值，以确定用户点击了哪个按钮。   param：由脚本作者来维护，当回调时，服务器自动将param作为参数传回   回调函数格式：void callback(UINT32 dlg_id, const std::stringamp; player, UINT32 btn_id, const std::stringamp; param)  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MsgBoxEx" value="lualib:MsgBoxEx($VAR1$)&#10;$END$" description="MsgBoxEx=&quot;void  MsgBoxEx(string  player_guid,int  dlg_id,string  content,int  timeout,string  callback,string  param) 发送显示通用消息框请求 参数:player_guid 玩家的GUID,dlg_id 输入框的标识符,content 输入框的内容,timeout 输入框超时时间,callback 回调函数,param 自定义参数, 返回:无返回值. 备注:content：使用宏             #BUTTON[0-n]#[按钮文字]#BUTTONEND# 来定义按钮。客户端会解析宏，从而在面板上生成按钮。当用户点击按钮时，服务器会回调按钮点击事件。回调时，会给出参数n的值，以确定用户点击了哪个按钮。   param：由脚本作者来维护，当回调时，服务器自动将param作为参数传回   回调函数格式：void callback(UINT32 dlg_id, const std::stringamp; player, UINT32 btn_id, const std::stringamp; param) 参考:SysMsg_SendMsgDlg,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendWebMsg" value="lualib:SysMsg_SendWebMsg($VAR1$)&#10;$END$" description="SysMsg_SendWebMsg=&quot;bool  SysMsg_SendWebMsg(string  strPlayer,string  strTitle,string  strURL,string  strParam) 通知客户端显示Web页面框.  参数:strPlayer 玩家的GUID.,strTitle 页面框标题.,strURL 网页URL路径.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回., 返回:成功或失败. 备注:url:考虑到有些URL地址很长，所以该函数定议的URL长度可以达到1K   param：由脚本作者来维护   暂时用不到这个功能  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:WebBoxEx" value="lualib:WebBoxEx($VAR1$)&#10;$END$" description="WebBoxEx=&quot;void  WebBoxEx(string  player_guid,string  title,string  url,string  param) 发送显示Web页面框通知 参数:player_guid 玩家的GUID,title 弹出的IE框所使用的标题,url 弹出的IE框所使用的URL地址,param 自定义参数, 返回:无返回值. 备注:url:考虑到有些URL地址很长，所以该函数定议的URL长度可以达到1K   param：由脚本作者来维护   暂时用不到这个功能 参考:SysMsg_SendWebMsg,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendWebPage" value="lualib:SysMsg_SendWebPage($VAR1$)&#10;$END$" description="SysMsg_SendWebPage=&quot;bool  SysMsg_SendWebPage(string  strPlayer,string  strURL) 通知客户端打开网页.  参数:strPlayer 玩家的GUID.,strURL 网页URL路径., 返回:成功或失败. 备注:url:考虑到有些URL地址很长，所以该函数定议的URL长度可以达到1K   param：由脚本作者来维护   暂时用不到这个功能  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:WebBrowser" value="lualib:WebBrowser($VAR1$)&#10;$END$" description="WebBrowser=&quot;void  WebBrowser(string  player_guid,string  url) 发送打开网页页面通知 参数:player_guid 玩家的GUID,url 弹出的IE框所使用的URL地址, 返回:无返回值. 备注:url:考虑到有些URL地址很长，所以该函数定议的URL长度可以达到1K   param：由脚本作者来维护   暂时用不到这个功能 参考:SysMsg_SendWebPage,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Hp" value="lualib:Hp($VAR1$)&#10;$END$" description="Hp=&quot;int32  Hp(string  strRole,bool  bLimit) 取得角色的血量.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:血量. 备注:很多属性目前仅仅对玩家才有意义。如果使用在NPC、怪物身上会得到一个未定义的值。比如对NPC取性别，等级，职业等等。之所以将这个接口做成角色通用，是为了方便以后扩展。   role可以为玩家、NPC、怪物  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GUID" value="lualib:GUID($VAR1$)&#10;$END$" description="GUID=&quot;string  GUID() 系统中各种类型的物品的编号 参数: 返回: 备注:在系统产生各种游戏事件时，   如：玩家进入地图，怪物死亡，玩家升级 等等 系统会传递一个用来区别于不同的角色，不同的怪物等。   这个编号是一个 16位的字符串，全游戏唯一，我们游戏中很多接口都需要传递这个guid的参数以便于区分不同的内容  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Mp" value="lualib:Mp($VAR1$)&#10;$END$" description="Mp=&quot;int32  Mp(string  strRole,bool  bLimit) 取得角色的蓝量.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:蓝量. 备注:很多属性目前仅仅对玩家才有意义。如果使用在NPC、怪物身上会得到一个未定义的值。比如对NPC取性别，等级，职业等等。之所以将这个接口做成角色通用，是为了方便以后扩展。   role可以为玩家、NPC、怪物  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:PhyAtk" value="lualib:PhyAtk($VAR1$)&#10;$END$" description="PhyAtk=&quot;int32  PhyAtk(string  strRole,bool  bLimit) 取得角色的物攻.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:物攻. 备注:很多属性目前仅仅对玩家才有意义。如果使用在NPC、怪物身上会得到一个未定义的值。比如对NPC取性别，等级，职业等等。之所以将这个接口做成角色通用，是为了方便以后扩展。   role可以为玩家、NPC、怪物  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TaoAtk" value="lualib:TaoAtk($VAR1$)&#10;$END$" description="TaoAtk=&quot;int32  TaoAtk(string  strRole,bool  bLimit) 取得角色的道攻.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:道攻. 备注:很多属性目前仅仅对玩家才有意义。如果使用在NPC、怪物身上会得到一个未定义的值。比如对NPC取性别，等级，职业等等。之所以将这个接口做成角色通用，是为了方便以后扩展。   role可以为玩家、NPC、怪物  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MagAtk" value="lualib:MagAtk($VAR1$)&#10;$END$" description="MagAtk=&quot;int32  MagAtk(string  strRole,bool  bLimit) 取得角色的魔攻.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:魔攻. 备注:很多属性目前仅仅对玩家才有意义。如果使用在NPC、怪物身上会得到一个未定义的值。比如对NPC取性别，等级，职业等等。之所以将这个接口做成角色通用，是为了方便以后扩展。   role可以为玩家、NPC、怪物  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_item_disappear" value="lualib:on_item_disappear($VAR1$)&#10;$END$" description="on_item_disappear=&quot;void  on_item_disappear(string  strMap,string  strItem,uint16  wItemID,string  strItemKey,uint16  wX,uint16  wY) 物品消失在地图时回调.  参数:strMap 地图的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,wX 物品的X坐标.,wY 物品的Y坐标., 返回:无返回值. 备注:lua_trigger_item_disappear 物品在地图消失触发，回调函数:void on_item_disappear(const std::stringamp; map, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key, unsigned short x, unsigned short y); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_npc_appear" value="lualib:on_npc_appear($VAR1$)&#10;$END$" description="on_npc_appear=&quot;void  on_npc_appear(string  strNPC,uint16  wNPCID,string  strNPCName,uint16  wX,uint16  wY) NPC出现在地图时回调.  参数:strNPC NPC的GUID.,wNPCID NPC的ID.,strNPCName NPC的Name.,wX NPC的X坐标.,wY NPC的Y坐标., 返回:无返回值. 备注:  lua_trigger_npc_appear NPC出现触发，回调函数:void on_npc_appear(const std::stringamp; npc, unsigned short npc_id, const std::stringamp; npc_key, unsigned short x, unsigned short y); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_npc_disappear" value="lualib:on_npc_disappear($VAR1$)&#10;$END$" description="on_npc_disappear=&quot;void  on_npc_disappear(string  strNPC,uint16  wNPCID,string  strNPCName,uint16  wX,uint16  wY) NPC消失在地图时回调.  参数:strNPC NPC的GUID.,wNPCID NPC的ID.,strNPCName NPC的Name.,wX NPC的X坐标.,wY NPC的Y坐标., 返回:无返回值. 备注:  lua_trigger_npc_disappear NPC消失触发，回调函数:void on_npc_disappear(const std::stringamp; npc, unsigned short npc_id, const std::stringamp; npc_key, unsigned short x, unsigned short y);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_level_up" value="lualib:on_level_up($VAR1$)&#10;$END$" description="on_level_up=&quot;void  on_level_up(string  strRole,int32  iLevel) 角色升级时回调.  参数:strRole 角色的GUID.,iLevel 角色现在的等级., 返回:无返回值. 备注:  lua_trigger_level_up 角色升级触发，回调函数:void on_level_up(const std::stringamp; role, unsigned short level);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_equip" value="lualib:on_pre_equip($VAR1$)&#10;$END$" description="on_pre_equip=&quot;bool  on_pre_equip(string  strRole,string  strEquip,uint16  wEquipID,string  strEquipKey) 角色穿装备之前回调.  参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName., 返回:true = 允许玩家穿装备, false = 阻止玩家穿装备. 备注:  lua_trigger_pre_equip 穿装备之前触发，回调函数:bool on_pre_equip(const std::stringamp; role, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_post_equip" value="lualib:on_post_equip($VAR1$)&#10;$END$" description="on_post_equip=&quot;void  on_post_equip(string  strRole,string  strEquip,uint16  wEquipID,string  strEquipKey) 角色穿装备回调.  参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName., 返回:无返回值. 备注:lua_trigger_post_equip 穿装备之后触发，回调函数:void on_post_equip(const std::stringamp; role, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_un_equip" value="lualib:on_pre_un_equip($VAR1$)&#10;$END$" description="on_pre_un_equip=&quot;bool  on_pre_un_equip(string  strRole,string  strEquip,uint16  wEquipID,string  strEquipKey) 角色脱装备之前回调.  参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName., 返回:true = 允许玩家脱装备, false = 阻止玩家脱装备. 备注:  lua_trigger_pre_un_equip 脱装备之前触发，回调函数:bool on_pre_un_equip(const std::stringamp; role, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_post_un_equip" value="lualib:on_post_un_equip($VAR1$)&#10;$END$" description="on_post_un_equip=&quot;void  on_post_un_equip(string  strRole,string  strEquip,uint16  wEquipID,string  strEquipKey) 角色脱装备时回调.  参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName., 返回:无返回值. 备注:lua_trigger_post_un_equip 脱装备之后触发，回调函数:void on_post_un_equip(const std::stringamp; role, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_move" value="lualib:on_move($VAR1$)&#10;$END$" description="on_move=&quot;void  on_move(string  strRole,uint16  wX,uint16  wY,uint8  wType) 角色移动时回调.  参数:strRole 角色的GUID.,wX 移动的X坐标.,wY 移动的Y坐标.,wType 移动类型. 0 = 走, 1 = 跑., 返回:无返回值. 备注:  lua_trigger_move 角色移动触发，回调函数:void on_move(const std::stringamp; role, unsigned short x, unsigned short y); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_spell" value="lualib:on_pre_spell($VAR1$)&#10;$END$" description="on_pre_spell=&quot;bool  on_pre_spell(string  strRole,uint16  wSkillID,string  strSkillName) 角色放技能前回调.  参数:strRole 角色的GUID.,wSkillID 技能ID.,strSkillName 技能的Name., 返回:true = 允许角色放技能, false = 阻止角色放技能. 备注:  lua_trigger_pre_spell 施放技能之前触发，回调函数:bool on_pre_spell(const std::stringamp; role, unsigned short skill_id, unsigned short skill_key); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_spell" value="lualib:on_spell($VAR1$)&#10;$END$" description="on_spell=&quot;void  on_spell(string  strRole,uint16  wSkillID,string  strSkillName,uint16  wX,uint16  wY,string  strTarget) 角色放技能时回调.  参数:strRole 角色的GUID.,wSkillID 技能ID.,strSkillName 技能的Name.,wX 技能施放坐标X.,wY 技能施放坐标Y.,strTarget 技能施放目标., 返回:无返回值. 备注:  lua_trigger_spell 施放技能之后触发，回调函数:void on_spell(const std::stringamp; role, unsigned short skill_id, unsigned short skill_key);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_mining" value="lualib:on_pre_mining($VAR1$)&#10;$END$" description="on_pre_mining=&quot;bool  on_pre_mining(string  strRole,string  strMapKey,uint16  wSkillID,string  strSkillName,uint16  wX,uint16  wY) 角色挖矿前回调.  参数:strRole 角色的GUID.,strMapKey 挖矿地图的KeyName.,wSkillID 挖矿技能ID.,strSkillName 挖矿技能的Name.,wX 挖矿技能施放坐标X.,wY 挖矿技能施放坐标Y., 返回:true = 允许角色放挖矿技能, false = 阻止角色放挖矿技能. 备注:  lua_trigger_pre_mining 挖矿之前触发，回调函数:bool on_pre_mining(const std::stringamp; player, const std::stringamp; map_key, unsigned short skill_id, const std::stringamp; skill_key, unsigned short x, unsigned short y); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_mining" value="lualib:on_mining($VAR1$)&#10;$END$" description="on_mining=&quot;void  on_mining(string  strRole,string  strMapKey,uint16  wSkillID,string  strSkillName,uint16  wX,uint16  wY) 角色挖矿时回调.  参数:strRole 角色的GUID.,strMapKey 挖矿地图的KeyName.,wSkillID 挖矿技能ID.,strSkillName 挖矿技能的Name.,wX 挖矿技能施放坐标X.,wY 挖矿技能施放坐标Y., 返回:无返回值. 备注:  lua_trigger_mining 挖矿之后触发，回调函数:void on_mining(const std::stringamp; player, const std::stringamp; map_key, unsigned short skill_id, const std::stringamp; skill_key, unsigned short x, unsigned short y);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_item_apply" value="lualib:on_pre_item_apply($VAR1$)&#10;$END$" description="on_pre_item_apply=&quot;bool  on_pre_item_apply(string  strRole,string  strItem,uint16  wItemID,string  strItemKey) 角色使用道具前回调.  参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName., 返回:true = 允许角色使用道具, false = 阻止角色使用道具. 备注:  lua_trigger_pre_item_apply 使用道具之前触发，回调函数:bool on_pre_item_apply(const std::stringamp; player, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_item_apply" value="lualib:on_item_apply($VAR1$)&#10;$END$" description="on_item_apply=&quot;void  on_item_apply(string  strRole,uint16  wItemID,string  strItemKey) 角色使用道具时回调.  参数:strRole 角色的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName., 返回:无返回值. 备注:  lua_trigger_item_apply 使用道具之后触发，回调函数:void on_item_apply(const std::stringamp; player,  unsigned short item_id, const std::stringamp; item_key);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_item_pickup" value="lualib:on_pre_item_pickup($VAR1$)&#10;$END$" description="on_pre_item_pickup=&quot;bool  on_pre_item_pickup(string  strRole,string  strItem,uint16  wItemID,string  strItemKey) 角色拾取道具前回调.  参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName., 返回:true = 允许角色拾取道具, false = 阻止角色拾取道具. 备注:  lua_trigger_pre_item_pickup 拾取物品之前触发，回调函数:bool on_pre_item_pickup(const std::stringamp; player, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_item_pickup" value="lualib:on_item_pickup($VAR1$)&#10;$END$" description="on_item_pickup=&quot;void  on_item_pickup(string  strRole,string  strItem,uint16  wItemID,string  strItemKey) 角色拾取道具时回调.  参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName., 返回:无返回值. 备注:  lua_trigger_item_pickup 拾取物品之后触发，回调函数:void on_item_pickup(const std::stringamp; player, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_item_drop" value="lualib:on_pre_item_drop($VAR1$)&#10;$END$" description="on_pre_item_drop=&quot;bool  on_pre_item_drop(string  strRole,string  strItem,uint16  wItemID,string  strItemKey) 角色扔道具前回调.  参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName., 返回:true = 允许角色扔道具, false = 阻止角色扔道具. 备注:  lua_trigger_pre_item_drop 扔物品之前触发，回调函数:bool on_pre_item_drop(const std::stringamp; player, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_item_drop" value="lualib:on_item_drop($VAR1$)&#10;$END$" description="on_item_drop=&quot;void  on_item_drop(string  strRole,string  strItem,uint16  wItemID,string  strItemKey) 角色扔道具时回调.  参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName., 返回:无返回值. 备注:  lua_trigger_item_drop 扔物品之后触发，回调函数:void on_item_drop(const std::stringamp; player, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_die" value="lualib:on_pre_die($VAR1$)&#10;$END$" description="on_pre_die=&quot;bool  on_pre_die(string  strRole,string  strKiller) 角色死亡之前回调.  参数:strRole 角色的GUID.,strKiller 杀手的GUID., 返回:true = 允许角色死亡, false = 阻止角色死亡. 备注:  lua_trigger_pre_die 角色死亡之前触发，回调函数:bool on_pre_die(const std::stringamp; role, const std::stringamp; killer);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_post_die" value="lualib:on_post_die($VAR1$)&#10;$END$" description="on_post_die=&quot;void  on_post_die(string  strRole,string  strKiller) 角色死亡时回调.  参数:strRole 角色的GUID.,strKiller 杀手的GUID., 返回:无返回值. 备注:  lua_trigger_post_die 角色死亡之后触发，回调函数:void on_post_die(const std::stringamp; role, const std::stringamp; killer); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_kill" value="lualib:on_kill($VAR1$)&#10;$END$" description="on_kill=&quot;void  on_kill(string  strKiller,string  strRole) 杀死角色时回调.  参数:strKiller 杀手的GUID.,strRole 受害者的GUID., 返回:无返回值. 备注:  lua_trigger_kill 杀死角色之后触发，回调函数:void on_kill(const std::stringamp; killer, const std::stringamp; role);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_attack" value="lualib:on_attack($VAR1$)&#10;$END$" description="on_attack=&quot;void  on_attack(string  strRole,string  strAttacker) 受攻击时回调.  参数:strRole 被攻击者的GUID.,strAttacker 攻击者的GUID., 返回:无返回值. 备注:  lua_trigger_attack 受到攻击时触发，回调函数:void on_attack(const std::stringamp; self, const std::stringamp; attacker);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_damage_process" value="lualib:on_damage_process($VAR1$)&#10;$END$" description="on_damage_process=&quot;void  on_damage_process(string  strRole,string  strTarget,uint16  wSkillID) 角色走伤害流程时回调.  参数:strRole 伤害者的GUID.,strTarget 受害者的GUID.,wSkillID 伤害技能的ID., 返回:无返回值. 备注:  lua_trigger_damage_process 走伤害处理流程时触发，回调函数:void on_damage_process(const std::stringamp; self, const std::stringamp; target, unsigned short skill_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_restore_process" value="lualib:on_restore_process($VAR1$)&#10;$END$" description="on_restore_process=&quot;void  on_restore_process(string  strRole,string  strTarget,uint16  wSkillID) 角色走恢复流程时回调.  参数:strRole 治疗者的GUID.,strTarget 被治疗者的GUID.,wSkillID 治疗技能的ID., 返回:无返回值. 备注:lua_trigger_restore_process 走恢复处理流程时触发，回调函数:void on_restore_process(const std::stringamp; self, const std::stringamp; target, unsigned short skill_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_teleport" value="lualib:on_teleport($VAR1$)&#10;$END$" description="on_teleport=&quot;void  on_teleport(string  strRole,uint16  wSkillID) 角色走瞬移流程时回调.  参数:strRole 角色的GUID.,wSkillID 技能的ID., 返回:无返回值. 备注:  lua_trigger_teleport 走瞬移处理流程时触发，回调函数:void on_teleport(const std::stringamp; self, unsigend short skill_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_catch" value="lualib:on_pre_catch($VAR1$)&#10;$END$" description="on_pre_catch=&quot;bool  on_pre_catch(string  strRole,string  strTarget,uint16  wSkillID) 角色抓宝宝之前回调.  参数:strRole 角色的GUID.,strTarget 宝宝的GUID.,wSkillID 技能的ID., 返回:true = 允许角色捉宝宝, false = 阻止角色捉宝宝. 备注:  lua_trigger_pre_catch 玩家捉宝宝前触发，回调函数:bool on_pre_catch(const std::stringamp; self, const std::stringamp; target, unsigned short skill_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_catch" value="lualib:on_catch($VAR1$)&#10;$END$" description="on_catch=&quot;void  on_catch(string  strRole,string  strTarget,uint16  wSkillID) 角色抓宝宝时回调.  参数:strRole 角色的GUID.,strTarget 宝宝的GUID.,wSkillID 技能的ID., 返回:无返回值. 备注:  lua_trigger_catch 玩家捉宝宝后触发，回调函数:void on_catch(const std::stringamp; self, const std::stringamp; target, unsigned short skill_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_dig_meat" value="lualib:on_pre_dig_meat($VAR1$)&#10;$END$" description="on_pre_dig_meat=&quot;bool  on_pre_dig_meat(string  strRole,string  strTarget,uint16  wSkillID) 角色挖肉之前回调.  参数:strRole 角色的GUID.,strTarget 怪物的GUID.,wSkillID 挖肉技能的ID., 返回:true = 允许角色挖肉, false = 阻止角色挖肉. 备注:  lua_trigger_pre_dig_meat 玩家挖肉前触发，回调函数:bool on_pre_dig_meat(const std::stringamp; self, const std::stringamp; target, unsigned short skill_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_add_buff" value="lualib:on_add_buff($VAR1$)&#10;$END$" description="on_add_buff=&quot;void  on_add_buff(string  strRole,uint16  wBuffID,string  strHost) 角色添加BUFF时回调.  参数:strRole 角色的GUID.,wBuffID BUFF的ID.,strHost 施放BUFF角色的GUID., 返回:无返回值. 备注:  lua_trigger_add_buff 玩家添加BUFF后触发，回调函数:void on_add_buff(const std::stringamp; self, unsigned short buff_id, const std::stringamp; host); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_remove_buff" value="lualib:on_remove_buff($VAR1$)&#10;$END$" description="on_remove_buff=&quot;void  on_remove_buff(string  strRole,uint16  wBuffID) 角色删除BUFF时回调.  参数:strRole 角色的GUID.,wBuffID BUFF的ID., 返回:无返回值. 备注:  lua_trigger_remove_buff 玩家移除BUF后触发，回调函数:void on_remove_buff(const std::stringamp; self, unsigned short buff_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_drop" value="lualib:on_pre_drop($VAR1$)&#10;$END$" description="on_pre_drop=&quot;bool  on_pre_drop(string  strRole) 角色爆道具之前回调(要不要爆东西).  参数:strRole 角色的GUID., 返回:true = 允许角色爆装备, false = 阻止角色爆装备. 备注:  lua_trigger_pre_drop 玩家爆装备之前触发，回调函数:bool on_pre_drop(const std::stringamp; self); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_post_drop" value="lualib:on_post_drop($VAR1$)&#10;$END$" description="on_post_drop=&quot;void  on_post_drop(string  strRole) 角色爆道具时回调.  参数:strRole 角色的GUID., 返回:无返回值. 备注:  lua_trigger_post_drop 玩家爆装备之后触发，回调函数:bool on_post_drop(const std::stringamp; self); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_drop_one" value="lualib:on_pre_drop_one($VAR1$)&#10;$END$" description="on_pre_drop_one=&quot;bool  on_pre_drop_one(string  strMap,string  strRole,string  strItem,uint16  wItemID) 角色爆道具之前回调(爆某具体的道具).  参数:strMap 角色地图的GUID.,strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID., 返回:true = 允许角色爆装备, false = 阻止角色爆装备. 备注:  lua_trigger_pre_drop_one 角色爆具体装备之前触发，回调函数:bool on_pre_drop_one(const std::stringamp; map, const std::stringamp; player, const std::stringamp; item, unsigned short item_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_post_drop_one" value="lualib:on_post_drop_one($VAR1$)&#10;$END$" description="on_post_drop_one=&quot;void  on_post_drop_one(string  strMap,string  strRole,string  strItem,uint16  wItemID) 角色爆道具时回调(爆某具体的道具).  参数:strMap 角色地图的GUID.,strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID., 返回:无返回值. 备注:  lua_trigger_post_drop_one 角色爆具体装备之后触发，回调函数:void on_post_drop_one(const std::stringamp; map, const std::stringamp; player, const std::stringamp; item, unsigned short item_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_add_skill" value="lualib:on_add_skill($VAR1$)&#10;$END$" description="on_add_skill=&quot;void  on_add_skill(string  strRole,uint16  wSkillID) 角色添加技能时触发.  参数:strRole 角色的GUID.,wSkillID 技能的ID., 返回:无返回值. 备注:  lua_trigger_add_skill 玩家添加技能时触发，回调函数:void on_add_skill(const std::stringamp; self, unsigned short skill_id); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_switch_skill" value="lualib:on_switch_skill($VAR1$)&#10;$END$" description="on_switch_skill=&quot;void  on_switch_skill(string  strRole,uint16  wSkillID,uint8  byActive) 角色开关技能时触发.  参数:strRole 角色的GUID.,wSkillID 技能的ID.,byActive 开关状态. 0 = 关, 1 = 开., 返回:无返回值. 备注:  lua_trigger_switch_skill 玩家开关技能时触发，回调函数:void on_switch_skill(const std::stringamp; self, unsigned short skill_id);  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_summon" value="lualib:on_summon($VAR1$)&#10;$END$" description="on_summon=&quot;void  on_summon(string  strRole,uint16  wMonsterID,uint16  wLevel) 角色召唤时触发.  参数:strRole 角色的GUID.,wMonsterID 怪物的ID.,wLevel 宝宝召唤等级., 返回:无返回值. 备注:  lua_trigger_summon 玩家召唤时触发，回调函数:void on_summon(const std::stringamp; self, unsigend short monster_id, unsigned char level); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_process_pk" value="lualib:on_pre_process_pk($VAR1$)&#10;$END$" description="on_pre_process_pk=&quot;bool  on_pre_process_pk(string  strKiller,string  strVictim) 角色处理PK值之前回调.  参数:strKiller 杀手的GUID.,strVictim 受害者的GUID., 返回:true = 允许角色得到PK值, false = 阻止角色得到PK值. 备注:  lua_trigger_pre_process_pk 玩家走PK处理流程前触发，回调函数:bool on_pre_process_pk(const std::stringamp; killer, const std::stringamp; victim);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_post_process_pk" value="lualib:on_post_process_pk($VAR1$)&#10;$END$" description="on_post_process_pk=&quot;void  on_post_process_pk(string  strKiller,string  strVictim,int32  iPKRef) 角色处理PK值时回调.  参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,iPKRef 得到的PK值., 返回:无返回值. 备注:  lua_trigger_post_process_pk 玩家走PK处理流程之后触发，回调函数:void on_post_process_pk(const std::stringamp; killer, const std::stringamp; victim, int pk); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_create" value="lualib:on_create($VAR1$)&#10;$END$" description="on_create=&quot;void  on_create(string  strObject) 物品、NPC、怪物创建时回调.  参数:strObject 对象的GUID., 返回:无返回值. 备注:  lua_trigger_create 对象创建时触发，系统调用，回调函数:void on_create(const std::stringamp; object);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_destroy" value="lualib:on_destroy($VAR1$)&#10;$END$" description="on_destroy=&quot;void  on_destroy(string  strObject) 物品、NPC、怪物销毁时回调.  参数:strObject 对象的GUID., 返回:无返回值. 备注:  lua_trigger_destroy 对象销毁时触发，回调函数:void on_destroy(const std::stringamp; object); 警告:服务器上没有调用过该触发器,功能未实现. 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_enter_jump" value="lualib:on_pre_enter_jump($VAR1$)&#10;$END$" description="on_pre_enter_jump=&quot;bool  on_pre_enter_jump(string  strRole,string  strFromMap,string  strDestMap) 角色进入跳转点之前回调.  参数:strRole 角色的GUID.,strFromMap 源地图的GUID.,strDestMap 目标地图的GUID., 返回:true = 允许角色通过跳转点跳图, false = 阻止角色通过跳转点跳图. 备注:  lua_trigger_pre_enter_jump 进入跳转点前触发，回调函数:bool on_pre_enter_jump(const std::stringamp; role, const std::stringamp; from_map, std::stringamp; to_map);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_equip_suit" value="lualib:on_equip_suit($VAR1$)&#10;$END$" description="on_equip_suit=&quot;void  on_equip_suit(string  strRole,uint16  wSuitID) 角色穿上套装时回调.  参数:strRole 角色的GUID.,wSuitID 套装ID., 返回:无返回值. 备注:  lua_trigger_equip_suit 穿齐套装触发，回调函数:void on_equip_suit(const std::stringamp; self, unsigned short suit_id); 警告:服务器上没有调用过该触发器,功能未实现. 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_un_equip_suit" value="lualib:on_un_equip_suit($VAR1$)&#10;$END$" description="on_un_equip_suit=&quot;void  on_un_equip_suit(string  strRole,uint16  wSuitID) 角色脱下套装时回调.  参数:strRole 角色的GUID.,wSuitID 套装ID., 返回:无返回值. 备注:  lua_trigger_un_equip_suit 套装不齐触发，回调函数:void on_un_equip_suit(const std::stringamp; self, unsigned short suit_id); 警告:服务器上没有调用过该触发器,功能未实现. 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_item_amount_zero" value="lualib:on_item_amount_zero($VAR1$)&#10;$END$" description="on_item_amount_zero=&quot;void  on_item_amount_zero(string  strRole,string  strItem,uint16  wItemID,string  strItemKey) 角色物品堆叠数为0时回调.  参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName., 返回:无返回值. 备注:  lua_trigger_item_amount_zero 道具堆叠为0时触发，回调函数:void on_item_amount_zero(const std::stringamp; self, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_item_use_zero" value="lualib:on_item_use_zero($VAR1$)&#10;$END$" description="on_item_use_zero=&quot;void  on_item_use_zero(string  strRole,string  strItem,uint16  wItemID,string  strItemKey) 角色物品使用次数为0时回调.  参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName., 返回:无返回值. 备注:  lua_trigger_item_use_zero 道具使用次数为0时触发，回调函数:void on_item_use_zero(const std::stringamp; self, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_item_dur_zero" value="lualib:on_item_dur_zero($VAR1$)&#10;$END$" description="on_item_dur_zero=&quot;void  on_item_dur_zero(string  strRole,string  strItem,uint16  wItemID,string  strItemKey) 角色物品耐久为0时回调.  参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName., 返回:无返回值. 备注:  lua_trigger_item_dur_zero 道具耐久为0时触发，回调函数:void on_item_dur_zero(const std::stringamp; self, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_item_timeup" value="lualib:on_item_timeup($VAR1$)&#10;$END$" description="on_item_timeup=&quot;void  on_item_timeup(string  strRole,string  strItem,uint16  wItemID,string  strItemKey) 角色物品时效到期时回调.  参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName., 返回:无返回值. 备注:  lua_trigger_item_timeup 道具过期删除时回调函数:void on_item_timeup(const std::stringamp; self, const std::stringamp; item, unsigned short item_id, const std::stringamp; item_key); 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_add_exp" value="lualib:on_add_exp($VAR1$)&#10;$END$" description="on_add_exp=&quot;void  on_add_exp(string  strRole,int32  iExp) 角色杀怪得到经验时回调.  参数:strRole 角色的GUID.,iExp 得到的经验值., 返回:无返回值. 备注:  lua_trigger_add_exp 添加经验时触发，回调函数:void on_add_exp(const std::stringamp; self, int exp);  参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_player_relive" value="lualib:on_player_relive($VAR1$)&#10;$END$" description="on_player_relive=&quot;string  on_player_relive(string  player_guid) 玩家复活之前 参数:player_guid 玩家GUID, 返回: 备注:  lua_trigger_player_relive 玩家复活之前触发，回调函数:bool on_player_relive(const std::stringamp; player);   --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_dungeon_end" value="lualib:on_dungeon_end($VAR1$)&#10;$END$" description="on_dungeon_end=&quot;void  on_dungeon_end(string  strMap,string  strMapKey) 副本销毁时回调.  参数:strMap 副本的GUID.,strMapKey 副本的KeyName., 返回:无返回值. 备注:lua_trigger_dungeon_end 副本结束时触发，回调函数:void on_dungeon_end(const std::stringamp; map, const std::stringamp; map_key);   该触发器触发时，地图中的所有玩家、怪物、NPC、物品等对象都还存在。触发器执行完成后，对象全部被清除。 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDBNum" value="lualib:SetDBNum($VAR1$)&#10;$END$" description="SetDBNum=&quot;bool  SetDBNum(string  strKey,double  dbValue) 在数据库中存储数值型变量.  参数:strKey 变量名.,dbValue 变量值., 返回:成功或失败. 备注:数值范围同double的取值范围，可以存带小数点的数值。需要删除该变量时，设值为0即可。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetDBNum" value="lualib:GetDBNum($VAR1$)&#10;$END$" description="GetDBNum=&quot;double  GetDBNum(string  strKey) 取得数据库中存储的数值型变量.  参数:strKey 变量名., 返回:变量值. 备注:如果该变量不存在，默认返回0。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDBStr" value="lualib:SetDBStr($VAR1$)&#10;$END$" description="SetDBStr=&quot;bool  SetDBStr(string  strKey,string  strValue) 在数据库中存储字符型变量.  参数:strKey 变量名.,strValue 变量值., 返回:成功或失败. 备注:需要删除该变量时，设值为ldquo;rdquo;即可。最大字符串长度为64K。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetDBStr" value="lualib:GetDBStr($VAR1$)&#10;$END$" description="GetDBStr=&quot;string  GetDBStr(string  strKey) 取得数据库中存储的字符型变量.  参数:strKey 变量名., 返回:变量值. 备注:如果该变量不存在，默认返回ldquo;rdquo;。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDBNumEx" value="lualib:SetDBNumEx($VAR1$)&#10;$END$" description="SetDBNumEx=&quot;bool  SetDBNumEx(string  strKey,double  dbValue,uint8  byType) 在数据库中存储数值型变量.  参数:strKey 变量名.,dbValue 变量值.,byType 变量全区类型, 0 = 忽略,合区时保留目标数据库数据 1 = 替换,合区时保留源数据库数据 2 = 取大,合区时取大的数据，只对整型 3 = 取小,合区时取小的数据,只对整形 4 = 相加,合区时结果相加,只对整形 5 = 相连,合区时结果相连,只对字符串 6 = 删除,合区时清除, 返回:成功或失败. 备注:合区类型：   0 合区时忽略，合区时保留目标数据库数据。默认类型，SetDBNum、SetDBStr就是用的这种类型。   1 合区时替换，合区时保留源数据库数据。   2 合区时取大，合区时保留最大的值，只针对数值型变量有效   3 合区时取小，合区时保留最小的值，只针对数值型变量有效   4 合区时相加，合区时结果相加，只针对数值型变量有效   5 合区时相连，合区时值连接，只针对字符型变量有效   6 合区时清除，合区时直接删除  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDBStrEx" value="lualib:SetDBStrEx($VAR1$)&#10;$END$" description="SetDBStrEx=&quot;bool  SetDBStrEx(string  strKey,string  dbValue,uint8  byType) 在数据库中存储字符型变量.  参数:strKey 变量名.,dbValue 变量值.,byType 变量全区类型, 0 = 忽略,合区时保留目标数据库数据 1 = 替换,合区时保留源数据库数据 2 = 取大,合区时取大的数据，只对整型 3 = 取小,合区时取小的数据,只对整形 4 = 相加,合区时结果相加,只对整形 5 = 相连,合区时结果相连,只对字符串 6 = 删除,合区时清除, 返回:成功或失败. 备注:  合区类型：       0 合区时忽略，合区时保留目标数据库数据。默认类型，SetDBNum、SetDBStr就是用的这种类型。       1 合区时替换，合区时保留源数据库数据。       2 合区时取大，合区时保留最大的值，只针对数值型变量有效       3 合区时取小，合区时保留最小的值，只针对数值型变量有效       4 合区时相加，合区时结果相加，只针对数值型变量有效       5 合区时相连，合区时值连接，只针对字符型变量有效       6 合区时清除，合区时直接删除  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GridAttr" value="lualib:GridAttr($VAR1$)&#10;$END$" description="GridAttr=&quot;bool  GridAttr(string  strMap,int32  iX,int32  iY,int32  iType) 判断地图格子属性是否相符.  参数:strMap 地图的GUID.,iX 地图X坐标.,iY 地图Y坐标.,iType 格子属性,1 = 不可移动点 2 = 魔法攻击阻挡 3 = 物理攻击阻挡 4 = 可穿透点 5 = 跳转点 6 = 复活点 7 = 摆摊点 8 = 安全区点 9 = 竞技区点 10 = PK区点 11 = 挖矿区点, 返回:true = 是,false = 否. 备注:判断某地图某坐标点的属性是否为指定的类型。   type 1 =  阻挡点   type 2 = 魔法阻挡点   type 3 = 物理阻挡点   type 4 = 可穿透点   type 5 = 跳转点   type 6 = 复活点   type 7 = 摆摊点   type 8 = 安全区点   type 9 = 竞技区点   type 10 = PK区点   type 11 = 挖矿区点  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetServantLevel" value="lualib:Player_SetServantLevel($VAR1$)&#10;$END$" description="Player_SetServantLevel=&quot;void  Player_SetServantLevel(string  strObject,uint8  byLevel) 设置召唤宝宝的等级.  参数:strObject 为玩家的GUID,则修改玩家所有的宝宝等级.为宝宝GUID,则修改宝宝的等级.,byLevel 宝宝的等级., 返回:无返回值. 备注:将玩家所有宠物都设置为指定的等级，最大等级由策划表决定。如果填写等级无效，则使用默认等级。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsAntiIndulge" value="lualib:Player_IsAntiIndulge($VAR1$)&#10;$END$" description="Player_IsAntiIndulge=&quot;bool  Player_IsAntiIndulge(string  strPlayer) [此函数过期, 禁用] 判断是否防沉迷玩家.  参数:strPlayer 玩家的GUID., 返回:是或否. 参考:IsAntiIndulge,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_billin" value="lualib:on_billin($VAR1$)&#10;$END$" description="on_billin=&quot;void  on_billin(string  strPlayer,int32  iBillinIngot) 玩家在线冲值时回调.  参数:strPlayer 玩家的GUID.,iBillinIngot 当次充值元宝数., 返回:无返回值. 备注:lua_trigger_billin 充值触发，只有玩家在线才会触发    回调函数 void on_billin(strPlayer, iBillinIngot) 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_mall" value="lualib:on_mall($VAR1$)&#10;$END$" description="on_mall=&quot;void  on_mall(string  strPlayer,int32  iBilloutIngot,uint8  byBind,string  strItem) 玩家在商城消费时回调.  参数:strPlayer 玩家的GUID.,iBilloutIngot 当次消费的元宝数.,byBind 绑定类型. 1 = 绑定, 2 = 不绑定.,strItem 购买物品的GUID., 返回:无返回值. 备注:lua_trigger_mall 商城消费触发   回调函数 void on_mall(strPlayer, iBilloutIngot, byBind, strItem) 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DelSkill" value="lualib:DelSkill($VAR1$)&#10;$END$" description="DelSkill=&quot;bool  DelSkill(string  strPlayer,string  strSkillKey) 删除玩家技能.  参数:strPlayer 玩家的GUID.,strSkillKey 技能的KeyName., 返回:成功或失败. 备注:只支持keyname删除，没有理会技能链。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DelAllSkill" value="lualib:DelAllSkill($VAR1$)&#10;$END$" description="DelAllSkill=&quot;bool  DelAllSkill(string  strPlayer) 删除玩家所有技能.  参数:strPlayer 玩家的GUID., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GenTimerId" value="lualib:GenTimerId($VAR1$)&#10;$END$" description="GenTimerId=&quot;uint32  GenTimerId(string  strObject) 根据对象,自动生成定时器ID.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统., 返回:定时器ID,无则返回0. 备注:生成没用过的定时器ID，防止定时器ID重复。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_BatchGenCampMonster" value="lualib:Map_BatchGenCampMonster($VAR1$)&#10;$END$" description="Map_BatchGenCampMonster=&quot;bool  Map_BatchGenCampMonster(string  strMap,string  strMonsterKey,uint16  wCount,bool  bCanRelive,int32  iCamp) 在地图中随机刷怪.  参数:strMap 地图GUID.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,iCamp 阵营., 返回:成功或失败. 备注:地图中随机刷阵营怪  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenCampMonster" value="lualib:Map_GenCampMonster($VAR1$)&#10;$END$" description="Map_GenCampMonster=&quot;bool  Map_GenCampMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir,string  strMonsterKey,uint16  wCount,bool  bCanRelive,int32  iCamp) 在地图中指定范围刷怪.  参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,iCamp 阵营., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenSingleCampMonster" value="lualib:Map_GenSingleCampMonster($VAR1$)&#10;$END$" description="Map_GenSingleCampMonster=&quot;string  Map_GenSingleCampMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir,string  strMonsterKey,bool  bCanRelive,int32  iCamp) 在地图中指定范围刷单只怪.  参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,bCanRelive 是否可以复活.,iCamp 阵营., 返回:怪物GUID.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:KickByName" value="lualib:KickByName($VAR1$)&#10;$END$" description="KickByName=&quot;bool  KickByName(string  name,int32  type,string  reason) 通过玩家角色名或账号名踢除玩家 参数:name 玩家的角色名或账号名由参数type决定.,type type=2按角色名踢,type=3按账号名踢,reason 踢人的原因用于日志服务器记录, 返回:成功返回true 玩家不再返回false. 备注:注意：该接口是异步的。接口返回时，踢人动作还没有执行，并且执行结果未知。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Achievement" value="lualib:Achievement($VAR1$)&#10;$END$" description="Achievement=&quot;int32  Achievement(string  strRole) 取得角色的成就.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:成就.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddAvataBuff" value="lualib:AddAvataBuff($VAR1$)&#10;$END$" description="AddAvataBuff=&quot;bool  AddAvataBuff(string  strRole,int32  iAvata,string  strBuffKey,string  strSkillKey,uint32  dwTimes) 给角色添加变身BUFF.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iAvata 变身模型ID.,strBuffKey BUFF的KeyName.,strSkillKey BUFF对应的技能KeyName.,dwTimes BUFF的持继时间,单位为秒., 返回:成功或失败. 备注:变身模型ID编号请咨询策划，服务器上仅仅保存ID数值，不做任何用途。 警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddBindGold" value="lualib:AddBindGold($VAR1$)&#10;$END$" description="AddBindGold=&quot;bool  AddBindGold(string  strPlayer,int  iGold,string  strDesc,string  strTarget) 添加角色绑定金币.  参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:  添加角色绑定金币会在日志服务器记录日志。记录信息有角色名、添加时所在地图名、地图坐标、原始绑定金币、添加的绑定金币、添加绑定金币的原因、添加绑定金币动作的发起者、添加绑定金币的脚本名。 参考:AddGold,AddBindGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddBindIngot" value="lualib:AddBindIngot($VAR1$)&#10;$END$" description="AddBindIngot=&quot;bool  AddBindIngot(string  strPlayer,int  iIngot,string  strDesc,string  strTarget) 添加角色绑定元宝.  参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:  添加角色绑定元宝会在日志服务器记录日志。记录信息有角色名、添加时所在地图名、地图坐标、原始绑定元宝、添加的绑定元宝、添加绑定元宝的原因、添加绑定元宝动作的发起者、添加绑定元宝的脚本名。 参考:AddIngot,AddBindIngot,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddExp" value="lualib:AddExp($VAR1$)&#10;$END$" description="AddExp=&quot;bool  AddExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget) 添加角色经验.  参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:  添加角色经验会在日志服务器记录日志。记录信息有角色名、添加时所在地图名、地图坐标、原始经验、添加的经验、添加经验的原因、添加经验动作的发起者、添加经验的脚本名。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddGold" value="lualib:AddGold($VAR1$)&#10;$END$" description="AddGold=&quot;bool  AddGold(string  strPlayer,int  iGold,string  strDesc,string  strTarget) 添加角色非绑定金币.  参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:  添加角色金币会在日志服务器记录日志。记录信息有角色名、添加时所在地图名、地图坐标、原始金币、添加的金币、添加金币的原因、添加金币动作的发起者、添加金币的脚本名。 参考:AddGold,AddBindGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddIngot" value="lualib:AddIngot($VAR1$)&#10;$END$" description="AddIngot=&quot;bool  AddIngot(string  strPlayer,int  iIngot,string  strDesc,string  strTarget) 添加角色非绑定元宝.  参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:添加角色元宝会在日志服务器记录日志。记录信息有角色名、添加时所在地图名、地图坐标、原始元宝、添加的元宝、添加元宝的原因、添加元宝动作的发起者、添加元宝的脚本名。 参考:AddIngot,AddBindIngot,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddIntegral" value="lualib:AddIntegral($VAR1$)&#10;$END$" description="AddIntegral=&quot;bool  AddIntegral(string  strPlayer,int32  iIntegral,string  strDesc,string  strTarget) 添加角色积分.  参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:添加角色积分会在日志服务器记录日志。记录信息有角色名、添加时所在地图名、地图坐标、原始积分、添加的积分、添加积分的原因、添加积分动作的发起者、添加积分的脚本名。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddSingleItem" value="lualib:AddSingleItem($VAR1$)&#10;$END$" description="AddSingleItem=&quot;string  AddSingleItem(string  strPlayer,string  strItemKey,uint16  wCount,uint8  bBind,string  strDesc,string  strTarget) 给予玩家单个物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.不能超过该物品的最大堆叠数,否则给予失败.,bBind 绑定类型.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:新物品的GUID,出错返回''. 备注:注意：必须保证给予的物品只能生成一个实体，因为返回值限定只能返回一个GUID。要生成多个物品请使用：AddItem。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddTimer" value="lualib:AddTimer($VAR1$)&#10;$END$" description="AddTimer=&quot;bool  AddTimer(string  strObject,uint32  dwTimerID,int32  iElapse,int32  iCount,string  strCallBack) 给对象添加定时器.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,iElapse 定时器的触发间隔,单位:毫秒.,iCount 定时器的触发次数.设为-1时,无限触发.,strCallBack 定时器触发时,回调该函数.函数格式: 1 = 函数名 2 = 文件名:函数名., 返回:成功或失败. 备注:使用定时器要注意以下几点：   1.定时器的回调间隔根据实际情况评估，精度不要太高。否则对服务器性能影响非常大。   2.定时器完成功能以后，务必第一时间删除掉（调用次数很多的情况下）。LUA的定时器回调是很耗服务器资源的。   3.同GUID下定时器ID不能重复，否则添加会失败。   4.尽量不要给玩家添加定时器，除非没有替代方法实现功能。   5.如果一个玩法需要给服务器添加大量定时器，那你是在异想开天。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Amulet" value="lualib:Amulet($VAR1$)&#10;$END$" description="Amulet=&quot;string  Amulet(string  strPlayer) 取得玩家当前装备的守护.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意返回值的判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AntiIndulgeExpire" value="lualib:AntiIndulgeExpire($VAR1$)&#10;$END$" description="AntiIndulgeExpire=&quot;void  AntiIndulgeExpire(string  strPlayer) 强制让角色的沉迷状态过期.  参数:strPlayer 玩家的GUID., 返回:无返回值. 备注:该接口是异步的，接口调用完成后执行结果未知。   因为防沉迷状态是由验证服务器决定的，所以脚本强制修改后仅针对当前登陆有效，下次登陆后被重置。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Armor" value="lualib:Armor($VAR1$)&#10;$END$" description="Armor=&quot;string  Armor(string  strPlayer) 取得玩家当前装备的衣服.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意返回值的判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Attr" value="lualib:Attr($VAR1$)&#10;$END$" description="Attr=&quot;int32  Attr(string  strRole,int32  iAttrName) 获取角色属性值.  参数:strRole 角色的GUID.,iAttrName 属性类型., 返回:属性值. 备注:获取角色属性值，参数为Att表中的属性ID。具体信息请参考eRoleAttr。 参考:eRoleAttr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Brawn" value="lualib:Brawn($VAR1$)&#10;$END$" description="Brawn=&quot;int32  Brawn(string  strRole,bool  bLimit) 取得角色的腕力.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:腕力.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ClearTimer" value="lualib:ClearTimer($VAR1$)&#10;$END$" description="ClearTimer=&quot;void  ClearTimer(string  strObject) 清除对象的所有定时器.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统., 返回:无返回值. 备注:清除定时器时有二种情况：   1.在定时器的回调中删除自身时，删除动作是异步的。系统会将定时器回调次数强制修改为0，让定时器自然消亡。   2.在其它场合删除定时器时，直接执行删除动作。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:CreateHeroForPlayer" value="lualib:CreateHeroForPlayer($VAR1$)&#10;$END$" description="CreateHeroForPlayer=&quot;bool  CreateHeroForPlayer(string  player,string  name,uint8  job,uint8  gender,string  callback,string  params) 创建英雄 参数:player 玩家guid.,name 英雄的姓名.,job 英雄的职业.,gender 英雄的性别.,callback 创建完成后的回调.,params 回调参数., 返回:创建请求是否成功. 备注:该创建是异步过程，是否成功会通过回调函数告知。   回调函数 void callback(player, err, param) err为0时表示创建成功, 反之表示失败  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DeleteHeroForPlayer" value="lualib:DeleteHeroForPlayer($VAR1$)&#10;$END$" description="DeleteHeroForPlayer=&quot;bool  DeleteHeroForPlayer(string  player,string  hero) 删除英雄（未开放） 参数:player 玩家guid.,hero 英雄的guid., 返回:删除请求是否成功. 备注:异步过程，是否成功会通过回调函数告知。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DelUnmatchedSkill" value="lualib:DelUnmatchedSkill($VAR1$)&#10;$END$" description="DelUnmatchedSkill=&quot;bool  DelUnmatchedSkill(string  strPlayer) 删除玩家非本职业技能.  参数:strPlayer 玩家的GUID., 返回:成功或失败. 备注:技能职业限制参考skill表的Job字符。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:DestroyDummy" value="lualib:DestroyDummy($VAR1$)&#10;$END$" description="DestroyDummy=&quot;bool  DestroyDummy(string  dummy) 清除一个假人 参数:dummy 假人的GUID., 返回:清除是否成功. 备注:该接口可以用来清除任何假人，包括玩家的英雄；如果这个假人需要保存，会自动保存到数据库（只有从数据库载入的才会保存）  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Dir" value="lualib:Dir($VAR1$)&#10;$END$" description="Dir=&quot;int32  Dir(string  strRole) 取得角色的方向.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:方向值,出错返回-1.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Energy" value="lualib:Energy($VAR1$)&#10;$END$" description="Energy=&quot;int32  Energy(string  strRole,bool  bLimit) 取得角色的活力.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:活力.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:EquipWeight" value="lualib:EquipWeight($VAR1$)&#10;$END$" description="EquipWeight=&quot;int32  EquipWeight(string  strRole,bool  bLimit) 取得角色的装备负重.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:装备负重.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:FindFirstBagFreeSlot" value="lualib:FindFirstBagFreeSlot($VAR1$)&#10;$END$" description="FindFirstBagFreeSlot=&quot;int32  FindFirstBagFreeSlot(string  strPlayer) 获取玩家背包第一个空格位.  参数:strPlayer 玩家的GUID., 返回:背包空格位,没有空格则返回-1. 备注:调用前会先重构背包。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Gem" value="lualib:Gem($VAR1$)&#10;$END$" description="Gem=&quot;string  Gem(string  strPlayer) 取得玩家当前装备的宝石.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意返回值的判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Gender" value="lualib:Gender($VAR1$)&#10;$END$" description="Gender=&quot;int32  Gender(string  strRole) 取得角色的性别.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:性别. 备注:1 = 男， 2 = 女。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GenDummy" value="lualib:GenDummy($VAR1$)&#10;$END$" description="GenDummy=&quot;string  GenDummy(string  name,uint8  job,uint8  gender,string  map,uint16  x,uint16  y) 在地图上生成一个假人 参数:name 假人的名称.,job 假人的职业,gender 假人的性别.,map 生成目标地图.,x 生成目标坐标X.,y 生成目标坐标Y., 返回:假人的GUID. 备注:无 警告:不要使用该假人干一些需要保存的事情，因为这个假人不会存档.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GenHeroForPlayer" value="lualib:GenHeroForPlayer($VAR1$)&#10;$END$" description="GenHeroForPlayer=&quot;bool  GenHeroForPlayer(string  player,string  hero,string  callback,string  params) 载入玩家的某个英雄 参数:player 玩家guid.,hero 英雄的guid.,callback 载入完成后的回调.,params 回调参数., 返回:载入请求是否成功. 备注:异步过程，是否成功会通过回调函数告知。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetActiveCount" value="lualib:GetActiveCount($VAR1$)&#10;$END$" description="GetActiveCount=&quot;int  GetActiveCount(string  strPlayerName) 取得玩家的总共活跃点数 参数:strPlayerName 玩家的名字., 返回:取得玩家的活跃点数,如果玩家找不到返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetActiveCountToday" value="lualib:GetActiveCountToday($VAR1$)&#10;$END$" description="GetActiveCountToday=&quot;int  GetActiveCountToday(string  strPlayerName) 取得玩家的活跃点数 参数:strPlayerName 玩家的名字., 返回:取得玩家的活跃点数,如果玩家找不到返回0. 备注:活跃点：玩家一系统动作的评估值，比如移动、放技能等等。   此接口取的是今天的  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetBagFree" value="lualib:GetBagFree($VAR1$)&#10;$END$" description="GetBagFree=&quot;int32  GetBagFree(string  strPlayer) 取得玩家包裹空格子数量.  参数:strPlayer 玩家的GUID., 返回:包裹空格子数,出错返回-1. 备注:与GetBagFreeEx相比，不同之处在于默认只判断背玩包裹。 参考:GetBagFree,GetBagFreeEx,BagFree,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetBagFreeEx" value="lualib:GetBagFreeEx($VAR1$)&#10;$END$" description="GetBagFreeEx=&quot;int32  GetBagFreeEx(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse) 取得玩家包裹空格子数量.  参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库., 返回:包裹空格子数,出错返回-1. 参考:GetBagFree,GetBagFreeEx,BagFree,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetBagSize" value="lualib:GetBagSize($VAR1$)&#10;$END$" description="GetBagSize=&quot;int32  GetBagSize(string  strPlayer) 取得玩家包裹大小.  参数:strPlayer 玩家的GUID., 返回:包裹大小,出错返回-1. 备注:与GetBagSizeEx相比，不同之处在于默认只判断背玩包裹。 参考:GetBagSize,GetBagSizeEx,BagSize,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetBagSizeEx" value="lualib:GetBagSizeEx($VAR1$)&#10;$END$" description="GetBagSizeEx=&quot;int32  GetBagSizeEx(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse) 取得玩家包裹大小.  参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库., 返回:包裹大小,出错返回-1. 参考:GetBagSize,GetBagSizeEx,BagSize,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetBindGold" value="lualib:GetBindGold($VAR1$)&#10;$END$" description="GetBindGold=&quot;double  GetBindGold(string  strPlayer) 取得角色绑定金币.  参数:strPlayer 玩家的GUID., 返回:玩家绑定金币的数量. 参考:GetGold,GetBindGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetBindIngot" value="lualib:GetBindIngot($VAR1$)&#10;$END$" description="GetBindIngot=&quot;double  GetBindIngot(string  strPlayer) 取得角色绑定元宝.  参数:strPlayer 玩家的GUID., 返回:玩家绑定元宝的数量. 参考:GetIngot,GetBindIngot,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetBuffTime" value="lualib:GetBuffTime($VAR1$)&#10;$END$" description="GetBuffTime=&quot;int  GetBuffTime(string  strRole,string  strBuffKey) 取得BUFF剩余时间.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName., 返回:剩余时间,单位秒.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetDayInt" value="lualib:GetDayInt($VAR1$)&#10;$END$" description="GetDayInt=&quot;uint32  GetDayInt(string  strObject,string  strKey) 取得对象实体上设置的数值型天变量.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名., 返回:变量的值,如果变量已跨天返回0. 备注:天的概念指自然天，不是固定的24小时（午夜00:00:00即为跨天）。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetDayStr" value="lualib:GetDayStr($VAR1$)&#10;$END$" description="GetDayStr=&quot;string  GetDayStr(string  strObject,string  strKey) 取得对象实体上设置的字符型天变量.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名., 返回:变量的值,如果变量已跨天返回''. 备注:天的概念指自然天，不是固定的24小时（午夜00:00:00即为跨天）。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetDynamicAttr" value="lualib:GetDynamicAttr($VAR1$)&#10;$END$" description="GetDynamicAttr=&quot;table  GetDynamicAttr(string  strPlayer,int32  iAttrSite) 获取玩家动态属性.  参数:strPlayer 玩家的GUID.,iAttrSite 动态属性编号0-99., 返回:动态属性信息,返回lua table.如: local tAttrPair = lualib:GetDynamicAttr(strPlayer, 0); local iAttrType, iAttrVale = tAttrPair['attr_name'], tAttrPair['attr_value']; 备注:                                 3         lua_role_max_hp         hp上限         hp上限         1               5         lua_role_max_mp         mp上限         mp上限         1               6         lua_role_max_phy_def         物防上限         物防上限         1               7         lua_role_min_phy_def         物防下限         物防下限         1               8         lua_role_max_mag_def         魔防上限         魔防上限         1               9         lua_role_min_mag_def         魔防下限         魔防下限         1               10         lua_role_max_phy_atk         物攻上限         物攻上限         1               11         lua_role_min_phy_atk         物攻下限         物攻下限         1               12         lua_role_max_mag_atk         魔攻上限         魔攻上限         1               13         lua_role_min_mag_atk         魔攻下限         魔攻下限         1               14         lua_role_max_tao_atk         道术上限         道术上限         1               15         lua_role_min_tao_atk         道术下限         道术下限         1               16         lua_role_hit         命中         命中         1               17         lua_role_miss         闪避         闪避         1               18         lua_role_move_speed         移动速度，基准值         移动速度，基准值         1               19         lua_role_attack_speed         攻击速度，基准值         攻击速度，基准值         1               21         lua_role_max_weight         上限背包负重         上限背包负重         1               23         lua_role_max_equip_weight         上限装备负重         上限装备负重         1               25         lua_role_max_brawn         上限腕力         上限腕力         1               44         lua_role_hp_rec         hp回复值         hp回复值         1               45         lua_role_mp_rec         mp回复值         mp回复值         1               46         lua_role_poison_rec         中毒恢复值         中毒恢复值         1               49         lua_role_burst         暴击率         暴击率         1               50         lua_role_luck_curse         幸运诅咒         幸运诅咒         1               83         lua_role_max_phy_def_pct         物防上限百分比         物防上限百分比         1               84         lua_role_min_phy_def_pct         物防下限百分比         物防下限百分比         1               85         lua_role_max_mag_def_pct         魔防上限百分比         魔防上限百分比         1               86         lua_role_min_mag_def_pct         魔防下限百分比         魔防下限百分比         1               87         lua_role_max_phy_atk_pct         物攻上限百分比         物攻上限百分比         1               88         lua_role_min_phy_atk_pct         物攻下限百分比         物攻下限百分比         1               89         lua_role_max_mag_atk_pct         魔攻上限百分比         魔攻上限百分比         1               90         lua_role_min_mag_atk_pct         魔攻下限百分比         魔攻下限百分比         1               91         lua_role_max_tao_atk_pct         道术上限百分比         道术上限百分比         1               92         lua_role_min_tao_atk_pct         道术下限百分比         道术下限百分比         1               106         lua_role_hp_rec_pct         hp回复速度百分比         hp回复速度百分比         1               107         lua_role_mp_rec_pct         mp回复速度百分比         mp回复速度百分比         1               111         lua_role_suck_hp         吸血         吸当前hp-数值         1               112         lua_role_suck_hp_pct         吸血百分比         吸当前hp-百分比         1               113         lua_role_suck_max_hp_pct         吸血上限百分比         吸hp上限-百分比         1               114         lua_role_suck_mp         吸魔         吸当前mp-数值         1               115         lua_role_suck_mp_pct         吸魔百分比         吸当前mp-百分比         1               116         lua_role_suck_max_mp_pct         吸魔上限百分比         吸mp上限-百分比         1               117         lua_role_ref_phy         物理伤害反射         物理伤害反射-数值         1               118         lua_role_ref_phy_pct         物理伤害反射百分比         物理伤害反射-百分比         1               119         lua_role_ref_mag         魔法伤害反射数值         魔法伤害反射-数值         1               120         lua_role_ref_mag_pct         魔法伤害反射百分比         魔法伤害反射-百分比         1               121         lua_role_imm_mag         魔法伤害减免数值         魔法伤害减免-数值         1               122         lua_role_imm_mag_pct         魔法伤害减免百分比         魔法伤害减免-百分比         1               123         lua_role_imm_phy         物理伤害减免数值         物理伤害减免-数值         1               124         lua_role_imm_phy_pct         物理伤害减免百分比         物理伤害减免-百分比         1               返回值格式：   local tDynamicAttr = lualib:GetDynamicAttr(strPlayer, iAttrSite);   tDynamicAttr['attr_name'] = 动态属性类型   tDynamicAttr['attr_value'] = 动态属性值 参考:eRoleAttr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetExp" value="lualib:GetExp($VAR1$)&#10;$END$" description="GetExp=&quot;double  GetExp(string  strPlayer) 获取角色经验.  参数:strPlayer 玩家的GUID., 返回:当前经验值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetFamilyCastles" value="lualib:GetFamilyCastles($VAR1$)&#10;$END$" description="GetFamilyCastles=&quot;string  GetFamilyCastles(string  strFamily) 获取行会的占领城堡.  参数:strFamily 行会的GUID., 返回:行会占领的城堡,多个用amp;分隔,没有则返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetFamilyMembers" value="lualib:GetFamilyMembers($VAR1$)&#10;$END$" description="GetFamilyMembers=&quot;table  GetFamilyMembers(string  strPlayer,bool  bIsOnline) 返回玩家所属行会成员的列表 参数:strPlayer 玩家GUID.,bIsOnline 是否只取在线成员., 返回:行会成员列表的lua table. 备注:行会成员包括玩家自己。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetGold" value="lualib:GetGold($VAR1$)&#10;$END$" description="GetGold=&quot;double  GetGold(string  strPlayer) 取得角色非绑定金币.  参数:strPlayer 玩家的GUID., 返回:玩家非绑定金币的数量. 参考:GetGold,GetBindGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetIngot" value="lualib:GetIngot($VAR1$)&#10;$END$" description="GetIngot=&quot;double  GetIngot(string  strPlayer) 取得角色非绑定元宝.  参数:strPlayer 玩家的GUID., 返回:玩家非绑定元宝的数量. 参考:GetIngot,GetBindIngot,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetIntegral" value="lualib:GetIntegral($VAR1$)&#10;$END$" description="GetIntegral=&quot;double  GetIntegral(string  strPlayer) 获取角色积分.  参数:strPlayer 玩家的GUID., 返回:角色积分.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetItemsByKeys" value="lualib:GetItemsByKeys($VAR1$)&#10;$END$" description="GetItemsByKeys=&quot;table  GetItemsByKeys(string  strPlayer,string  strKeys,bool  bEquip,bool  bBag,bool  bWarehouse,bool  bWarehouseAdv) 根据KeyName取得玩家物品的GUID列表 参数:strPlayer 玩家GUID.,strKeys 物品的KeyName,使用多个KeyName时使用Key1#Key2....#Keyn的方式.,bEquip 是否查找装备栏,bBag 是否查找包裹,bWarehouse 是否查找仓库,bWarehouseAdv 是否查找高级仓库, 返回:返回符合条件的物品GUID列表,结果存放在lua table中.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetLocalTime" value="lualib:GetLocalTime($VAR1$)&#10;$END$" description="GetLocalTime=&quot;uint32  GetLocalTime(void  ) [此函数过期, 禁用] 从1970年1月1日0时0分0到现在经过的秒数.  参数: , 返回:时间秒数. 参考:GetTime,GetLocalTime,GetAllTime,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetLuaPerformance" value="lualib:GetLuaPerformance($VAR1$)&#10;$END$" description="GetLuaPerformance=&quot;table  GetLuaPerformance(void  ) 查询所有脚本的性能参数.  参数: , 返回:返回lua table. 如:local tPerformances = lualib:GetLuaPerformance(); local strLuaName, strFuncName, dwCount, dwTotal = tPerformances['File'], tPerformances['Function'], tPerformances['Count'], tPerformances['Total']; 备注:使用该接口必须满足以下条件：   使用GM指令：@lp 开启LUA性能监测。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetPlayerCurrentHeroList" value="lualib:GetPlayerCurrentHeroList($VAR1$)&#10;$END$" description="GetPlayerCurrentHeroList=&quot;table  GetPlayerCurrentHeroList(string  player) 获取玩家已经载入的英雄列表 参数:player 玩家的GUID., 返回:英雄列表. 备注:返回一个数组，每个项包含英雄的guid  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetPlayerHeroList" value="lualib:GetPlayerHeroList($VAR1$)&#10;$END$" description="GetPlayerHeroList=&quot;table  GetPlayerHeroList(string  player) 获取玩家所有的英雄列表 参数:player 玩家的GUID., 返回:英雄列表. 备注:返回一个数组，每个项包含英雄的guid，名字，职业等  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetQuestAccomplishing" value="lualib:GetQuestAccomplishing($VAR1$)&#10;$END$" description="GetQuestAccomplishing=&quot;string  GetQuestAccomplishing(uint16  wQuestID) 取得任务完成时的追踪文本 参数:wQuestID 任务ID., 返回:任务追踪文本,如果任务找不到返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetQuestProgressing" value="lualib:GetQuestProgressing($VAR1$)&#10;$END$" description="GetQuestProgressing=&quot;string  GetQuestProgressing(uint16  wQuestID) 取得任务进行中的追踪文本 参数:wQuestID 任务ID., 返回:任务追踪文本,如果任务找不到返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetTickCount" value="lualib:GetTickCount($VAR1$)&#10;$END$" description="GetTickCount=&quot;uint32  GetTickCount(void  ) 返回系统的时钟嘀答数.  参数: , 返回:嘀答数. 备注:效果同WIN32 API:GetTickCount();  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetTime" value="lualib:GetTime($VAR1$)&#10;$END$" description="GetTime=&quot;uint32  GetTime(void  ) [此函数过期, 禁用] 从1970年1月1日0时0分0到现在经过的秒数.  参数: , 返回:时间秒数. 参考:GetTime,GetLocalTime,GetAllTime,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetTitle" value="lualib:GetTitle($VAR1$)&#10;$END$" description="GetTitle=&quot;int32  GetTitle(string  strPlayer) 取得玩家当前称号.  参数:strPlayer 玩家的GUID., 返回:当前称号ID,无则返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetWeekInt" value="lualib:GetWeekInt($VAR1$)&#10;$END$" description="GetWeekInt=&quot;uint32  GetWeekInt(string  strObject,string  strKey) 取得对象实体上设置的数值型周变量.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名., 返回:变量的值,如果变量已跨周返回0. 备注:周指的是自然周，而不是绝对间隔7天的一周时间。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetWeekStr" value="lualib:GetWeekStr($VAR1$)&#10;$END$" description="GetWeekStr=&quot;string  GetWeekStr(string  strObject,string  strKey) 取得对象实体上设置的字符型周变量.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名., 返回:变量的值,如果变量已跨周返回''. 备注:周指的是自然周，而不是绝对间隔7天的一周时间。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GMLevel" value="lualib:GMLevel($VAR1$)&#10;$END$" description="GMLevel=&quot;int32  GMLevel(string  strPlayer) 获取玩家的GM等级.  参数:strPlayer 玩家的GUID., 返回:玩家的GM等级.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:God" value="lualib:God($VAR1$)&#10;$END$" description="God=&quot;void  God(string  strPlayer) 开启上帝模式.  参数:strPlayer 玩家的GUID., 返回:无返回值. 备注:调用该接口会在日志服务器留下记录. 警告:请慎重使用该接口,以避免GM权限混乱引起重大事故.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Hair" value="lualib:Hair($VAR1$)&#10;$END$" description="Hair=&quot;int32  Hair(string  strRole) 取得角色的发型.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:发型编号. 参考:Hair,SetHair,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HairColor" value="lualib:HairColor($VAR1$)&#10;$END$" description="HairColor=&quot;int32  HairColor(string  strRole) 取得角色的头发颜色.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:头发颜色. 参考:HairColor,SetHairColor,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasFamily" value="lualib:HasFamily($VAR1$)&#10;$END$" description="HasFamily=&quot;bool  HasFamily(string  strFamilyName) 判断某个行会是否存在 参数:strFamilyName 行会的名字., 返回:存在或不存在.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Head" value="lualib:Head($VAR1$)&#10;$END$" description="Head=&quot;int32  Head(string  strRole) 取得角色的头像.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:头像编号. 备注:头像编号咨询策划资源信息。 参考:Head,SetHead,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Helmet" value="lualib:Helmet($VAR1$)&#10;$END$" description="Helmet=&quot;string  Helmet(string  strPlayer) 取得玩家当前装备的头盔.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HpPoint" value="lualib:HpPoint($VAR1$)&#10;$END$" description="HpPoint=&quot;int32  HpPoint(string  strRole) 取得角色的HP属性点.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:HP属性点.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_DeleteDir" value="lualib:IO_DeleteDir($VAR1$)&#10;$END$" description="IO_DeleteDir=&quot;bool  IO_DeleteDir(string  strDirName) 删除目录.  参数:strDirName 文件目录名., 返回:成功或失败. 备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等. 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_DeleteFile" value="lualib:IO_DeleteFile($VAR1$)&#10;$END$" description="IO_DeleteFile=&quot;bool  IO_DeleteFile(string  strFileName) 删除文件.  参数:strFileName 文件名., 返回:成功或失败. 备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等. 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IO_GetFileString" value="lualib:IO_GetFileString($VAR1$)&#10;$END$" description="IO_GetFileString=&quot;string  IO_GetFileString(string  strFileName) 读取文本文件所有内容.  参数:strFileName 文件名., 返回:文件内容. 备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等. 警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsAntiIndulge" value="lualib:IsAntiIndulge($VAR1$)&#10;$END$" description="IsAntiIndulge=&quot;bool  IsAntiIndulge(string  strPlayer) 判断玩家是否为防沉迷帐号.  参数:strPlayer 玩家的GUID., 返回:是或否. 备注:是否防沉迷在角色登陆时由验证服务器决定。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsCastleWarNull" value="lualib:IsCastleWarNull($VAR1$)&#10;$END$" description="IsCastleWarNull=&quot;bool  IsCastleWarNull(string  strCastleName) 判断某城堡战是否注册过.  参数:strCastleName 城堡名., 返回:是或否. 备注:城堡必须在本GS上。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:IsInRegion" value="lualib:IsInRegion($VAR1$)&#10;$END$" description="IsInRegion=&quot;bool  IsInRegion(table  tObject,uint16  wX,uint16  wY) 判断坐标是否在区域中.  参数:tObject tObject[1] = 0时,tObject[2]为区域中心点X坐标,tObject[3]为区域中心点Y坐标,tObject[4]为区域中心X半径,tObject[5]为区域中心Y半径. tObject[1] = 1时,tObject[2]为区域左上角X坐标,tObject[3]为区域左上角Y坐标,tObject[4]为区域宽度,tObject[5]为区域高度.,wX 判断点的X坐标.,wY 判断点的Y坐标., 返回:是或否. 备注:区域为闭区间。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetBySite" value="lualib:Item_GetBySite($VAR1$)&#10;$END$" description="Item_GetBySite=&quot;string  Item_GetBySite(string  strPlayer,uint16  wSite) 根据玩家背包格子位取物品GUID.  参数:strPlayer 玩家的GUID.,wSite 背包格子位., 返回:物品的GUID,没有物品返回''. 备注:site位置请参考lua_logic_define.lua。 参考:eRoleSite,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetCustomVarInt" value="lualib:Item_GetCustomVarInt($VAR1$)&#10;$END$" description="Item_GetCustomVarInt=&quot;int32  Item_GetCustomVarInt(string  strPlayer,string  strItem,string  strKey) [此函数过期, 禁用] 取得物品实体上存储的整型数值变量.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名., 返回:变量的值,如果变量不存在返回0. 警告:该接口已过期,不再提供技术支持. 参考:GetInt,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetCustomVarStr" value="lualib:Item_GetCustomVarStr($VAR1$)&#10;$END$" description="Item_GetCustomVarStr=&quot;string  Item_GetCustomVarStr(string  strPlayer,string  strItem,string  strKey) [此函数过期, 禁用] 取得物品实体上存储的字符型变量.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名., 返回:变量的值,如果变量不存在返回''. 警告:该接口已过期,不再提供技术支持. 参考:GetStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetID" value="lualib:Item_GetID($VAR1$)&#10;$END$" description="Item_GetID=&quot;uint16  Item_GetID(string  strPlayer,string  strItem) 取得物品的模版ID.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:物品模版ID,具体类型请参考策划Item表.出错返回0. 备注:参考策划item表。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetKeyName" value="lualib:Item_GetKeyName($VAR1$)&#10;$END$" description="Item_GetKeyName=&quot;string  Item_GetKeyName(string  strPlayer,string  strItem) [此函数过期, 禁用] 根据物品GUID取得KeyName.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:物品的KeyName,如果物品不存在返回''. 参考:KeyName,Name,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetName" value="lualib:Item_GetName($VAR1$)&#10;$END$" description="Item_GetName=&quot;string  Item_GetName(string  strPlayer,string  strItem) [此函数过期, 禁用] 根据物品GUID取得Name.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:物品的Name,如果物品不存在返回''. 参考:KeyName,Name,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetPosX" value="lualib:Item_GetPosX($VAR1$)&#10;$END$" description="Item_GetPosX=&quot;int32  Item_GetPosX(string  strMap,string  strItem) [此函数过期, 禁用] 根据物品GUID取得X坐标.  参数:strMap 物品所属地图GUID.,strItem 物品的GUID., 返回:物品的X坐标,如果物品不存在返回0. 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_GetPosY" value="lualib:Item_GetPosY($VAR1$)&#10;$END$" description="Item_GetPosY=&quot;int32  Item_GetPosY(string  strMap,string  strItem) [此函数过期, 禁用] 根据物品GUID取得Y坐标.  参数:strMap 物品所属地图GUID.,strItem 物品的GUID., 返回:物品的Y坐标,如果物品不存在返回0. 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_IsTimeLimit" value="lualib:Item_IsTimeLimit($VAR1$)&#10;$END$" description="Item_IsTimeLimit=&quot;bool  Item_IsTimeLimit(string  strPlayer,string  strItem) 根据物品GUID判断该物品是否时限道具.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:是或否. 备注:时限道具由策划item表决定。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_NotifyCustomParam" value="lualib:Item_NotifyCustomParam($VAR1$)&#10;$END$" description="Item_NotifyCustomParam=&quot;void  Item_NotifyCustomParam(string  strPlayer,string  strItem,string  strKey) [此函数过期, 禁用] 向物品的主人通知物品自定义变量更新.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,strKey 变量名., 返回:无返回值. 参考:NotifyVar,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_SetCustomVarInt" value="lualib:Item_SetCustomVarInt($VAR1$)&#10;$END$" description="Item_SetCustomVarInt=&quot;bool  Item_SetCustomVarInt(string  strPlayer,string  strItem,string  strKey,int32  iValue) [此函数过期, 禁用] 在物品实体上存储整型数值变量.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,iValue 变量值., 返回:成功或失败. 参考:SetInt,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_SetCustomVarStr" value="lualib:Item_SetCustomVarStr($VAR1$)&#10;$END$" description="Item_SetCustomVarStr=&quot;bool  Item_SetCustomVarStr(string  strPlayer,string  strItem,string  strKey,string  strValue) [此函数过期, 禁用] 在物品实体上存储字符型变量.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,strValue 变量值., 返回:成功或失败. 参考:SetStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemCount" value="lualib:ItemCount($VAR1$)&#10;$END$" description="ItemCount=&quot;int32  ItemCount(string  strPlayer,string  strItemKey) 取得玩家的物品数量.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName., 返回:符合条件的物品数量,出错返回-1.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemCountEx" value="lualib:ItemCountEx($VAR1$)&#10;$END$" description="ItemCountEx=&quot;int32  ItemCountEx(string  strPlayer,string  strItemKey,uint8  bBindType,bool  bEquip,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse) 取得玩家的物品数量.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,bBindType 绑定类型, 0 = 必须非绑定 1 = 必须绑定 2 = 绑定/非绑定,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库., 返回:符合条件的物品数量,出错返回-1. 备注:与ItemCount相比，增加了装备栏的判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemDropFreezeTime" value="lualib:ItemDropFreezeTime($VAR1$)&#10;$END$" description="ItemDropFreezeTime=&quot;uint32  ItemDropFreezeTime(string  strItem) 取得物品的掉落冻结时间 参数:strItem 物品GUID., 返回:返回物品掉落冻结时间. 备注:冻结时间:掉落后多久可以被别人拾取。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemDropHost" value="lualib:ItemDropHost($VAR1$)&#10;$END$" description="ItemDropHost=&quot;string  ItemDropHost(string  strItem) 取得物品的掉落源 参数:strItem 物品GUID., 返回:返回掉落源的GUID, 可能是玩家、怪物、地图、系统(''). 备注:注意返回值为系统GUID时的判断。   这里取到的掉落源为最近一次的源，比如怪物爆了某个道具，此时掉落源为该怪物GUID，然后某玩家拾取了该道具后又爆出或者丢弃，则此时掉落源为该玩家GUID；   玩家爆出的道具，掉落源为玩家；   怪物爆出的道具，掉落源为怪物；   用Map_GenItem之类接口的刷出来的道具，掉落源为地图；   其他例如AddItem之类接口或者@i指令刷出来的道具，掉落源为系统。如果包包满了掉在地上，则掉落类型为地图自动掉落，掉落源为玩家。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemDropTime" value="lualib:ItemDropTime($VAR1$)&#10;$END$" description="ItemDropTime=&quot;uint32  ItemDropTime(string  strItem) 取得物品的掉落时间 参数:strItem 物品GUID., 返回:返回物品掉落时间. 备注:时间单位为秒，可以使用Time2Str取得字符串时间。   这里取到的掉落时间为最近一次的时间，比如怪物2013-08-01 10:00:00爆了某个道具，此时掉落源为该时间，然后某玩家拾取了该道具后又于2013-08-01 20:00:00爆出或者丢弃，则此时掉落时间变成该时间。 参考:Time2Str,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemDropType" value="lualib:ItemDropType($VAR1$)&#10;$END$" description="ItemDropType=&quot;int  ItemDropType(string  strItem) 取得物品的掉落类型 参数:strItem 物品GUID., 返回:返回物品掉落类型,参考lua_logic_define.lua. 备注:掉落类型：   1 = 玩家扔的物品   2 = 玩家爆的物品   3 = 怪物爆的物品   4 = 脚本刷的物品   5 = 地图刷的物品   6 = 背包满爆到地上的物品  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemKeyName" value="lualib:ItemKeyName($VAR1$)&#10;$END$" description="ItemKeyName=&quot;string  ItemKeyName(string  strPlayer,string  strItem) [此函数过期, 禁用] 根据物品的GUID取得物品的KeyName.  参数:strPlayer 玩家的GUID.,strItem 物品的GUID., 返回:物品的KeyName,如果物品或玩家不存在返回''. 备注:已过期的接口,不再提供技术支持. 参考:KeyName,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ItemRole" value="lualib:ItemRole($VAR1$)&#10;$END$" description="ItemRole=&quot;string  ItemRole(string  strItem) [此函数过期, 禁用] 取得物品的归属 取得物品的归属.  参数:strItem 物品GUID., 返回:物品归属者GUID,如果无归属或物品不存在返回''. 参考:Item_GetRole,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Job" value="lualib:Job($VAR1$)&#10;$END$" description="Job=&quot;int32  Job(string  strRole) 取得角色的职业.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:职业. 备注:职业为： 1 = 战士 2 = 法师 3 = 道士。当角色不为玩家时，该接口无意义。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:JuJu" value="lualib:JuJu($VAR1$)&#10;$END$" description="JuJu=&quot;string  JuJu(string  strPlayer) 取得玩家当前装备的符咒.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LastAtkTime" value="lualib:LastAtkTime($VAR1$)&#10;$END$" description="LastAtkTime=&quot;uint32  LastAtkTime(string  strPlayer) 取得玩家的最后攻击时间TICK值.  参数:strPlayer 玩家的GUID., 返回:最后攻击时的TICK.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LastMoveTime" value="lualib:LastMoveTime($VAR1$)&#10;$END$" description="LastMoveTime=&quot;uint32  LastMoveTime(string  strPlayer) 取得玩家的最后移动时间TICK值.  参数:strPlayer 玩家的GUID., 返回:最后移动时的TICK.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LastTalkTime" value="lualib:LastTalkTime($VAR1$)&#10;$END$" description="LastTalkTime=&quot;uint32  LastTalkTime(string  strPlayer) 取得玩家的最后聊天时间TICK值.  参数:strPlayer 玩家的GUID., 返回:最后聊天时的TICK.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LeaveTeam" value="lualib:LeaveTeam($VAR1$)&#10;$END$" description="LeaveTeam=&quot;void  LeaveTeam(string  strPlayer) 离开队伍.  参数:strPlayer 玩家的GUID., 返回:无返回值. 备注:玩家不存在或者玩家没有队伍也可以调用，但会提示一个错误。   该接口是异步的，因为组队逻辑在CS服务器上。调用该接口，GS会向CS发送离队通知并返回。最终结果未知。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Level" value="lualib:Level($VAR1$)&#10;$END$" description="Level=&quot;int32  Level(string  strRole) 取得角色的等级.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:等级.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LockSwitch" value="lualib:LockSwitch($VAR1$)&#10;$END$" description="LockSwitch=&quot;int32  LockSwitch(string  strRole) 取得角色的安全锁开关状态.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:安全锁开关状态,0: 未解锁 1: 已解锁. 参考:LockSwitch,SetLockSwitch,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Log" value="lualib:Log($VAR1$)&#10;$END$" description="Log=&quot;void  Log(string  strRoleName,string  strItemKey,string  strItem,int32  iSrcValue,int32  iRefValue,string  strDescript,string  strTarget) 向日志服务器上传角色的物品操作行程日志.  参数:strRoleName 角色名.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LogDetail" value="lualib:LogDetail($VAR1$)&#10;$END$" description="LogDetail=&quot;void  LogDetail(string  strRoleName,string  strItemKey,string  strItem,int32  iSrcValue,int32  iRefValue,string  strDescript,string  strTarget,string  strDetail) 向日志服务器上传角色的物品操作行程日志.  参数:strRoleName 角色名.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,strDetail 具体细节, 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LogDetailWithId" value="lualib:LogDetailWithId($VAR1$)&#10;$END$" description="LogDetailWithId=&quot;void  LogDetailWithId(string  strRoleName,int  iAction,string  strItemKey,string  strItem,int32  iSrcValue,int32  iRefValue,string  strDescript,string  strTarget,string  strDetail) 向日志服务器上传角色的物品操作行程日志.  参数:strRoleName 角色名.,iAction 日志类型,请查询lua_logic_define.lua.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,strDetail 具体细节, 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LogWithId" value="lualib:LogWithId($VAR1$)&#10;$END$" description="LogWithId=&quot;void  LogWithId(string  strRoleName,int  iAction,string  strItemKey,string  strItem,int32  iSrcValue,int32  iRefValue,string  strDescript,string  strTarget) 向日志服务器上传角色的物品操作行程日志.  参数:strRoleName 角色名.,iAction 日志类型,请查询lua_logic_define.lua.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:LuckCurse" value="lualib:LuckCurse($VAR1$)&#10;$END$" description="LuckCurse=&quot;int32  LuckCurse(string  strRole) 取得角色的幸运诅咒.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:幸运诅咒. 备注:返回值大于0就是幸运，小于0就是诅咒。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MagAtkPoint" value="lualib:MagAtkPoint($VAR1$)&#10;$END$" description="MagAtkPoint=&quot;int32  MagAtkPoint(string  strRole) 取得角色的魔攻属性点.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:魔攻属性点.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MagDef" value="lualib:MagDef($VAR1$)&#10;$END$" description="MagDef=&quot;int32  MagDef(string  strRole,bool  bLimit) 取得角色的魔防.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:魔防.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MagDefPoint" value="lualib:MagDefPoint($VAR1$)&#10;$END$" description="MagDefPoint=&quot;int32  MagDefPoint(string  strRole) 取得角色的魔防属性点.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:魔防属性点.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Mail" value="lualib:Mail($VAR1$)&#10;$END$" description="Mail=&quot;bool  Mail(string  sender_name,string  receiver_name,string  text,int32  gold,int32  yuanbao,table  item_templates) 给某个玩家发送一封文本邮件.  参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,item_templates 附件物品,lua table格式描述,不超过5个.   item_templates 格式:   {   物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)   '强效金创药', 1, 1,   '强效魔法药', 1, 1,   '灵元珠', 10, 1,   '新手之剑', 1, 1,   '新手头盔', 1, 1,   }, 返回:true表示投递成功,false表示失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MailJsonItem" value="lualib:MailJsonItem($VAR1$)&#10;$END$" description="MailJsonItem=&quot;bool  MailJsonItem(string  sender_name,string  receiver_name,string  text,int32  gold,int32  yuanbao,string  json_item) 给某个玩家发送一封文本邮件.  参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,json_item 附件物品实体,json格式描述., 返回:true表示投递成功,false表示失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MailToPlayer" value="lualib:MailToPlayer($VAR1$)&#10;$END$" description="MailToPlayer=&quot;bool  MailToPlayer(string  sender_name,string  receiver_guid,string  text,int32  gold,int32  yuanbao,table  item_templates) 给某个玩家发送一封文本邮件.  参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_guid 收件人guid,即玩家的guid.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,item_templates 附件物品,lua table格式描述,不超过5个.   item_templates 格式:   {   物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)   '强效金创药', 1, 1,   '强效魔法药', 1, 1,   '灵元珠', 10, 1,   '新手之剑', 1, 1,   '新手头盔', 1, 1,   }, 返回:true表示投递成功,false表示失败. 备注:玩家必须在线  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenGold" value="lualib:Map_GenGold($VAR1$)&#10;$END$" description="Map_GenGold=&quot;string  Map_GenGold(string  strMap,uint16  wX,uint16  wY,int32  iGold,bool  bMustEmpty,uint32  dwFreeze,int  iDropType,string  strDropHost) 在地图上指定位置刷出金币.  参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,iGold 金币数量.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位毫秒.,iDropType 1 = 玩家扔, 2 = 玩家爆, 3 = 怪物爆, 4 = 脚本刷, 5 = 地图刷, 6 = 背包满爆地图上.,strDropHost 根据掉落类型有不同的意思, 1/2/4/6 = 可以直接拾取者, 3/5 = 被忽略的参数., 返回:物品的GUID,失败返回''. 备注:直接在地图上刷金币，掉落拾取规则请注意区别。 参考:ModifyItemGold,GetItemGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GenItemEx" value="lualib:Map_GenItemEx($VAR1$)&#10;$END$" description="Map_GenItemEx=&quot;string  Map_GenItemEx(string  strMap,uint16  wX,uint16  wY,string  strItemKey,uint16  wCount,bool  bMustEmpty,uint32  dwFreeze,string  strPlayer) 在地图上指定位置刷出物品.  参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,strItemKey 物品的KeyName.,wCount 物品数量,必须不大于最大堆叠数.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位毫秒.,strPlayer 可以直接拾取的玩家., 返回:物品的GUID,失败返回''. 备注:与Map_GenItem相比，可以设置允许直接拾取的玩家。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetCustomVarInt" value="lualib:Map_GetCustomVarInt($VAR1$)&#10;$END$" description="Map_GetCustomVarInt=&quot;int32  Map_GetCustomVarInt(string  strMap,string  strKey) [此函数过期, 禁用] 取得存储在地图实体上的整型数值变量.  参数:strMap 地图GUID.,strKey 变量名., 返回:变量值. 参考:GetInt,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetCustomVarStr" value="lualib:Map_GetCustomVarStr($VAR1$)&#10;$END$" description="Map_GetCustomVarStr=&quot;string  Map_GetCustomVarStr(string  strMap,string  strKey) [此函数过期, 禁用] 取得存储在地图实体上的字符型变量.  参数:strMap 地图GUID.,strKey 变量名., 返回:变量值. 参考:GetStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetDistance" value="lualib:Map_GetDistance($VAR1$)&#10;$END$" description="Map_GetDistance=&quot;uint16  Map_GetDistance(uint16  wSourX,uint16  wSourY,uint16  wDestX,uint16  wDestY) [此函数过期, 禁用] 取得地图上二点间的距离.  参数:wSourX 源坐标X点.,wSourY 源坐标Y点.,wDestX 目标坐标X点.,wDestY 目标坐标Y点., 返回:返回二点间距离.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetGridObjList" value="lualib:Map_GetGridObjList($VAR1$)&#10;$END$" description="Map_GetGridObjList=&quot;table  Map_GetGridObjList(string  strMap,uint16  wX,uint16  wY,uint16  wRange) 获取地图区域内的对象列表.  参数:strMap 地图的GUID.,wX X坐标.,wY Y坐标.,wRange 范围., 返回:区域内对象列表,返回lua table. 备注:返回的对象包括玩家、怪物、NPC、物品、通道道具（火墙），要注意判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetMapKeyName" value="lualib:Map_GetMapKeyName($VAR1$)&#10;$END$" description="Map_GetMapKeyName=&quot;string  Map_GetMapKeyName(string  strMap) [此函数过期, 禁用] 取得地图的KeyName.  参数:strMap 地图的GUID., 返回:地图的KeyName,出错返回''. 警告:该接口已过期,不再提供技术支持. 参考:KeyName,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetMapName" value="lualib:Map_GetMapName($VAR1$)&#10;$END$" description="Map_GetMapName=&quot;string  Map_GetMapName(string  strMap) [此函数过期, 禁用] 取得地图的Name.  参数:strMap 地图的GUID., 返回:地图的Name,出错返回''. 警告:该接口已过期,不再提供技术支持. 参考:Name,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetMapPlayers" value="lualib:Map_GetMapPlayers($VAR1$)&#10;$END$" description="Map_GetMapPlayers=&quot;table  Map_GetMapPlayers(string  strMap,bool  bIgnoreDied) 获取地图内的玩家列表.  参数:strMap 地图的GUID.,bIgnoreDied 是否忽略死亡角色., 返回:区域内玩家列表,返回lua table.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_RemoveMonster" value="lualib:Map_RemoveMonster($VAR1$)&#10;$END$" description="Map_RemoveMonster=&quot;bool  Map_RemoveMonster(string  strMap,string  strMonsterKey) 清理地图中的怪物.  参数:strMap 地图GUID.,strMonsterKey 怪物的KeyName., 返回:成功或失败. 备注:该接口会将指定地图中所有KeyName相同的Monster都移除掉。移除后的Monster不会重刷。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_RemoveNpc" value="lualib:Map_RemoveNpc($VAR1$)&#10;$END$" description="Map_RemoveNpc=&quot;bool  Map_RemoveNpc(string  strMap,string  strNpcKey) 清理地图中的NPC.  参数:strMap 地图GUID.,strNpcKey NPC的KeyName., 返回:成功或失败. 备注:该接口会将指定地图中所有KeyName相同的NPC都移除掉。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_SetCustomVarInt" value="lualib:Map_SetCustomVarInt($VAR1$)&#10;$END$" description="Map_SetCustomVarInt=&quot;bool  Map_SetCustomVarInt(string  strMap,string  strKey,uint32  iValue) [此函数过期, 禁用] 在地图实体上存储整型数值变量.  参数:strMap 地图GUID.,strKey 变量名.,iValue 变量值., 返回:成功或失败. 参考:SetInt,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_SetCustomVarStr" value="lualib:Map_SetCustomVarStr($VAR1$)&#10;$END$" description="Map_SetCustomVarStr=&quot;bool  Map_SetCustomVarStr(string  strMap,string  strKey,string  strValue) [此函数过期, 禁用] 在地图实体上存储字符型变量.  参数:strMap 地图GUID.,strKey 变量名.,strValue 变量值., 返回:成功或失败. 参考:SetStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_SetOffTimer" value="lualib:Map_SetOffTimer($VAR1$)&#10;$END$" description="Map_SetOffTimer=&quot;bool  Map_SetOffTimer(string  map_guid,uint32  timer_id) [此函数过期, 禁用] 取消地图定时器.  参数:map_guid ,timer_id , 返回: 参考:DisableTimer,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_SetOnTimer" value="lualib:Map_SetOnTimer($VAR1$)&#10;$END$" description="Map_SetOnTimer=&quot;bool  Map_SetOnTimer(string  strMap,uint32  dwTimerID,uint32  dwTimes,uint32  dwCount) [此函数过期, 禁用] 给地图添加定时器.  参数:strMap ,dwTimerID ,dwTimes ,dwCount , 返回: 参考:AddTimer,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MapCanRide" value="lualib:MapCanRide($VAR1$)&#10;$END$" description="MapCanRide=&quot;bool  MapCanRide(string  strMapKey) 判断地图是否可以上坐骑.  参数:strMapKey 地图的KeyName., 返回:是或否. 备注:地图能否上坐骑的属性请参考策划map表。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MapKeyName" value="lualib:MapKeyName($VAR1$)&#10;$END$" description="MapKeyName=&quot;string  MapKeyName(string  strRole) [此函数过期, 禁用] 根据角色GUID取得角色当前地图的KeyName.  参数:strRole 角色的GUID,角色可以是玩家、怪物、NPC., 返回:角色当前地图的KeyName,如果角色不存在返回''. 备注:已过期的接口,不再提供技术支持. 参考:KeyName,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MD5" value="lualib:MD5($VAR1$)&#10;$END$" description="MD5=&quot;string  MD5(string  strCode) 将字符串进行MD5加密.  参数:strCode 源字符串., 返回:32字节MD码.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Medal" value="lualib:Medal($VAR1$)&#10;$END$" description="Medal=&quot;string  Medal(string  strPlayer) 取得玩家当前装备的勋章.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意判断返回值。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Meritor" value="lualib:Meritor($VAR1$)&#10;$END$" description="Meritor=&quot;int32  Meritor(string  strRole) 取得角色的功勋.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:功勋.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ModifyItemGold" value="lualib:ModifyItemGold($VAR1$)&#10;$END$" description="ModifyItemGold=&quot;bool  ModifyItemGold(string  strItem,int32  iGold) 修改物品的金币 参数:strItem 物品GUID.,iGold 修改后的金币数., 返回:成功或失败. 备注:生成金币物品使用Map_GenGold。 参考:Map_GenGold,GetItemGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_AddBuff" value="lualib:Monster_AddBuff($VAR1$)&#10;$END$" description="Monster_AddBuff=&quot;bool  Monster_AddBuff(string  strMonster,string  strBuffKey,uint32  dwTimes) [此函数过期, 禁用] 给怪物添加BUFF.  参数:strMonster 怪物的GUID.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒., 返回:成功或失败. 参考:AddBuff,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_DataRow" value="lualib:Monster_DataRow($VAR1$)&#10;$END$" description="Monster_DataRow=&quot;table  Monster_DataRow(string  strMonsterKey) 根据怪物KeyName取得该怪物的配置表结构.  参数:strMonsterKey 怪物的KeyName., 返回:物品的配置表结构. 备注:返回lua table，table的K同monster表的字段名相样。   local tMonster = lualib:Monster_DataRow(strMonsterKey);   print('KeyName='..tMonster.KeyName);  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_DelBuff" value="lualib:Monster_DelBuff($VAR1$)&#10;$END$" description="Monster_DelBuff=&quot;bool  Monster_DelBuff(string  strMonster,string  strBuffKey) [此函数过期, 禁用] 删除怪物BUFF.  参数:strMonster 怪物的GUID.,strBuffKey BUFF的KeyName., 返回:成功或失败. 参考:DelBuff,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetCurTarget" value="lualib:Monster_GetCurTarget($VAR1$)&#10;$END$" description="Monster_GetCurTarget=&quot;string  Monster_GetCurTarget(string  strMonster) 取得怪物的攻击目标.  参数:strMonster 怪物的GUID., 返回:攻击目标的GUID,出错返回''. 备注:该接口与Monster_GetAttackTarget功能相同。 参考:Monster_GetAttackTarget,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetCustomVarInt" value="lualib:Monster_GetCustomVarInt($VAR1$)&#10;$END$" description="Monster_GetCustomVarInt=&quot;int32  Monster_GetCustomVarInt(string  strMonster,string  strKey) [此函数过期, 禁用] 取得对象实体上存储的整型数值变量.  参数:strMonster 怪物的GUID.,strKey 变量名., 返回:变量的值,如果变量不存在返回0. 警告:该接口已过期,不再提供技术支持. 参考:GetInt,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetCustomVarStr" value="lualib:Monster_GetCustomVarStr($VAR1$)&#10;$END$" description="Monster_GetCustomVarStr=&quot;string  Monster_GetCustomVarStr(string  strMonster,string  strKey) [此函数过期, 禁用] 取得对象实体上存储的字符型变量.  参数:strMonster 怪物的GUID.,strKey 变量名., 返回:变量的值,如果变量不存在返回''. 警告:该接口已过期,不再提供技术支持.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetDropOwner" value="lualib:Monster_GetDropOwner($VAR1$)&#10;$END$" description="Monster_GetDropOwner=&quot;string  Monster_GetDropOwner(string  strMonster) 获得怪物掉落归属玩家.  参数:strMonster 怪物GUID., 返回:掉落归属的玩家GUID. 备注:如果怪物无归属返回''。       怪物归属玩家：对怪物拥有拾取权限的玩家。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetHateList" value="lualib:Monster_GetHateList($VAR1$)&#10;$END$" description="Monster_GetHateList=&quot;table  Monster_GetHateList(string  strMonster) 取得怪物的仇恨列表.  参数:strMonster 怪物的GUID., 返回:怪物的仇恨列表,返回lua table. 如 tHateList = {{'GUID' = guid, 'Hate' = hate, 'Tick' = tick, 'Elapse' = elapse}, ....} 备注:怪物仇恨列表的格式为：   tHate['GUID'] = 仇恨的角色。   tHate['Hate'] = 仇恨值。   tHate['Tick'] = 添加进仇恨列表的时间戳。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetIntProp" value="lualib:Monster_GetIntProp($VAR1$)&#10;$END$" description="Monster_GetIntProp=&quot;double  Monster_GetIntProp(string  strMonster,int32  iAttrType) [此函数过期, 禁用] 取得怪物的数值型属性值.  参数:strMonster 怪物的GUID.,iAttrType 属性类型,过期接口不再详述., 返回:属性值. 警告:早期接口,不再提供技术支持.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetKeyName" value="lualib:Monster_GetKeyName($VAR1$)&#10;$END$" description="Monster_GetKeyName=&quot;string  Monster_GetKeyName(string  strMonster) [此函数过期, 禁用] 根据怪物GUID取得怪物KeyName.  参数:strMonster 怪物的GUID., 返回:怪物的KeyName,如果对象不存在返回''. 参考:KeyName,Name,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetMap" value="lualib:Monster_GetMap($VAR1$)&#10;$END$" description="Monster_GetMap=&quot;string  Monster_GetMap(string  strMonster) [此函数过期, 禁用] 取得怪物当前地图的GUID.  参数:strMonster 怪物的GUID., 返回:怪物当前地图的GUID,出错返回''. 参考:MapGuid,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetPosX" value="lualib:Monster_GetPosX($VAR1$)&#10;$END$" description="Monster_GetPosX=&quot;int32  Monster_GetPosX(string  strMonster) [此函数过期, 禁用] 根据怪物的GUID取得X坐标.  参数:strMonster 怪物的GUID., 返回:怪物的X坐标,如果怪物不存在返回-1. 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_GetPosY" value="lualib:Monster_GetPosY($VAR1$)&#10;$END$" description="Monster_GetPosY=&quot;int32  Monster_GetPosY(string  strMonster) [此函数过期, 禁用] 根据怪物的GUID取得Y坐标.  参数:strMonster 怪物的GUID., 返回:怪物的Y坐标,如果怪物不存在返回-1. 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_IsHasBuff" value="lualib:Monster_IsHasBuff($VAR1$)&#10;$END$" description="Monster_IsHasBuff=&quot;bool  Monster_IsHasBuff(string  strMonster,uint16  wBuffID) [此函数过期, 禁用] 判断怪物是否拥有某个BUFF.  参数:strMonster 怪物的GUID.,wBuffID BUFF的ID., 返回:是或否. 参考:HasBuff,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_JumpXY" value="lualib:Monster_JumpXY($VAR1$)&#10;$END$" description="Monster_JumpXY=&quot;void  Monster_JumpXY(string  strMap,string  strMonster,uint16  wX,uint16  wY,uint16  wRange) 让怪物跳转到某地图.  参数:strMap 地图的GUID.,strMonster 怪物的GUID.,wX 跳转点的X坐标.,wY 跳转点的Y坐标.,wRange 跳转点的范围., 返回:无返回值. 备注:注意：让怪物跳图之前先判断怪物是否死亡。多GS的情况下，如果跨GS跳图则直接失败。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_Kill" value="lualib:Monster_Kill($VAR1$)&#10;$END$" description="Monster_Kill=&quot;bool  Monster_Kill(string  strMonster) [此函数过期, 禁用] 杀死怪物.  参数:strMonster 怪物的GUID., 返回:成功或失败. 参考:Kill,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_SetCustomVarInt" value="lualib:Monster_SetCustomVarInt($VAR1$)&#10;$END$" description="Monster_SetCustomVarInt=&quot;bool  Monster_SetCustomVarInt(string  strMonster,string  strKey,int32  iValue) [此函数过期, 禁用] 在对象实体上存储整型数值变量.  参数:strMonster 怪物的GUID.,strKey 变量名.,iValue 变量值., 返回:成功或失败. 参考:SetInt,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_SetCustomVarStr" value="lualib:Monster_SetCustomVarStr($VAR1$)&#10;$END$" description="Monster_SetCustomVarStr=&quot;bool  Monster_SetCustomVarStr(string  strMonster,string  strKey,string  strValue) [此函数过期, 禁用] 在对象实体上存储字符型变量.  参数:strMonster 怪物的GUID.,strKey 变量名.,strValue 变量值., 返回:成功或失败. 参考:SetStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_SetPanelSize" value="lualib:Monster_SetPanelSize($VAR1$)&#10;$END$" description="Monster_SetPanelSize=&quot;bool  Monster_SetPanelSize(string  strMonster,uint16  wWidth,uint16  wHeight) [此函数过期, 禁用] 设置角色NPC面板的size.  参数:strMonster 怪物的GUID.,wWidth 面板的宽度.,wHeight 面板的高度., 返回:成功或失败. 参考:SetPanelSize,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_SpellTargetEx" value="lualib:Monster_SpellTargetEx($VAR1$)&#10;$END$" description="Monster_SpellTargetEx=&quot;bool  Monster_SpellTargetEx(string  strMonster,string  strSkillKey,string  strTarget) 让怪物施放技能.  参数:strMonster 怪物的GUID.,strSkillKey 技能的KeyName.,strTarget 技能目标,可以是怪物、玩家、英雄., 返回:成功或失败. 备注:如果技能施放失败，请先检查技能配置是否正确。比如：技能的冷确过长，而脚本施放技能过快等等。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_Type" value="lualib:Monster_Type($VAR1$)&#10;$END$" description="Monster_Type=&quot;int32  Monster_Type(string  strMonsterKey) 取得怪物的类型.  参数:strMonsterKey 怪物的KeyName., 返回:怪物的类型,1 = 普通怪 2 = 精英怪 3 = 头目 4 = BOSS 5 = 守卫 6 = 守城怪 7 = 镖车. 备注:注意：怪物的类型是根据策划monster表来决定的。所以不排除B用户自行修改后，返回值跟文档对应不上的情况。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Mount" value="lualib:Mount($VAR1$)&#10;$END$" description="Mount=&quot;string  Mount(string  strPlayer) 取得玩家当前装备的坐骑.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意返回值的判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MpPoint" value="lualib:MpPoint($VAR1$)&#10;$END$" description="MpPoint=&quot;int32  MpPoint(string  strRole) 取得角色的MP属性点.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:MP属性点.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Necklace" value="lualib:Necklace($VAR1$)&#10;$END$" description="Necklace=&quot;string  Necklace(string  strPlayer) 取得玩家当前装备的项链.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意返回值的判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Now" value="lualib:Now($VAR1$)&#10;$END$" description="Now=&quot;string  Now(void  ) 取得当前时间的年-月-日 时:分:秒.  参数: , 返回:当前时间的年-月-日 时:分:秒. 备注:效果相当于lualib:Time2Str('%Y-%m-%d %H:%M:%S, 0);  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Npc_GetCustomVar" value="lualib:Npc_GetCustomVar($VAR1$)&#10;$END$" description="Npc_GetCustomVar=&quot;string  Npc_GetCustomVar(string  strNpc,string  strKey) [此函数过期, 禁用] 取得NPC实体上存储的字符型变量.  参数:strNpc NPC的GUID.,strKey 变量名., 返回:变量的值,如果变量不存在返回''. 警告:该接口已过期,不再提供技术支持. 参考:GetStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Npc_GetKeyName" value="lualib:Npc_GetKeyName($VAR1$)&#10;$END$" description="Npc_GetKeyName=&quot;string  Npc_GetKeyName(string  strNpc) [此函数过期, 禁用] 取得NPC的KeyName.  参数:strNpc NPC的GUID., 返回:NPC的KeyName. 参考:KeyName,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Npc_GetPosX" value="lualib:Npc_GetPosX($VAR1$)&#10;$END$" description="Npc_GetPosX=&quot;int32  Npc_GetPosX(string  strNpc) [此函数过期, 禁用] 根据NPC的GUID取得X坐标.  参数:strNpc NPC的GUID., 返回:NPC的X坐标,如果NPC不存在返回-1. 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Npc_GetPosY" value="lualib:Npc_GetPosY($VAR1$)&#10;$END$" description="Npc_GetPosY=&quot;int32  Npc_GetPosY(string  strNpc) [此函数过期, 禁用] 根据NPC的GUID取得Y坐标.  参数:strNpc NPC的GUID., 返回:NPC的Y坐标,如果NPC不存在返回-1. 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Npc_SetCustomVar" value="lualib:Npc_SetCustomVar($VAR1$)&#10;$END$" description="Npc_SetCustomVar=&quot;bool  Npc_SetCustomVar(string  strNpc,string  strKey,string  strValue) [此函数过期, 禁用] 在NPC实体上存储字符型变量.  参数:strNpc NPC的GUID.,strKey 变量名.,strValue 变量值., 返回:成功或失败. 参考:SetStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Npc_SetPanelSize" value="lualib:Npc_SetPanelSize($VAR1$)&#10;$END$" description="Npc_SetPanelSize=&quot;bool  Npc_SetPanelSize(string  strNpc,uint16  wWidth,uint16  wHeight) [此函数过期, 禁用] 设置NPC面板的size.  参数:strNpc NPC的GUID.,wWidth 面板的宽度.,wHeight 面板的高度., 返回:成功或失败. 参考:SetPanelSize,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:OnGloryTrigger" value="lualib:OnGloryTrigger($VAR1$)&#10;$END$" description="OnGloryTrigger=&quot;void  OnGloryTrigger(string  player_guid,int32  action,string  item_guid,int32  ref_value,string  descript,string  target_name) 产生一个成就的触发事件.  参数:player_guid 玩家的guid.,action 触发类型.,item_guid 物品的guid（相关物品的guid，如果有的话）.,ref_value 参考值（相关的参考值，如果有的话）.,descript 描述.,target_name 相关目标名称(如果有的话)., 返回:无返回值. 备注:触发类型 即成就表中的触发条件1  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:PhyAtkPoint" value="lualib:PhyAtkPoint($VAR1$)&#10;$END$" description="PhyAtkPoint=&quot;int32  PhyAtkPoint(string  strRole) 取得角色的物攻属性点.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:物攻属性点.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:PhyDef" value="lualib:PhyDef($VAR1$)&#10;$END$" description="PhyDef=&quot;int32  PhyDef(string  strRole,bool  bLimit) 取得角色的物防.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:物防.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:PhyDefPoint" value="lualib:PhyDefPoint($VAR1$)&#10;$END$" description="PhyDefPoint=&quot;int32  PhyDefPoint(string  strRole) 取得角色的物防属性点.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:物防属性点.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Pk" value="lualib:Pk($VAR1$)&#10;$END$" description="Pk=&quot;int32  Pk(string  strRole) 取得角色的PK值.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:PK值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_AddBuff" value="lualib:Player_AddBuff($VAR1$)&#10;$END$" description="Player_AddBuff=&quot;bool  Player_AddBuff(string  strPlayer,string  strBuffKey,uint32  dwTimes) [此函数过期, 禁用] 给角色添加BUFF.  参数:strPlayer 玩家的GUID.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒., 返回:成功或失败. 参考:AddBuff,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_AddSkill" value="lualib:Player_AddSkill($VAR1$)&#10;$END$" description="Player_AddSkill=&quot;bool  Player_AddSkill(string  strPlayer,string  strSkillKey) [此函数过期, 禁用] 给角色添加技能.  参数:strPlayer 玩家的GUID.,strSkillKey 技能的KeyName., 返回:成功或失败. 参考:AddSkill,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_ChangeGender" value="lualib:Player_ChangeGender($VAR1$)&#10;$END$" description="Player_ChangeGender=&quot;bool  Player_ChangeGender(string  strPlayer,uint32  dwGender) [此函数过期, 禁用] 设置角色性别.  参数:strPlayer 玩家的GUID.,dwGender 性别., 返回:无. 警告:早期接口,不再提供技术支持. 参考:SetGender,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_ChangeJob" value="lualib:Player_ChangeJob($VAR1$)&#10;$END$" description="Player_ChangeJob=&quot;bool  Player_ChangeJob(string  strPlayer,uint32  dwJob) [此函数过期, 禁用] 设置角色职业.  参数:strPlayer 玩家的GUID.,dwJob 职业., 返回:无. 警告:早期接口,不再提供技术支持. 参考:SetJob,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_ClearBag" value="lualib:Player_ClearBag($VAR1$)&#10;$END$" description="Player_ClearBag=&quot;bool  Player_ClearBag(string  strPlayer,string  strDesc,string  strTarget) [此函数过期, 禁用] 清空玩家包裹.  参数:strPlayer 玩家的GUID.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 参考:ClearBag,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_DelBuff" value="lualib:Player_DelBuff($VAR1$)&#10;$END$" description="Player_DelBuff=&quot;bool  Player_DelBuff(string  strPlayer,string  strBuffKey) [此函数过期, 禁用] 删除角色BUFF.  参数:strPlayer 玩家的GUID.,strBuffKey BUFF的KeyName., 返回:成功或失败. 参考:DelBuff,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_DestroyItem" value="lualib:Player_DestroyItem($VAR1$)&#10;$END$" description="Player_DestroyItem=&quot;bool  Player_DestroyItem(string  strPlayer,string  strItemKey,int32  iCount,string  strDesc,string  strTarget) [此函数过期, 禁用] 删除玩家物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 警告:无. 参考:DelItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_DestroyItemBind" value="lualib:Player_DestroyItemBind($VAR1$)&#10;$END$" description="Player_DestroyItemBind=&quot;bool  Player_DestroyItemBind(string  strPlayer,string  strItemKey,int32  iCount,string  strDesc,string  strTarget) [此函数过期, 禁用] 删除玩家物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 参考:DelItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_DestroyItemUnbind" value="lualib:Player_DestroyItemUnbind($VAR1$)&#10;$END$" description="Player_DestroyItemUnbind=&quot;bool  Player_DestroyItemUnbind(string  strPlayer,string  strItemKey,int32  iCount,string  strDesc,string  strTarget) [此函数过期, 禁用] 删除玩家物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 参考:DelItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_DropItem" value="lualib:Player_DropItem($VAR1$)&#10;$END$" description="Player_DropItem=&quot;bool  Player_DropItem(string  strPlayer,string  strItemKey) [此函数过期, 禁用] 玩家丢弃物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName., 返回:成功或失败. 参考:DropItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_DropItemEx" value="lualib:Player_DropItemEx($VAR1$)&#10;$END$" description="Player_DropItemEx=&quot;bool  Player_DropItemEx(string  strPlayer,string  strItem) 强制玩家丢弃物品.  参数:strPlayer 玩家的GUID.,strItem 物品的GUID., 返回:成功或失败. 参考:DropItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetBagFree" value="lualib:Player_GetBagFree($VAR1$)&#10;$END$" description="Player_GetBagFree=&quot;int32  Player_GetBagFree(string  strPlayer) [此函数过期, 禁用] 取得玩家包裹空格子数量.  参数:strPlayer 玩家的GUID., 返回:包裹空格子数,出错返回-1. 参考:GetBagFree,GetBagFreeEx,BagFree,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetBagItemList" value="lualib:Player_GetBagItemList($VAR1$)&#10;$END$" description="Player_GetBagItemList=&quot;table  Player_GetBagItemList(string  strPlayer) [此函数过期, 禁用] 取得玩家包裹所有物品的GUID列表.  参数:strPlayer 玩家的GUID., 返回:包裹所有物品的GUID列表,返回lua table. 参考:BagItemList,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetBagSize" value="lualib:Player_GetBagSize($VAR1$)&#10;$END$" description="Player_GetBagSize=&quot;int32  Player_GetBagSize(string  strPlayer) [此函数过期, 禁用] 取得玩家包裹大小.  参数:strPlayer 玩家的GUID., 返回:包裹大小,出错返回-1. 参考:GetBagSize,GetBagSizeEx,BagSize,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetCustomVarInt" value="lualib:Player_GetCustomVarInt($VAR1$)&#10;$END$" description="Player_GetCustomVarInt=&quot;int32  Player_GetCustomVarInt(string  strPlayer,string  strKey) [此函数过期, 禁用] 取得玩家实体上存储的整型数值变量.  参数:strPlayer 玩家的GUID.,strKey 变量名., 返回:变量的值,如果变量不存在返回0. 警告:该接口已过期,不再提供技术支持. 参考:GetInt,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetCustomVarStr" value="lualib:Player_GetCustomVarStr($VAR1$)&#10;$END$" description="Player_GetCustomVarStr=&quot;string  Player_GetCustomVarStr(string  strPlayer,string  strKey) [此函数过期, 禁用] 取得玩家实体上存储的字符型变量.  参数:strPlayer 玩家的GUID.,strKey 变量名., 返回:变量的值,如果变量不存在返回''. 警告:该接口已过期,不再提供技术支持.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetDir" value="lualib:Player_GetDir($VAR1$)&#10;$END$" description="Player_GetDir=&quot;int16  Player_GetDir(string  strPlayer) [此函数过期, 禁用] 取得玩家的方向.  参数:strPlayer 角色的GUID., 返回:方向值,出错返回-1. 警告:早期接口,不再提供技术支持. 参考:Dir,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetDistance" value="lualib:Player_GetDistance($VAR1$)&#10;$END$" description="Player_GetDistance=&quot;uint16  Player_GetDistance(string  strPlayer1,string  strPlayer2) [此函数过期, 禁用] 计算玩家间的距离 计算玩家间的距离.  参数:strPlayer1 玩家GUID.,strPlayer2 玩家GUID., 返回:成功返回距离,失败返回65535. 参考:Distance,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetEquipGuid" value="lualib:Player_GetEquipGuid($VAR1$)&#10;$END$" description="Player_GetEquipGuid=&quot;string  Player_GetEquipGuid(string  strPlayer,uint16  wSite) [此函数过期, 禁用] 取得玩家装备栏装备着的物品GUID.  参数:strPlayer 玩家的GUID.,wSite 装备栏位置,过期接口不再详述., 返回:物品GUID. 警告:早期接口,不再提供技术支持. 参考:eRoleSite,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetEquipName" value="lualib:Player_GetEquipName($VAR1$)&#10;$END$" description="Player_GetEquipName=&quot;string  Player_GetEquipName(string  strPlayer,uint16  wSite) [此函数过期, 禁用] 取得玩家装备栏装备着的物品Name.  参数:strPlayer 玩家的GUID.,wSite 装备栏位置,过期接口不再详述., 返回:物品Name. 警告:早期接口,不再提供技术支持. 参考:eRoleSite,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetGuid" value="lualib:Player_GetGuid($VAR1$)&#10;$END$" description="Player_GetGuid=&quot;string  Player_GetGuid(string  strPlayerName) [此函数过期, 禁用] 根据玩家的Name找到该玩家.  参数:strPlayerName 玩家的Name., 返回:玩家的GUID,如果玩家不存在返回''. 警告:玩家如果不在线就找不到. 参考:Name2Guid,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetGuidProp" value="lualib:Player_GetGuidProp($VAR1$)&#10;$END$" description="Player_GetGuidProp=&quot;string  Player_GetGuidProp(string  strPlayer,uint16  wAttrType) [此函数过期, 禁用] 取得玩家的GUID型属性值.  参数:strPlayer 玩家的GUID.,wAttrType 属性类型,过期接口不再详述., 返回:属性值. 警告:早期接口,不再提供技术支持.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetIntProp" value="lualib:Player_GetIntProp($VAR1$)&#10;$END$" description="Player_GetIntProp=&quot;double  Player_GetIntProp(string  strPlayer,int32  iAttrType) [此函数过期, 禁用] 取得玩家的数值型属性值.  参数:strPlayer 玩家的GUID.,iAttrType 属性类型,过期接口不再详述., 返回:属性值. 警告:早期接口,不再提供技术支持.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetItemCount" value="lualib:Player_GetItemCount($VAR1$)&#10;$END$" description="Player_GetItemCount=&quot;int32  Player_GetItemCount(string  strPlayer,string  strItemKey) [此函数过期, 禁用] 取得玩家的物品数量.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName., 返回:符合条件的物品数量,出错返回-1. 警告:该接口已过期,不再提供技术支持. 参考:ItemCountEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetItemCountBind" value="lualib:Player_GetItemCountBind($VAR1$)&#10;$END$" description="Player_GetItemCountBind=&quot;int32  Player_GetItemCountBind(string  strPlayer,string  strItemKey) [此函数过期, 禁用] 取得玩家的物品数量.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName., 返回:符合条件的物品数量,出错返回-1. 警告:该接口已过期,不再提供技术支持. 参考:ItemCountEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetItemCountUnbind" value="lualib:Player_GetItemCountUnbind($VAR1$)&#10;$END$" description="Player_GetItemCountUnbind=&quot;int32  Player_GetItemCountUnbind(string  strPlayer,string  strItemKey) [此函数过期, 禁用] 取得玩家的物品数量.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName., 返回:符合条件的物品数量,出错返回-1. 警告:该接口已过期,不再提供技术支持. 参考:ItemCountEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetPosX" value="lualib:Player_GetPosX($VAR1$)&#10;$END$" description="Player_GetPosX=&quot;int16  Player_GetPosX(string  strPlayer) [此函数过期, 禁用] 取得玩家的X坐标值.  参数:strPlayer 角色的GUID., 返回:X坐标值,出错返回-1. 警告:早期接口,不再提供技术支持. 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetPosY" value="lualib:Player_GetPosY($VAR1$)&#10;$END$" description="Player_GetPosY=&quot;int16  Player_GetPosY(string  strPlayer) [此函数过期, 禁用] 取得玩家的Y坐标值.  参数:strPlayer 角色的GUID., 返回:Y坐标值,出错返回-1. 警告:早期接口,不再提供技术支持. 参考:X,Y,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetStrProp" value="lualib:Player_GetStrProp($VAR1$)&#10;$END$" description="Player_GetStrProp=&quot;string  Player_GetStrProp(string  strPlayer,uint16  wAttrType) [此函数过期, 禁用] 取得玩家的字符型属性值.  参数:strPlayer 玩家的GUID.,wAttrType 属性类型,过期接口不再详述., 返回:属性值. 警告:早期接口,不再提供技术支持.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetTimeProp" value="lualib:Player_GetTimeProp($VAR1$)&#10;$END$" description="Player_GetTimeProp=&quot;uint32  Player_GetTimeProp(string  strPlayer,uint16  wAttrType) [此函数过期, 禁用] 取得玩家的时间型属性值.  参数:strPlayer 角色的GUID.,wAttrType 属性类型,过期接口不再详述., 返回:时间属性值. 警告:早期接口,不再提供技术支持.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetWarehouseFree" value="lualib:Player_GetWarehouseFree($VAR1$)&#10;$END$" description="Player_GetWarehouseFree=&quot;int32  Player_GetWarehouseFree(string  strPlayer) [此函数过期, 禁用] 取得玩家包裹空格子数量.  参数:strPlayer 玩家的GUID., 返回:包裹空格子数,出错返回-1. 参考:GetBagFree,GetBagFreeEx,BagFree,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetWarehouseItemCount" value="lualib:Player_GetWarehouseItemCount($VAR1$)&#10;$END$" description="Player_GetWarehouseItemCount=&quot;int32  Player_GetWarehouseItemCount(string  strPlayer,string  strItemKey) [此函数过期, 禁用] 取得玩家的物品数量.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName., 返回:符合条件的物品数量,出错返回-1. 警告:该接口已过期,不再提供技术支持. 参考:ItemCountEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetWarehouseItemCountBind" value="lualib:Player_GetWarehouseItemCountBind($VAR1$)&#10;$END$" description="Player_GetWarehouseItemCountBind=&quot;int32  Player_GetWarehouseItemCountBind(string  strPlayer,string  strItemKey) [此函数过期, 禁用] 取得玩家的物品数量.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName., 返回:符合条件的物品数量,出错返回-1. 警告:该接口已过期,不再提供技术支持. 参考:ItemCountEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetWarehouseItemCountUnbind" value="lualib:Player_GetWarehouseItemCountUnbind($VAR1$)&#10;$END$" description="Player_GetWarehouseItemCountUnbind=&quot;int32  Player_GetWarehouseItemCountUnbind(string  strPlayer,string  strItemKey) [此函数过期, 禁用] 取得玩家的物品数量.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName., 返回:符合条件的物品数量,出错返回-1. 警告:该接口已过期,不再提供技术支持. 参考:ItemCountEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetWarehouseSize" value="lualib:Player_GetWarehouseSize($VAR1$)&#10;$END$" description="Player_GetWarehouseSize=&quot;int32  Player_GetWarehouseSize(string  strPlayer) [此函数过期, 禁用] 取得玩家包裹大小.  参数:strPlayer 玩家的GUID., 返回:包裹大小,出错返回-1. 参考:GetBagSize,GetBagSizeEx,BagSize,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GiveItemBind" value="lualib:Player_GiveItemBind($VAR1$)&#10;$END$" description="Player_GiveItemBind=&quot;bool  Player_GiveItemBind(string  strPlayer,string  strItemKey,uint16  wCount,string  strDesc,string  strTarget) [此函数过期, 禁用] 给予玩家绑定物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 参考:GiveBindItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GiveItemUnbind" value="lualib:Player_GiveItemUnbind($VAR1$)&#10;$END$" description="Player_GiveItemUnbind=&quot;bool  Player_GiveItemUnbind(string  strPlayer,string  strItemKey,uint16  wCount,string  strDesc,string  strTarget) [此函数过期, 禁用] 给予玩家非绑定物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 参考:GiveItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GiveSingleItem" value="lualib:Player_GiveSingleItem($VAR1$)&#10;$END$" description="Player_GiveSingleItem=&quot;string  Player_GiveSingleItem(string  strPlayer,string  strItemKey,uint8  bBind,string  strDesc,string  strTarget) [此函数过期, 禁用] 给予玩家单个物品.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,bBind 绑定类型.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:新物品的GUID,出错返回''. 参考:AddSingleItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GoHome" value="lualib:Player_GoHome($VAR1$)&#10;$END$" description="Player_GoHome=&quot;bool  Player_GoHome(string  strPlayer) 让玩家回城.  参数:strPlayer 玩家的GUID., 返回:成功或失败. 备注:注意：因为接口是异步的，所以接口返回时玩家还没有跳地图。 警告:该接口是异步的,接口返回时玩家还没有切换地图. 参考:AddBuff,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsCanAttack" value="lualib:Player_IsCanAttack($VAR1$)&#10;$END$" description="Player_IsCanAttack=&quot;bool  Player_IsCanAttack(string  strPlayer) 判断玩家是否能使用物理攻击.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsCanMove" value="lualib:Player_IsCanMove($VAR1$)&#10;$END$" description="Player_IsCanMove=&quot;bool  Player_IsCanMove(string  strPlayer) 判断玩家是否可以移动.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsCanNpcTalk" value="lualib:Player_IsCanNpcTalk($VAR1$)&#10;$END$" description="Player_IsCanNpcTalk=&quot;bool  Player_IsCanNpcTalk(string  strPlayer) 判断玩家是否能与NPC交互.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsCanSpell" value="lualib:Player_IsCanSpell($VAR1$)&#10;$END$" description="Player_IsCanSpell=&quot;bool  Player_IsCanSpell(string  strPlayer) 判断玩家是否能使用魔法攻击.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsCanTalk" value="lualib:Player_IsCanTalk($VAR1$)&#10;$END$" description="Player_IsCanTalk=&quot;bool  Player_IsCanTalk(string  strPlayer) 判断玩家是否能说话.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsCanTurn" value="lualib:Player_IsCanTurn($VAR1$)&#10;$END$" description="Player_IsCanTurn=&quot;bool  Player_IsCanTurn(string  strPlayer) 判断玩家是否能转向.  参数:strPlayer 玩家的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsCanUseItem" value="lualib:Player_IsCanUseItem($VAR1$)&#10;$END$" description="Player_IsCanUseItem=&quot;bool  Player_IsCanUseItem(string  strPlayer) 判断玩家是否能使用物品.  参数:strPlayer 玩家的GUID., 返回:是或否. 备注:注意，如果找不到该玩家也返回false。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsDie" value="lualib:Player_IsDie($VAR1$)&#10;$END$" description="Player_IsDie=&quot;bool  Player_IsDie(string  strPlayer) 判断玩家是否死亡.  参数:strPlayer 玩家的GUID., 返回:是或否. 备注:注意，如果找不到该玩家也返回false。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsHasBuff" value="lualib:Player_IsHasBuff($VAR1$)&#10;$END$" description="Player_IsHasBuff=&quot;bool  Player_IsHasBuff(string  strPlayer,string  strBuffKey) [此函数过期, 禁用] 判断玩家是否拥有某个BUFF.  参数:strPlayer 玩家的GUID.,strBuffKey BUFF的KeyName., 返回:是或否. 参考:HasBuff,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsHasSkill" value="lualib:Player_IsHasSkill($VAR1$)&#10;$END$" description="Player_IsHasSkill=&quot;bool  Player_IsHasSkill(string  strPlayer,string  strSkillKey) [此函数过期, 禁用] 判断玩家是否拥有某个技能.  参数:strPlayer 玩家的GUID.,strSkillKey 技能的KeyName., 返回:是或否. 参考:HasSkill,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsInGS" value="lualib:Player_IsInGS($VAR1$)&#10;$END$" description="Player_IsInGS=&quot;bool  Player_IsInGS(string  strPlayer) 判断玩家是否在本GS上.  参数:strPlayer 玩家的GUID., 返回:是或否. 备注:注意，仅仅是否在当前GS上。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_IsOnline" value="lualib:Player_IsOnline($VAR1$)&#10;$END$" description="Player_IsOnline=&quot;bool  Player_IsOnline(string  strPlayer) 判断玩家是否在线上.  参数:strPlayer 玩家的GUID., 返回:是或否. 备注:在多GS情况下，该接口可以跨GS调用。   注意离线挂机的玩家也属于在线，可用IsOffline区别  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_ItemRequest" value="lualib:Player_ItemRequest($VAR1$)&#10;$END$" description="Player_ItemRequest=&quot;bool  Player_ItemRequest(string  strPlayer,table  tName,table  tCount,table  tBind,table  tOpr,string  strDesc,string  strTarget) 批量操作(添加/删除)玩家物品.  参数:strPlayer 玩家的GUID.,tName 物品的KeyName表. 如:{'吼天兽(未开光)', '开光印', '吼天兽*绝'},tCount 与KeyName对应的数量表. 如:{1, 1, 1},tBind 与KeyName对应的绑定类型表.绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.   如:{2, 2, 1},tOpr 与KeyName对应的操作表.操作类型, 0 = 添加 1 = 删除.   如:{1, 1, 0},strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:该接口是为了保证物品添加删除一系列动作的原子性而增加的。   当出现如下需求时，可以使用该接口保证物品操作的安全性：   1.需要先删除玩家一批道具。   2.然后再给玩家一批道具。   3.如果删除某个道具失败，可以将玩家包裹回退到最初状态。   4.如果添加某个道具失败，可以将玩家包裹回退到最初状态。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_Kill" value="lualib:Player_Kill($VAR1$)&#10;$END$" description="Player_Kill=&quot;bool  Player_Kill(string  strPlayer,bool  bDropItem,bool  bShowKiller) [此函数过期, 禁用] 立即杀死角色.  参数:strPlayer 玩家的GUID.,bDropItem 该参数无效,没有使用.,bShowKiller 该参数无效,没有使用., 返回:成功或失败. 参考:Kill,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_KillServant" value="lualib:Player_KillServant($VAR1$)&#10;$END$" description="Player_KillServant=&quot;bool  Player_KillServant(string  strPlayer) 杀死玩家所有随从.  参数:strPlayer 玩家的GUID., 返回:成功或失败. 备注:随从包括道士与法师的宝宝。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_NotifyCustomParam" value="lualib:Player_NotifyCustomParam($VAR1$)&#10;$END$" description="Player_NotifyCustomParam=&quot;void  Player_NotifyCustomParam(string  strPlayer,string  strKey) [此函数过期, 禁用] 向客户端发送变量通知.  参数:strPlayer 玩家的GUID.,strKey 变量名., 返回:无返回值. 警告:该接口属于服务器代码扩展,脚本作者无权使用. 参考:NotifyVar,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_NpcMove" value="lualib:Player_NpcMove($VAR1$)&#10;$END$" description="Player_NpcMove=&quot;bool  Player_NpcMove(string  strPlayer,string  strNpcKey,uint16  wRange) 让玩家跳转到指定NPC附近.  参数:strPlayer 玩家的GUID.,strNpcKey NPC的KeyName.,wRange 坐标范围., 返回:成功或失败. 备注:该接口有三大要点要注意：   1.指定NPC如果存在于副本中，则玩家必须进入过该副本（拥有副本门票）才能跳转。   2.NPC在公共地图中，可以跳转。   3.跳地图动作是延时异步回调，所以该接口执行完成以后玩家并没有开始跳地图。 警告:该接口是异步的,接口返回时玩家还没有切换地图.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetAlias" value="lualib:Player_SetAlias($VAR1$)&#10;$END$" description="Player_SetAlias=&quot;bool  Player_SetAlias(string  strPlayer,string  strAlias) 设置玩家的称谓.  参数:strPlayer 玩家的GUID.,strAlias 称谓., 返回:成功或失败. 备注:设置称谓后需在自定义变量表(rolevar_setting)中添加变量通知，变量名为_na_，是否通知周围选是。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetCustomVarInt" value="lualib:Player_SetCustomVarInt($VAR1$)&#10;$END$" description="Player_SetCustomVarInt=&quot;bool  Player_SetCustomVarInt(string  strPlayer,string  strKey,int32  iValue) [此函数过期, 禁用] 在对象实体上存储整型数值变量.  参数:strPlayer 玩家的GUID.,strKey 变量名.,iValue 变量值., 返回:成功或失败. 参考:SetInt,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetCustomVarStr" value="lualib:Player_SetCustomVarStr($VAR1$)&#10;$END$" description="Player_SetCustomVarStr=&quot;bool  Player_SetCustomVarStr(string  strPlayer,string  strKey,string  strValue) [此函数过期, 禁用] 在对象实体上存储字符型变量.  参数:strPlayer 玩家的GUID.,strKey 变量名.,strValue 变量值., 返回:成功或失败. 参考:SetStr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetIntProp" value="lualib:Player_SetIntProp($VAR1$)&#10;$END$" description="Player_SetIntProp=&quot;bool  Player_SetIntProp(string  strPlayer,uint16  wAttrType,uint16  wOprType,uint32  dwValue) [此函数过期, 禁用] 取得玩家的数值型属性值.  参数:strPlayer 玩家的GUID.,wAttrType 属性类型,过期接口不再详述.,wOprType 操作类型,过期接口不再详述.,dwValue 属性值., 返回:成功或失败. 警告:早期接口,不再提供技术支持.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_UseItem" value="lualib:Player_UseItem($VAR1$)&#10;$END$" description="Player_UseItem=&quot;bool  Player_UseItem(string  strPlayer,string  strItemKey) [此函数过期, 禁用] 让玩家使用道具.  参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName., 返回:成功或失败. 参考:ApplyItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_UseItemByID" value="lualib:Player_UseItemByID($VAR1$)&#10;$END$" description="Player_UseItemByID=&quot;bool  Player_UseItemByID(string  strPlayer,uint16  wID) [此函数过期, 禁用] 让玩家使用道具.  参数:strPlayer 玩家的GUID.,wID 物品的ID., 返回:成功或失败. 参考:ApplyItem,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:PostDBEvt" value="lualib:PostDBEvt($VAR1$)&#10;$END$" description="PostDBEvt=&quot;bool  PostDBEvt(string  strSQL,string  strCallBack,string  strParam) 投递数据库事件 参数:strSQL 要执行的SQL语句,为了数据库安全性只支持CREATE,SELECT,INSERT,UPDATE,DROP,DELETE,REPLACE六种语法,   并且所有的表名字段名都必须以DATA_***的形式定义.,strCallBack 回调函数名,有二种定义格式:1.文件名:函数名 2.函数名,strParam 自定义参数,由脚本作者自行维护,方便上下文切换.回调时原封不动的传回来., 返回:返回投递是否成功.由于数据库事件是异步的,所以返回值只表示事件投递是否成功,而不是SQL执行是否成功. 备注:回调函数格式: void OnDBEvtResult(bool bResult, unsigned int dwError, const char* strError, int iResultNum, const lua_script::lua_tableamp; tRecordSets, const char* strParam); bResult:执行结果 dwError:错误码 strError:错误信息 iResultNum:没有结果集的语句影响的结果数 tRecordSets:有结果集的语句产生的结果集 strParam:自动定参数   该接口是异步执行的，接口返回时并不知道最终执行的结果如何。 警告:对性能还是有影响的,不要轻易使用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:PostURL" value="lualib:PostURL($VAR1$)&#10;$END$" description="PostURL=&quot;bool  PostURL(string  Url,string  post_data,string  callback,string  param_list,uint32  timeout) 获取一个URL的内容，带Post数据 参数:Url http链接地址.,post_data 以post方式投递的数据.,callback 获取内容后的回调函数.,param_list 预设的回调参数.,timeout 超时时间., 返回:true表示投递请求成功（不表示获取内容成功）. 备注:该接口是异步执行的，接口返回时并不知道执行结果成功于否。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Prestige" value="lualib:Prestige($VAR1$)&#10;$END$" description="Prestige=&quot;int32  Prestige(string  strRole) 取得角色的声望.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:声望.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Random" value="lualib:Random($VAR1$)&#10;$END$" description="Random=&quot;int32  Random(int32  iMin,int32  iMax) 成生随机数.  参数:iMin 最小值.,iMax 最大值., 返回:返回随机数iRnd,取值范围:(iMin lt; iMax) (iMin lt;= iRnd lt;= iMax). 备注:该接口返回闭区间的值。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:RemainPoint" value="lualib:RemainPoint($VAR1$)&#10;$END$" description="RemainPoint=&quot;int32  RemainPoint(string  strRole) 取得角色的剩余属性点.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:剩余属性点.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Ride" value="lualib:Ride($VAR1$)&#10;$END$" description="Ride=&quot;void  Ride(string  strPlayer) 玩家骑上坐骑 参数:strPlayer 玩家GUID., 返回:无返回值. 备注:注意返回值判断。 警告:玩家上马不能保证成功,必须遵循乘骑规则.系统功能的扩展,脚本不应使用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Ring" value="lualib:Ring($VAR1$)&#10;$END$" description="Ring=&quot;string  Ring(string  strPlayer,uint8  sequ) 取得玩家当前装备的戒指.  参数:strPlayer 玩家的GUID.,sequ 0 = 左边,1 = 右边., 返回:装备的GUID,出错或没有装备返回''. 备注:注意返回值判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ScriptFuncToPlayer" value="lualib:ScriptFuncToPlayer($VAR1$)&#10;$END$" description="ScriptFuncToPlayer=&quot;bool  ScriptFuncToPlayer(string  player_name,string  script,string  scriptFunc,string  params) 给某个player执行一段脚本 参数:player_name 玩家姓名,script 脚本名称,scriptFunc 脚本函数,params 脚本参数，以#分隔，执行时会分开传入函数, 返回:true表示投递请求成功（不表示脚本已经执行）. 备注:该调用为异步，只能保证玩家在线时或上线后会执行这段脚本，不保证时序.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ScriptTextToPlayer" value="lualib:ScriptTextToPlayer($VAR1$)&#10;$END$" description="ScriptTextToPlayer=&quot;bool  ScriptTextToPlayer(string  player_name,string  script,string  scriptText) 给某个player执行一段脚本 参数:player_name 玩家姓名,script 脚本名称,scriptText 脚本内容, 返回:true表示投递请求成功（不表示脚本已经执行）. 备注:该调用为异步，只能保证玩家在线时或上线后会执行这段脚本，不保证时序.   这里的参数脚本名用于指定脚本执行的state，一般填当前脚本即可，若需用到某个脚本定义的常量，则填该脚本名。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetAchievement" value="lualib:SetAchievement($VAR1$)&#10;$END$" description="SetAchievement=&quot;void  SetAchievement(string  strRole,int32  iValue) 设置角色成就.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:注意：该成就与妖峰的成就系统没有任何关系。   如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetAutoOpt" value="lualib:SetAutoOpt($VAR1$)&#10;$END$" description="SetAutoOpt=&quot;void  SetAutoOpt(string  player_guid,bool  is_auto_fight,bool  is_auto_pick,uint32  time) 设置自动挂机选项.  参数:player_guid 玩家guid.,is_auto_fight 是否开启自动打怪 false=不开启 true=开启.,is_auto_pick 是否开启自动捡东西 false=不开启 true=开启.,time 挂机开启时间 单位秒., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetBrawn" value="lualib:SetBrawn($VAR1$)&#10;$END$" description="SetBrawn=&quot;void  SetBrawn(string  strRole,int32  iValue,bool  bIsLimit) 设置角色腕力.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDayInt" value="lualib:SetDayInt($VAR1$)&#10;$END$" description="SetDayInt=&quot;bool  SetDayInt(string  strObject,string  strKey,int  iValue) 在对象实体上设置数值型天变量.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,iValue 变量值., 返回:成功或失败. 备注:当脚本中需要以天为周期实现某功能时，可以试试使用该接口。也许可以简化许多代码量。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDayStr" value="lualib:SetDayStr($VAR1$)&#10;$END$" description="SetDayStr=&quot;bool  SetDayStr(string  strObject,string  strKey,string  strValue) 在对象实体上设置字符型天变量.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,strValue 变量值., 返回:成功或失败. 备注:当脚本中需要以天为周期实现某功能时，可以试试使用该接口。也许可以简化许多代码量。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDir" value="lualib:SetDir($VAR1$)&#10;$END$" description="SetDir=&quot;void  SetDir(string  strRole,int32  iValue) 设置角色方向.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:八方向值：0 - 7。0 为正北方向，依次顺时针换方向。   0~7分别为上、右上、右、右下、下、左下、左、左上。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDynamicAttr" value="lualib:SetDynamicAttr($VAR1$)&#10;$END$" description="SetDynamicAttr=&quot;bool  SetDynamicAttr(string  strPlayer,int32  iAttrSite,int32  iAttrType,int32  iAttrValue) 设置玩家动态属性.  参数:strPlayer 玩家的GUID.,iAttrSite 动态属性编号0-99.,iAttrType 属性类型,具体设置类型请咨询策划.,iAttrValue 属性值., 返回:成功或失败. 备注:动态属性是一段扩展的角色属性，属性值参与玩家属性重构。只有部分角色属性可以作为扩展属性：                                      3         lua_role_max_hp         hp上限         hp上限         1               5         lua_role_max_mp         mp上限         mp上限         1               6         lua_role_max_phy_def         物防上限         物防上限         1               7         lua_role_min_phy_def         物防下限         物防下限         1               8         lua_role_max_mag_def         魔防上限         魔防上限         1               9         lua_role_min_mag_def         魔防下限         魔防下限         1               10         lua_role_max_phy_atk         物攻上限         物攻上限         1               11         lua_role_min_phy_atk         物攻下限         物攻下限         1               12         lua_role_max_mag_atk         魔攻上限         魔攻上限         1               13         lua_role_min_mag_atk         魔攻下限         魔攻下限         1               14         lua_role_max_tao_atk         道术上限         道术上限         1               15         lua_role_min_tao_atk         道术下限         道术下限         1               16         lua_role_hit         命中         命中         1               17         lua_role_miss         闪避         闪避         1               18         lua_role_move_speed         移动速度，基准值         移动速度，基准值         1               19         lua_role_attack_speed         攻击速度，基准值         攻击速度，基准值         1               21         lua_role_max_weight         上限背包负重         上限背包负重         1               23         lua_role_max_equip_weight         上限装备负重         上限装备负重         1               25         lua_role_max_brawn         上限腕力         上限腕力         1               44         lua_role_hp_rec         hp回复值         hp回复值         1               45         lua_role_mp_rec         mp回复值         mp回复值         1               46         lua_role_poison_rec         中毒恢复值         中毒恢复值         1               49         lua_role_burst         暴击率         暴击率         1               50         lua_role_luck_curse         幸运诅咒         幸运诅咒         1               83         lua_role_max_phy_def_pct         物防上限百分比         物防上限百分比         1               84         lua_role_min_phy_def_pct         物防下限百分比         物防下限百分比         1               85         lua_role_max_mag_def_pct         魔防上限百分比         魔防上限百分比         1               86         lua_role_min_mag_def_pct         魔防下限百分比         魔防下限百分比         1               87         lua_role_max_phy_atk_pct         物攻上限百分比         物攻上限百分比         1               88         lua_role_min_phy_atk_pct         物攻下限百分比         物攻下限百分比         1               89         lua_role_max_mag_atk_pct         魔攻上限百分比         魔攻上限百分比         1               90         lua_role_min_mag_atk_pct         魔攻下限百分比         魔攻下限百分比         1               91         lua_role_max_tao_atk_pct         道术上限百分比         道术上限百分比         1               92         lua_role_min_tao_atk_pct         道术下限百分比         道术下限百分比         1               106         lua_role_hp_rec_pct         hp回复速度百分比         hp回复速度百分比         1               107         lua_role_mp_rec_pct         mp回复速度百分比         mp回复速度百分比         1               111         lua_role_suck_hp         吸血         吸当前hp-数值         1               112         lua_role_suck_hp_pct         吸血百分比         吸当前hp-百分比         1               113         lua_role_suck_max_hp_pct         吸血上限百分比         吸hp上限-百分比         1               114         lua_role_suck_mp         吸魔         吸当前mp-数值         1               115         lua_role_suck_mp_pct         吸魔百分比         吸当前mp-百分比         1               116         lua_role_suck_max_mp_pct         吸魔上限百分比         吸mp上限-百分比         1               117         lua_role_ref_phy         物理伤害反射         物理伤害反射-数值         1               118         lua_role_ref_phy_pct         物理伤害反射百分比         物理伤害反射-百分比         1               119         lua_role_ref_mag         魔法伤害反射数值         魔法伤害反射-数值         1               120         lua_role_ref_mag_pct         魔法伤害反射百分比         魔法伤害反射-百分比         1               121         lua_role_imm_mag         魔法伤害减免数值         魔法伤害减免-数值         1               122         lua_role_imm_mag_pct         魔法伤害减免百分比         魔法伤害减免-百分比         1               123         lua_role_imm_phy         物理伤害减免数值         物理伤害减免-数值         1               124         lua_role_imm_phy_pct         物理伤害减免百分比         物理伤害减免-百分比         1         如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。 参考:eRoleAttr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetEnergy" value="lualib:SetEnergy($VAR1$)&#10;$END$" description="SetEnergy=&quot;void  SetEnergy(string  strRole,int32  iValue,bool  bIsLimit) 设置角色活力.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   设置当前活力值必须小于活力值上限  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetEquipWeight" value="lualib:SetEquipWeight($VAR1$)&#10;$END$" description="SetEquipWeight=&quot;void  SetEquipWeight(string  strRole,int32  iValue,bool  bIsLimit) 设置角色装备负重.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   暂时无效，当做该接口不存在。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetGender" value="lualib:SetGender($VAR1$)&#10;$END$" description="SetGender=&quot;void  SetGender(string  strRole,int32  iValue) 设置角色性别.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:性别 1 = 男， 2 = 女。   如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetHair" value="lualib:SetHair($VAR1$)&#10;$END$" description="SetHair=&quot;void  SetHair(string  strRole,int32  iHair) 设置角色的发型.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iHair 发型编号., 返回:无返回值. 备注:角色的发型编号请咨询策划该如何设置，服务器上仅仅保存数值而已。   如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   发型编号0~3对应四种发型，其他编号均为光头。 参考:Hair,SetHair,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetHairColor" value="lualib:SetHairColor($VAR1$)&#10;$END$" description="SetHairColor=&quot;void  SetHairColor(string  strRole,int32  iHairColor) 设置角色的头发颜色.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iHairColor 头发颜色., 返回:无返回值. 备注:角色的发色编号请咨询策划该如何设置，服务器上仅仅保存数值而已。   如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。                      红分量,绿分量,蓝分量,透明                RDColor(193, 193, 217, 255),//0     RDColor(213, 164, 31,  255), //1     RDColor(233, 233, 149, 255),//2     RDColor(142, 218, 142, 255),//3     RDColor(130, 194, 200, 255),//4     RDColor(140, 139, 209, 255),//5     RDColor(247, 159, 210, 255),//6     RDColor(117, 117, 117, 255),//7     RDColor(195, 101, 31,   255),//8     RDColor(211, 211, 16,   255),//9     RDColor(65,  164, 66,   255), //10     RDColor(54,  175, 176, 255),//11     RDColor(100, 83,  173, 255),//12     RDColor(175, 68,  166, 255),//13     RDColor(52,  50,  48, 255),  //14     RDColor(187, 33,  33,   255),//15     RDColor(163, 170, 0,   255), //16     RDColor(5,   95,  5,   255),  //17     RDColor(28,  87, 138, 255),//18     RDColor(48,  35,  104, 255),//19     RDColor(104, 26, 119, 255),//20     RDColor(0,   0,   0,   255),//21     RDColor(93, 17,  17,   255),//22     RDColor(103, 103, 0,   255),//23     RDColor(3,   44,  4,   255),//24     RDColor(0,   36,  71,  255),//25     RDColor(34,  0,   66, 255),//26     RDColor(56,  0,   61, 255),//27 参考:HairColor,SetHairColor,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetHead" value="lualib:SetHead($VAR1$)&#10;$END$" description="SetHead=&quot;void  SetHead(string  strRole,int32  iHead) 设置角色的头像.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iHead 头像编号., 返回:无返回值. 备注:角色的头像编号请咨询策划该如何设置，服务器上仅仅保存数值而已。   如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。 参考:Head,SetHead,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetHeroState" value="lualib:SetHeroState($VAR1$)&#10;$END$" description="SetHeroState=&quot;bool  SetHeroState(string  player,string  hero,int32  state) 设置玩家已经载入的英雄状态 参数:player 玩家的GUID.,hero 英雄的GUID.,state 欲设置的状态., 返回:设置是否成功. 备注:状态包括 0、发呆；1、客户端控制；2、跟随；3、战斗； 4、守护  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetHp" value="lualib:SetHp($VAR1$)&#10;$END$" description="SetHp=&quot;void  SetHp(string  strRole,int32  iValue,bool  bIsLimit) 设置角色HP.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   只支持设置当前HP，设置HP上限无效，且设置的当前HP值必须小于HP上限，否则无效。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetHpPoint" value="lualib:SetHpPoint($VAR1$)&#10;$END$" description="SetHpPoint=&quot;void  SetHpPoint(string  strRole,int32  iValue) 设置角色HP属性点数.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetJob" value="lualib:SetJob($VAR1$)&#10;$END$" description="SetJob=&quot;void  SetJob(string  strRole,int32  iValue) 设置角色职业.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   1=战士，2=法师，3=道士。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetLevel" value="lualib:SetLevel($VAR1$)&#10;$END$" description="SetLevel=&quot;void  SetLevel(string  strRole,int32  iValue) 设置角色等级.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetLockSwitch" value="lualib:SetLockSwitch($VAR1$)&#10;$END$" description="SetLockSwitch=&quot;void  SetLockSwitch(string  strRole,int32  iLockStatus) 设置角色的安全锁开关状态.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iLockStatus 安全锁开关状态,0: 未解锁 1: 已解锁., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。 参考:LockSwitch,SetLockSwitch,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetLuckCurse" value="lualib:SetLuckCurse($VAR1$)&#10;$END$" description="SetLuckCurse=&quot;void  SetLuckCurse(string  strRole,int32  iValue) 设置角色幸运诅咒.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   暂时无效，当作该接口不存在即可。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetMagAtk" value="lualib:SetMagAtk($VAR1$)&#10;$END$" description="SetMagAtk=&quot;void  SetMagAtk(string  strRole,int32  iValue,bool  bIsLimit) 设置角色魔法攻击.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   暂时无效，当作该接口不存在即可。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetMagAtkPoint" value="lualib:SetMagAtkPoint($VAR1$)&#10;$END$" description="SetMagAtkPoint=&quot;void  SetMagAtkPoint(string  strRole,int32  iValue) 设置角色魔法攻击属性点数.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetMagDef" value="lualib:SetMagDef($VAR1$)&#10;$END$" description="SetMagDef=&quot;void  SetMagDef(string  strRole,int32  iValue,bool  bIsLimit) 设置角色魔法防御.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   暂时无效，当作该接口不存在即可。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetMagDefPoint" value="lualib:SetMagDefPoint($VAR1$)&#10;$END$" description="SetMagDefPoint=&quot;void  SetMagDefPoint(string  strRole,int32  iValue) 设置角色魔法防御属性点数.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetMeritor" value="lualib:SetMeritor($VAR1$)&#10;$END$" description="SetMeritor=&quot;void  SetMeritor(string  strRole,int32  iValue) 设置角色功勋.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetMp" value="lualib:SetMp($VAR1$)&#10;$END$" description="SetMp=&quot;void  SetMp(string  strRole,int32  iValue,bool  bIsLimit) 设置角色MP.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   只支持设置当前MP，设置MP上限无效，且设置的当前MP值必须小于MP上限，否则无效。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetMpPoint" value="lualib:SetMpPoint($VAR1$)&#10;$END$" description="SetMpPoint=&quot;void  SetMpPoint(string  strRole,int32  iValue) 设置角色MP属性点数.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetNetCheck" value="lualib:SetNetCheck($VAR1$)&#10;$END$" description="SetNetCheck=&quot;void  SetNetCheck(string  player_guid,bool  is_check) 客户端网络状态检查 参数:player_guid 玩家guid.,is_check true表示开始检查 false表示结束检查., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetPhyAtk" value="lualib:SetPhyAtk($VAR1$)&#10;$END$" description="SetPhyAtk=&quot;void  SetPhyAtk(string  strRole,int32  iValue,bool  bIsLimit) 设置角色物理攻击.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   暂时无效，当作该接口不存在即可。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetPhyAtkPoint" value="lualib:SetPhyAtkPoint($VAR1$)&#10;$END$" description="SetPhyAtkPoint=&quot;void  SetPhyAtkPoint(string  strRole,int32  iValue) 设置角色物理攻击属性点数.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetPhyDef" value="lualib:SetPhyDef($VAR1$)&#10;$END$" description="SetPhyDef=&quot;void  SetPhyDef(string  strRole,int32  iValue,bool  bIsLimit) 设置角色物理防御.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:暂时无效，当作该接口不存在即可。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetPhyDefPoint" value="lualib:SetPhyDefPoint($VAR1$)&#10;$END$" description="SetPhyDefPoint=&quot;void  SetPhyDefPoint(string  strRole,int32  iValue) 设置角色物理防御属性点数.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetPk" value="lualib:SetPk($VAR1$)&#10;$END$" description="SetPk=&quot;void  SetPk(string  strRole,int32  iValue) 设置角色PK值.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetPrestige" value="lualib:SetPrestige($VAR1$)&#10;$END$" description="SetPrestige=&quot;void  SetPrestige(string  strRole,int32  iValue) 设置角色声望.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetRemainPoint" value="lualib:SetRemainPoint($VAR1$)&#10;$END$" description="SetRemainPoint=&quot;void  SetRemainPoint(string  strRole,int32  iValue) 设置角色剩余属性点数.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetTaoAtk" value="lualib:SetTaoAtk($VAR1$)&#10;$END$" description="SetTaoAtk=&quot;void  SetTaoAtk(string  strRole,int32  iValue,bool  bIsLimit) 设置角色道术攻击.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   暂时无效，当作该接口不存在即可。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetTaoAtkPoint" value="lualib:SetTaoAtkPoint($VAR1$)&#10;$END$" description="SetTaoAtkPoint=&quot;void  SetTaoAtkPoint(string  strRole,int32  iValue) 设置角色道术攻击属性点数.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetWeekInt" value="lualib:SetWeekInt($VAR1$)&#10;$END$" description="SetWeekInt=&quot;bool  SetWeekInt(string  strObject,string  strKey,int  iValue) 在对象实体上设置数值型周变量.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,iValue 变量值., 返回:成功或失败. 备注:当脚本中需要以周为周期实现某功能时，可以试试使用该接口。也许可以简化许多代码量。   周指的是自然周，而不是绝对间隔7天的一周时间。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetWeekStr" value="lualib:SetWeekStr($VAR1$)&#10;$END$" description="SetWeekStr=&quot;bool  SetWeekStr(string  strObject,string  strKey,string  strValue) 在对象实体上设置字符型周变量.  参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,strValue 变量值., 返回:成功或失败. 备注:当脚本中需要以周为周期实现某功能时，可以试试使用该接口。也许可以简化许多代码量。   周指的是自然周，而不是绝对间隔7天的一周时间。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetWeight" value="lualib:SetWeight($VAR1$)&#10;$END$" description="SetWeight=&quot;void  SetWeight(string  strRole,int32  iValue,bool  bIsLimit) 设置角色背包负重.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效., 返回:无返回值. 备注:如果修改的是玩家的属性，系统会产生日志记录，方便以后备查。记录的信息有：角色名、修改地图名、坐标、属性类型、原始属性值、修改值、修改动作的发起者。   暂时无效。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Shoes" value="lualib:Shoes($VAR1$)&#10;$END$" description="Shoes=&quot;string  Shoes(string  strPlayer) 取得玩家当前装备的靴子.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意返回值的判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Shoulder" value="lualib:Shoulder($VAR1$)&#10;$END$" description="Shoulder=&quot;string  Shoulder(string  strPlayer) 取得玩家当前装备的护肩.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意返回值的判断。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ShowForm" value="lualib:ShowForm($VAR1$)&#10;$END$" description="ShowForm=&quot;void  ShowForm(string  strPlayer,string  strFormName) 通知客户端显示表单 参数:strPlayer 玩家GUID.,strFormName 表单名字., 返回:无返回值. 参考:ShowForm,ShowFormWithContent,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:StartAutoRun" value="lualib:StartAutoRun($VAR1$)&#10;$END$" description="StartAutoRun=&quot;void  StartAutoRun(string  player_guid,string  opt) 开启指定玩家挂机选项.  参数:player_guid 玩家guid.,opt 挂机选项字符串., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:StartCastleWarEx" value="lualib:StartCastleWarEx($VAR1$)&#10;$END$" description="StartCastleWarEx=&quot;bool  StartCastleWarEx(string  strCastleName,string  strFamilys,uint32  dwStartTime,uint32  dwDuration) 开启城堡战.  参数:strCastleName 城堡名.,strFamilys 攻城的所有行会.如:行会1amp;行会2amp;行会3amp;...amp;行会n.,dwStartTime 攻城时间.UTC时间,参考GetAllTime.单位:秒.,dwDuration 持续时间,单位:秒., 返回:成功或失败. 备注:多GS的情况下，不能跨GS调用。 参考:GetAllTime,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:StartStall" value="lualib:StartStall($VAR1$)&#10;$END$" description="StartStall=&quot;bool  StartStall(string  dummy,string  stall_name,table  goods,table  price_type,table  price) 让假人摆摊 参数:dummy 假人的GUID.,stall_name 摊位名称.,goods 商品的guid，必须在假人包裹里.,price_type 商品的价格类型.,price 商品的价格., 返回:摆摊是否成功. 备注:无  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:StopAutoRun" value="lualib:StopAutoRun($VAR1$)&#10;$END$" description="StopAutoRun=&quot;void  StopAutoRun(string  player_guid) 关闭指定玩家挂机选项 参数:player_guid 玩家guid., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:StopStall" value="lualib:StopStall($VAR1$)&#10;$END$" description="StopStall=&quot;bool  StopStall(string  dummy) 让假人结束摆摊 参数:dummy 假人的GUID., 返回:摆摊是否成功. 备注:无  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SubBindGold" value="lualib:SubBindGold($VAR1$)&#10;$END$" description="SubBindGold=&quot;bool  SubBindGold(string  strPlayer,int  iGold,string  strDesc,string  strTarget) 扣除角色绑定金币.  参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:扣除角色绑定金币会在数据库服务器产生记录日志，方便以后备查。记录的信息有：被扣除的角色名、扣除地图、扣除坐标、原始角色绑定金币数量、扣除数量、扣除原因、扣除动作的发起者、扣除的脚本名。 参考:SubGold,SubBindGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SubBindIngot" value="lualib:SubBindIngot($VAR1$)&#10;$END$" description="SubBindIngot=&quot;bool  SubBindIngot(string  strPlayer,int  iIngot,string  strDesc,string  strTarget) 扣除角色绑定元宝.  参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:扣除角色绑定元宝会在数据库服务器产生记录日志，方便以后备查。记录的信息有：被扣除的角色名、扣除地图、扣除坐标、原始角色绑定元宝数量、扣除数量、扣除原因、扣除动作的发起者、扣除的脚本名。 参考:SubIngot,SubBindIngot,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SubExp" value="lualib:SubExp($VAR1$)&#10;$END$" description="SubExp=&quot;bool  SubExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget) 扣除角色经验.  参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:扣除角色经验会在数据库服务器产生记录日志，方便以后备查。记录的信息有：被扣除的角色名、扣除地图、扣除坐标、原始角色经验数量、扣除数量、扣除原因、扣除动作的发起者、扣除的脚本名。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SubGold" value="lualib:SubGold($VAR1$)&#10;$END$" description="SubGold=&quot;bool  SubGold(string  strPlayer,int  iGold,string  strDesc,string  strTarget) 扣除角色非绑定金币.  参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:扣除角色金币会在数据库服务器产生记录日志，方便以后备查。记录的信息有：被扣除的角色名、扣除地图、扣除坐标、原始角色金币数量、扣除数量、扣除原因、扣除动作的发起者、扣除的脚本名。 参考:SubGold,SubBindGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SubIngot" value="lualib:SubIngot($VAR1$)&#10;$END$" description="SubIngot=&quot;bool  SubIngot(string  strPlayer,int  iIngot,string  strDesc,string  strTarget) 扣除角色非绑定元宝.  参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:扣除角色元宝会在数据库服务器产生记录日志，方便以后备查。记录的信息有：被扣除的角色名、扣除地图、扣除坐标、原始角色玩宝数量、扣除数量、扣除原因、扣除动作的发起者、扣除的脚本名。 参考:SubIngot,SubBindIngot,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SubIntegral" value="lualib:SubIntegral($VAR1$)&#10;$END$" description="SubIntegral=&quot;bool  SubIntegral(string  strPlayer,int32  iIntegral,string  strDesc,string  strTarget) 扣除角色积分.  参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者., 返回:成功或失败. 备注:扣除角色积分会在数据库服务器产生记录日志，方便以后备查。记录的信息有：被扣除的角色名、扣除地图、扣除坐标、原始角色积分数量、扣除数量、扣除原因、扣除动作的发起者、扣除的脚本名。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysCenterMsg" value="lualib:SysCenterMsg($VAR1$)&#10;$END$" description="SysCenterMsg=&quot;void  SysCenterMsg(uint8  byType,string  strMsg,string  strPlayer) 发送客户端中部消息.  参数:byType 消息类型,0 = 自己 1 = 所有人 2 = 行会 3 = 队伍 4 = 当前.,strMsg 消息内容.,strPlayer 玩家的GUID.当消息类型为组队或行会时,该GUID必须为队伍或行会中的成员.否则默认填''., 返回:无返回值. 备注:系统经常使用该接口发送广播消息，比如人品玩家提落极品。   该接口会根据消息类型决定是发送广播还是单播。发送时机由脚本作者自行把握。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysGuildMsg" value="lualib:SysGuildMsg($VAR1$)&#10;$END$" description="SysGuildMsg=&quot;bool  SysGuildMsg(string  strFamily,string  strMsg) 发送客户端底部公会消息.  参数:strFamily 行会的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:系统经常使用该接口发送行会广播，比如行会战消息。   该接口会向玩家所属行会中所有的玩家发送广播，比较消耗服务器资源。发送时机由脚本作者自行把握。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMapMsg" value="lualib:SysMapMsg($VAR1$)&#10;$END$" description="SysMapMsg=&quot;bool  SysMapMsg(string  strMap,string  strMsg) 发送客户端底部地图消息.  参数:strMap 地图的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:系统经常使用该接口发送地图广播，比如宝箱刷新、攻城提示之类的消息。   该接口会向地图中所有的玩家发送广播，比较消耗服务器资源。发送时机由脚本作者自行把握。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendBoardMsg" value="lualib:SysMsg_SendBoardMsg($VAR1$)&#10;$END$" description="SysMsg_SendBoardMsg=&quot;bool  SysMsg_SendBoardMsg(string  strObject,string  strTitle,string  strMsg,uint32  dwTimeOut) 发送客户端面板消息.  参数:strObject 对象的GUID.对象可以为系统、队伍、行会、地图、玩家.,strTitle 面板标题.,strMsg 消息内容.,dwTimeOut 持续时间,单位:秒., 返回:成功或失败. 备注:系统经常使用该接口发送活动公告之类的提示。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysMsg_SendTipsMsg" value="lualib:SysMsg_SendTipsMsg($VAR1$)&#10;$END$" description="SysMsg_SendTipsMsg=&quot;bool  SysMsg_SendTipsMsg(string  strPlayer,string  strMsg) 发送客户端左上角消息.  参数:strPlayer 玩家的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:系统经常使用该接口发送一些小提示。比如经验、金币、元宝、血量之类的小改变。   该接口不能跨GS调用。在服务器配置有多个GS的情况下，可以使用SysTipsMsg接品。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysRoleTalk" value="lualib:SysRoleTalk($VAR1$)&#10;$END$" description="SysRoleTalk=&quot;bool  SysRoleTalk(string  strRole,string  strMsg) 发送角色当前说话通知.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strMsg 消息内容., 返回:成功或失败. 备注:角色说话会向角色当前视野中的所有玩家发送广播，相对来说也是有点消耗系统资源的。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysTipsMsg" value="lualib:SysTipsMsg($VAR1$)&#10;$END$" description="SysTipsMsg=&quot;bool  SysTipsMsg(string  strPlayer,string  strMsg) 发送客户端左上角消息.  参数:strPlayer 玩家的GUID.,strMsg 消息内容., 返回:成功或失败. 备注:系统经常使用该接口发送一些小提示。比如经验、金币、元宝、血量之类的小改变。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SysTopMsg" value="lualib:SysTopMsg($VAR1$)&#10;$END$" description="SysTopMsg=&quot;void  SysTopMsg(uint8  byCount,string  strMsg) 发送客户端顶部消息.  参数:byCount 消息滚动次数.,strMsg 消息内容., 返回:无返回值. 备注:顶部消息为全服广播，比较消耗系统资源。请脚本作者自行取舍发消息的时机。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TaoAtkPoint" value="lualib:TaoAtkPoint($VAR1$)&#10;$END$" description="TaoAtkPoint=&quot;int32  TaoAtkPoint(string  strRole) 取得角色的道攻属性点.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC., 返回:道攻属性点.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TimeDiff" value="lualib:TimeDiff($VAR1$)&#10;$END$" description="TimeDiff=&quot;int32  TimeDiff(string  strDateTime1,string  strDateTime2) 取得字符串时间的差值.  参数:strDateTime1 字符串时间,时间格式:Y-m-d H:M:S或Y-m-d.,strDateTime2 字符串时间,时间格式:Y-m-d H:M:S或Y-m-d., 返回:时间差值. 备注:取得二个时间点之间的间隔时差绝对值。如果参数提供的时间格式错误则返回-1。   返回值为秒；   '2013-08-07'这种格式相当于'2013-08-07 00:00:00'。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:TitleName" value="lualib:TitleName($VAR1$)&#10;$END$" description="TitleName=&quot;string  TitleName(string  strPlayer) 取得玩家的称谓.  参数:strPlayer 玩家的GUID., 返回:玩家的称谓,如果玩家不存在返回''. 备注:该接口已废弃，不再使用。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ToAttrName" value="lualib:ToAttrName($VAR1$)&#10;$END$" description="ToAttrName=&quot;string  ToAttrName(int32  iAttrName) 获取属性名.  参数:iAttrName 属性类型., 返回:属性类型名,出错返回未知属性. 备注:将角色属性的数值类型转成字符串类型，属性数值类型与字符串类型的对象关系定义在att.xml文件中。 参考:eRoleAttr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:UnRide" value="lualib:UnRide($VAR1$)&#10;$END$" description="UnRide=&quot;void  UnRide(string  strPlayer) 玩家解散坐骑 参数:strPlayer 玩家GUID., 返回:无返回值. 备注:当玩家上坐骑失败时，接口会自动向玩家发送错误提示。该接口不会返回任何信息。 警告:系统功能的扩展,脚本不应使用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:UserID" value="lualib:UserID($VAR1$)&#10;$END$" description="UserID=&quot;uint32  UserID(string  strPlayer) 取得玩家的帐号ID.  参数:strPlayer 玩家的GUID., 返回:帐号ID,出错返回0. 备注:帐号ID由验证服务器生成，脚本只能读取不能作出更改。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:VarList" value="lualib:VarList($VAR1$)&#10;$END$" description="VarList=&quot;table  VarList(string  strObject) 返回对象的所有自定义变量列表.  参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品., 返回:对象的自定义变量列表,返回lua table. 备注:返回table每一项都是一个子table，表示一个变量；   子table的格式规则如下：   table['Key']  代表变量名   table['Value'] 代表变量值   table['Type'] 代表变量值类型 0：数值 1：字符串  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Weapon" value="lualib:Weapon($VAR1$)&#10;$END$" description="Weapon=&quot;string  Weapon(string  strPlayer) 取得玩家当前装备的武器.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意区别判断返回值。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Weight" value="lualib:Weight($VAR1$)&#10;$END$" description="Weight=&quot;int32  Weight(string  strRole,bool  bLimit) 取得角色的背包负重.  参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前., 返回:背包负重. 备注:注意当前负重与负重上限的区别。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Wings" value="lualib:Wings($VAR1$)&#10;$END$" description="Wings=&quot;string  Wings(string  strPlayer) 取得玩家当前装备的翅膀.  参数:strPlayer 玩家的GUID., 返回:装备的GUID,出错或没有装备返回''. 备注:注意区别判断返回值。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Wrist" value="lualib:Wrist($VAR1$)&#10;$END$" description="Wrist=&quot;string  Wrist(string  strPlayer,uint8  sequ) 取得玩家当前装备的护腕.  参数:strPlayer 玩家的GUID.,sequ 0 = 左边,1 = 右边., 返回:装备的GUID,出错或没有装备返回''. 备注:注意区别判断返回值。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetDeposit" value="lualib:GetDeposit($VAR1$)&#10;$END$" description="GetDeposit=&quot;double  GetDeposit(string  strPlayer) 取得角色仓库金币.  参数:strPlayer 玩家的GUID., 返回:玩家仓库金币的数量. 备注:查询角色的仓库金币前必须先解安全锁，否则返回0。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GUIDType" value="lualib:GUIDType($VAR1$)&#10;$END$" description="GUIDType=&quot;int32  GUIDType(string  strObject) 取得对象GUID的类型.  参数:strObject 对象的GUID., 返回:GUID类型 0 = 玩家, 1 = 假人, 2 = 怪物, 3 = NPC, 4 = 物品, 5 = 地图, 6 = 队伍, 7 = 行会, 10 = 系统, 出错返回-1. 备注:该接口只能根据GUID得到对象的类型，而不能判断对象的实体是否存在。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ModifyCastleAttacks" value="lualib:ModifyCastleAttacks($VAR1$)&#10;$END$" description="ModifyCastleAttacks=&quot;bool  ModifyCastleAttacks(string  strCastleName,table  tAttacks,bool  bRemoveAll) 强制修改城堡攻击行会.  参数:strCastleName 城堡名.,tAttacks 攻击行会列表.,bRemoveAll 是否清除原先设置的行会., 返回:成功或失败. 备注:要强制修改城堡攻城行会，必须满足以下三个条件：   1.城堡战申请过   2.攻城战还没有开启   3.城堡在本GS上   否则接口会返回失败。 警告:必须调用StartCastleWarEx、StartCastleWar注册过以后才能强制修改.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ModifyCastleStart" value="lualib:ModifyCastleStart($VAR1$)&#10;$END$" description="ModifyCastleStart=&quot;bool  ModifyCastleStart(string  strCastleName,uint32  dwTimes,uint32  dwDuration) 强制修改城堡攻城时间.  参数:strCastleName 城堡名.,dwTimes 攻城时间,从1970-1-1 00:00:00到攻城时间所经过的秒数.,dwDuration 攻城持继时间,单位:秒., 返回:成功或失败. 备注:要强制修改城堡攻城时间，必须满足以下三个条件：   1.城堡战申请过   2.攻城战还没有开启   3.城堡在本GS上   否则接口会返回失败。 警告:必须调用StartCastleWarEx、StartCastleWar注册过以后才能强制修改.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:QueryCastleStart" value="lualib:QueryCastleStart($VAR1$)&#10;$END$" description="QueryCastleStart=&quot;uint32  QueryCastleStart(string  strCastleName) 查询攻城时间.  参数:strCastleName 城堡名., 返回:攻城时间,从1970-1-1 00:00:00到攻城时间所经过的秒数. 备注:如果攻城战没有开启过，则查询结果返回0。LUA时间接口将0作为当前时间，请使用LUA时间接口时注意区别。 警告:申请过攻城以后再查询攻城时间才有意义.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddDeposit" value="lualib:AddDeposit($VAR1$)&#10;$END$" description="AddDeposit=&quot;bool  AddDeposit(string  strPlayer,int  iGold,string  strDesc,string  strTarget) 添加角色仓库金币.  参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 添加金币的原因.,strTarget 添加金币动作的发起者., 返回:成功或失败. 备注:添加角色仓库金币会在数据库服务器产生记录日志，方便以后备查。记录的信息有：被添加的角色名、添加地图、添加坐标、原始仓库金币数量、添加数量、添加原因、添加动作的发起者、添加的脚本名。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SubDeposit" value="lualib:SubDeposit($VAR1$)&#10;$END$" description="SubDeposit=&quot;bool  SubDeposit(string  strPlayer,int  iGold,string  strDesc,string  strTarget) 扣除角色仓库金币.  参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 扣除金币的原因.,strTarget 扣除金币动作的发起者., 返回:成功或失败. 备注:扣除角色仓库金币会在数据库服务器产生记录日志，方便以后备查。记录的信息有：被扣除的角色名、扣除地图、扣除坐标、原始仓库金币数量、扣除数量、扣除原因、扣除动作的发起者、扣除的脚本名。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetFormAllowFunc" value="lualib:SetFormAllowFunc($VAR1$)&#10;$END$" description="SetFormAllowFunc=&quot;bool  SetFormAllowFunc(table  tFuncList) 设置表单的允许回调函数列表.  参数:tFuncList 函数名列表的lua table., 返回:成功或失败. 备注:  只允许指定的函数名可以被客户端调用；   默认不设就是所有函数都可以调用。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetRegionFree" value="lualib:GetRegionFree($VAR1$)&#10;$END$" description="GetRegionFree=&quot;table  GetRegionFree(string  strMap,uint16  wX,uint16  wY,uint16  wRange) [此函数过期, 禁用] 返回地图区域中空坐标列表.  参数:strMap 地图的GUID.,wX 区域X坐标.,wY 区域Y坐标.,wRange 区域范围., 返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFree(strMap, wX, wY, wR); local x, y = tGrids[1].X, tGrids[1].Y; 备注:返回值格式：   local tGrids = lualib:GetRegionFree(lualib:MapGuid(strPlayer), lualib:X(strPlayer), lualib:Y(strPlayer), 3);   tGirds[1].X 第一个空格子的X坐标   tGrids[1].Y 第一个空格子的Y坐标 参考:GetRegionFreeEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:NotifyCSChannelMsg" value="lualib:NotifyCSChannelMsg($VAR1$)&#10;$END$" description="NotifyCSChannelMsg=&quot;void  NotifyCSChannelMsg(uint16  wChannelType,string  strParam,string  strMsg) [此函数过期, 禁用] GS给CS发送频道消息 GS给CS发送频道消息. 参数:wChannelType 频道类型.,strParam 参数.,strMsg 消息内容., 返回:无返回值. 备注:该接口曾经用来扩展服务器的功能,脚本作者不要使用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetRegionFreeRnd" value="lualib:GetRegionFreeRnd($VAR1$)&#10;$END$" description="GetRegionFreeRnd=&quot;table  GetRegionFreeRnd(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint16  wLimit) [此函数过期, 禁用] 返回地图区域中空坐标列表.  参数:strMap 地图的GUID.,wX 区域X坐标.,wY 区域Y坐标.,wRange 区域范围.,wLimit 指定返回的坐标数量.如果满足条件的坐标不足指定数量,则返回实际数量的坐标., 返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFreeRnd(strMap, wX, wY, wR, wLimit); local x, y = tGrids[1].X, tGrids[1].Y; 参考:GetRegionFreeRndEx,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_add_exp_all" value="lualib:on_add_exp_all($VAR1$)&#10;$END$" description="on_add_exp_all=&quot;void  on_add_exp_all(string  strRole,int32  iExp) 角色得到经验时回调.  参数:strRole 角色的GUID.,iExp 得到的经验值., 返回:无返回值. 备注:lua_trigger_add_exp 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_attack_ex" value="lualib:on_attack_ex($VAR1$)&#10;$END$" description="on_attack_ex=&quot;void  on_attack_ex(string  strRole,string  strAttacker,int32  iHp,string  strSkillKey) 受攻击时回调.  参数:strRole 被攻击者的GUID.,strAttacker 攻击者的GUID.,iHp 损失的血量.,strSkillKey 攻击技能的KeyName., 返回:无返回值. 备注:lua_trigger_attack_ex；   on_attack加强版，多了扣血值与技能参数。 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_dig_meat" value="lualib:on_dig_meat($VAR1$)&#10;$END$" description="on_dig_meat=&quot;void  on_dig_meat(string  strRole,string  strTarget,uint16  wSkillID) 角色挖肉时回调.  参数:strRole 角色的GUID.,strTarget 怪物的GUID.,wSkillID 挖肉技能的ID., 返回:无返回值. 备注:lua_trigger_dig_meat 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_monster_born" value="lualib:on_monster_born($VAR1$)&#10;$END$" description="on_monster_born=&quot;void  on_monster_born(string  strMonster) 怪物出生时回调.  参数:strMonster 怪物的GUID., 返回:无返回值. 备注:lua_trigger_monster_born 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_logout" value="lualib:on_pre_logout($VAR1$)&#10;$END$" description="on_pre_logout=&quot;bool  on_pre_logout(string  strPlayer,int32  iExitType) 玩家退出游戏之前回调.  参数:strPlayer 玩家的GUID.,iExitType 玩家退出类型. 1 = 退出游戏, 2 = 返回角色界面., 返回:true = 允许玩家退出游戏, false = 阻止玩家退出游戏. 备注:lua_trigger_pre_logout 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_mall" value="lualib:on_pre_mall($VAR1$)&#10;$END$" description="on_pre_mall=&quot;bool  on_pre_mall(string  strPlayer,string  strItemKey,int32  iNum,int32  iPrice,uint8  byBind) 玩家在商城消费之前回调.  参数:strPlayer 玩家的GUID.,strItemKey 道具的KeyName.,iNum 购买数量.,iPrice 购买单价.,byBind 绑定类型. 1 = 绑定, 2 = 不绑定., 返回:true = 允许玩家购买, false = 阻止玩家购买. 备注:lua_trigger_pre_mall 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_ride_request" value="lualib:on_ride_request($VAR1$)&#10;$END$" description="on_ride_request=&quot;void  on_ride_request(string  strPlayer) 收到上马请求时回调.  参数:strPlayer 玩家的GUID., 返回:无返回值. 备注:lua_trigger_ride_request 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_system_stop" value="lualib:on_system_stop($VAR1$)&#10;$END$" description="on_system_stop=&quot;void  on_system_stop(void  ) 系统关闭回调.  参数: , 返回:无返回值. 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_timer_check" value="lualib:on_timer_check($VAR1$)&#10;$END$" description="on_timer_check=&quot;void  on_timer_check(string  strItem) 道具自检回调.  参数:strItem 道具的GUID., 返回:无返回值. 备注:只有属于玩家的道具才会触发自检回调. 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_unride_request" value="lualib:on_unride_request($VAR1$)&#10;$END$" description="on_unride_request=&quot;void  on_unride_request(string  strPlayer) 收到下马请求时回调.  参数:strPlayer 玩家的GUID., 返回:无返回值. 备注:lua_trigger_unride_request 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:post_die" value="lualib:post_die($VAR1$)&#10;$END$" description="post_die=&quot;void  post_die(string  strRole,string  strKiller) 角色死亡时回调.  参数:strRole 角色的GUID.,strKiller 杀手的GUID., 返回:无返回值. 备注:lua_trigger_post_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:post_monster_die" value="lualib:post_monster_die($VAR1$)&#10;$END$" description="post_monster_die=&quot;void  post_monster_die(string  strMonster,string  strKiller) 怪物死亡时回调.  参数:strMonster 怪物的GUID.,strKiller 杀手的GUID., 返回:无返回值. 备注:lua_trigger_monster_post_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:post_player_die" value="lualib:post_player_die($VAR1$)&#10;$END$" description="post_player_die=&quot;void  post_player_die(string  strPlayer,string  strKiller) 玩家死亡时回调.  参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID., 返回:无返回值. 备注:lua_trigger_player_post_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:post_process_pk" value="lualib:post_process_pk($VAR1$)&#10;$END$" description="post_process_pk=&quot;void  post_process_pk(string  strKiller,string  strVictim,int32  iPKRef) 角色处理PK值时回调.  参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,iPKRef 得到的PK值., 返回:无返回值. 备注:lua_trigger_post_process_pk 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:pre_die" value="lualib:pre_die($VAR1$)&#10;$END$" description="pre_die=&quot;bool  pre_die(string  strRole,string  strKiller) 角色死亡之前回调.  参数:strRole 角色的GUID.,strKiller 杀手的GUID., 返回:true = 允许角色死亡, false = 阻止角色死亡. 备注:lua_trigger_pre_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:pre_monster_die" value="lualib:pre_monster_die($VAR1$)&#10;$END$" description="pre_monster_die=&quot;bool  pre_monster_die(string  strMonster,string  strKiller) 怪物死亡之前回调.  参数:strMonster 怪物的GUID.,strKiller 杀手的GUID., 返回:true = 允许怪物死亡, false = 阻止怪物死亡. 备注:lua_trigger_monster_pre_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:pre_player_die" value="lualib:pre_player_die($VAR1$)&#10;$END$" description="pre_player_die=&quot;bool  pre_player_die(string  strPlayer,string  strKiller) 玩家死亡之前回调.  参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID., 返回:true = 允许玩家死亡, false = 阻止玩家死亡. 备注:lua_trigger_player_post_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:pre_player_relive" value="lualib:pre_player_relive($VAR1$)&#10;$END$" description="pre_player_relive=&quot;bool  pre_player_relive(string  strRole) 角色复活之前回调.  参数:strRole 角色的GUID., 返回:true = 允许角色复活, false = 阻止角色复活. 备注:lua_trigger_player_relive 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:pre_process_pk" value="lualib:pre_process_pk($VAR1$)&#10;$END$" description="pre_process_pk=&quot;bool  pre_process_pk(string  strKiller,string  strVictim) 角色处理PK值之前回调.  参数:strKiller 杀手的GUID.,strVictim 受害者的GUID., 返回:true = 允许角色得到PK值, false = 阻止角色得到PK值. 备注:lua_trigger_pre_process_pk 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AllServantBetry" value="lualib:AllServantBetry($VAR1$)&#10;$END$" description="AllServantBetry=&quot;bool  AllServantBetry(string  strPlayer) 玩家所有宝宝背叛.  参数:strPlayer 玩家的GUID., 返回:true = 成功, false = 失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetRegionFreeEx" value="lualib:GetRegionFreeEx($VAR1$)&#10;$END$" description="GetRegionFreeEx=&quot;table  GetRegionFreeEx(string  strMap,table  tRange) 返回地图区域中空坐标列表.  参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.   tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度., 返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFreeEx(...); local x, y = tGrids[1].X, tGrids[1].Y;  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetRegionFreeRndEx" value="lualib:GetRegionFreeRndEx($VAR1$)&#10;$END$" description="GetRegionFreeRndEx=&quot;table  GetRegionFreeRndEx(string  strMap,table  tRange,uint16  wLimit) 返回地图区域中空坐标列表.  参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.   tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,wLimit 指定返回的坐标数量.如果满足条件的坐标不足指定数量,则返回实际数量的坐标., 返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFreeRndEx(...); local x, y = tGrids[1].X, tGrids[1].Y;  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetTempInt" value="lualib:GetTempInt($VAR1$)&#10;$END$" description="GetTempInt=&quot;int32  GetTempInt(string  strObject,string  strKey) 取得对象实体上存储的整型数值变量.  参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名., 返回:变量的值,如果变量不存在返回0. 备注:GetTempInt取到的变量是由SetTempInt所设置的变量，与SetInt所设置的同名变量无关，相当于两种不同的变量类型；   临时变量在角色下线后销毁，变为0。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetTempStr" value="lualib:GetTempStr($VAR1$)&#10;$END$" description="GetTempStr=&quot;string  GetTempStr(string  strObject,string  strKey) 取得对象实体上存储的字符型变量.  参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名., 返回:变量的值,如果变量不存在返回''. 备注:GetTempStr取到的变量是由SetTempStr所设置的变量，与SetStr所设置的同名变量无关，相当于两种不同的变量类型；   临时变量在角色下线后销毁，变为''。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasItem" value="lualib:HasItem($VAR1$)&#10;$END$" description="HasItem=&quot;bool  HasItem(string  strPlayer,string  strItem) 判断玩家是否拥有道具.  参数:strPlayer 玩家的GUID.,strItem 物品的GUID., 返回:true = 拥有, false = 没有.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:InAdvWarehouse" value="lualib:InAdvWarehouse($VAR1$)&#10;$END$" description="InAdvWarehouse=&quot;bool  InAdvWarehouse(string  strPlayer,string  strItem) 判断道具是否在玩家高级仓库里.  参数:strPlayer 玩家的GUID.,strItem 物品的GUID., 返回:true = 是, false = 否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:InBag" value="lualib:InBag($VAR1$)&#10;$END$" description="InBag=&quot;bool  InBag(string  strPlayer,string  strItem) 判断道具是否在玩家包裹里.  参数:strPlayer 玩家的GUID.,strItem 物品的GUID., 返回:true = 是, false = 否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:InEquip" value="lualib:InEquip($VAR1$)&#10;$END$" description="InEquip=&quot;bool  InEquip(string  strPlayer,string  strItem) 判断道具是否在玩家装备栏里.  参数:strPlayer 玩家的GUID.,strItem 物品的GUID., 返回:true = 是, false = 否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:InWarehouse" value="lualib:InWarehouse($VAR1$)&#10;$END$" description="InWarehouse=&quot;bool  InWarehouse(string  strPlayer,string  strItem) 判断道具是否在玩家仓库里.  参数:strPlayer 玩家的GUID.,strItem 物品的GUID., 返回:true = 是, false = 否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetRegionItemsEx" value="lualib:Map_GetRegionItemsEx($VAR1$)&#10;$END$" description="Map_GetRegionItemsEx=&quot;table  Map_GetRegionItemsEx(string  strMap,string  strItemKey,table  tRange) 获取地图区域内的物品列表.  参数:strMap 地图的GUID.,strItemKey 物品的KeyName.如果该参数为'',则匹配所有物品.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.   tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度., 返回:区域内物品列表,返回lua table.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetRegionMonstersEx" value="lualib:Map_GetRegionMonstersEx($VAR1$)&#10;$END$" description="Map_GetRegionMonstersEx=&quot;table  Map_GetRegionMonstersEx(string  strMap,string  strMonsterKey,table  tRange,bool  bIgnoreDied,bool  bIgnoreServant) 获取地图区域内的怪物列表.  参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果参数为'',则匹配所有怪物.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.   tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物., 返回:区域内怪物列表,返回lua table.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetRegionNpcsEx" value="lualib:Map_GetRegionNpcsEx($VAR1$)&#10;$END$" description="Map_GetRegionNpcsEx=&quot;table  Map_GetRegionNpcsEx(string  strMap,table  tRange,string  strNpcKey) 获取地图区域内的NPC列表.  参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.   tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,strNpcKey NPC的KeyName.如果参数为'',则匹配所有NPC., 返回:区域内NPC列表,返回lua table.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetRegionPlayersEx" value="lualib:Map_GetRegionPlayersEx($VAR1$)&#10;$END$" description="Map_GetRegionPlayersEx=&quot;table  Map_GetRegionPlayersEx(string  strMap,table  tRange,bool  bIgnoreDied) 获取地图区域内的玩家列表.  参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.   tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色., 返回:区域内玩家列表,返回lua table. 备注:如果区域范围很大时，该接口是很有耗CPU的。   如果要取整个地图的玩家，请使用Map_GetMapPlayers。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MoveItem" value="lualib:MoveItem($VAR1$)&#10;$END$" description="MoveItem=&quot;bool  MoveItem(string  strPlayer,string  strItem,int32  iSite) 物品移动接口.  参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,iSite 装备栏、背包、仓库、高级仓库中的格子对应的编号., 返回:true = 成功, false = 失败. 备注:必须满足物品移动规则.比如:将武器移动到项链位置是被禁止的. 参考:eRoleSite,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SendSpeakerMsg" value="lualib:SendSpeakerMsg($VAR1$)&#10;$END$" description="SendSpeakerMsg=&quot;void  SendSpeakerMsg(string  strPlayer,string  strMsg) 发送喇叭消息.  参数:strPlayer 玩家的GUID.该接口是异步的,发送结果未知.,strMsg 喇叭消息的内容., 返回:无返回值. 备注:使用该接口需要道具小喇叭，否则无法发送消息，发送成功会自动扣除1个小喇叭  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:ServantBetry" value="lualib:ServantBetry($VAR1$)&#10;$END$" description="ServantBetry=&quot;bool  ServantBetry(string  strPlayer,string  strServant) 玩家某个宝宝背叛.  参数:strPlayer 玩家的GUID.,strServant 宝宝的GUID., 返回:true = 成功, false = 失败. 参考:Player_GetServantList,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetTempInt" value="lualib:SetTempInt($VAR1$)&#10;$END$" description="SetTempInt=&quot;bool  SetTempInt(string  strObject,string  strKey,int32  iValue) 在对象实体上存储整型数值变量.  参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,iValue 变量值., 返回:成功或失败. 备注:  SetTempInt所设置的变量须由GetTempInt取到，与GetInt所取到的同名变量无关，相当于两种不同的变量类型；   临时变量在角色下线后销毁，变为0。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetTempStr" value="lualib:SetTempStr($VAR1$)&#10;$END$" description="SetTempStr=&quot;bool  SetTempStr(string  strObject,string  strKey,string  strValue) 在对象实体上存储字符型变量.  参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,strValue 变量值., 返回:成功或失败. 备注:  SetTempStr所设置的变量须由GetTempStr取到，与GetStr所取到的同名变量无关，相当于两种不同的变量类型；   临时变量在角色下线后销毁，变为''。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:eRoleAttr" value="lualib:eRoleAttr($VAR1$)&#10;$END$" description="eRoleAttr=&quot; 枚举类型:角色属性类型定义 参数: 返回:无返回值. 备注: lua_role_level 类型值=0 类型名=等级. lua_role_job 类型值=1 类型名=职业. lua_role_hp 类型值=2 类型名=当前hp. lua_role_max_hp 类型值=3 类型名=hp上限. lua_role_mp 类型值=4 类型名=当前mp. lua_role_max_mp 类型值=5 类型名=mp上限. lua_role_max_phy_def 类型值=6 类型名=物防上限. lua_role_min_phy_def 类型值=7 类型名=物防下限. lua_role_max_mag_def 类型值=8 类型名=魔防上限. lua_role_min_mag_def 类型值=9 类型名=魔防下限. lua_role_max_phy_atk 类型值=10 类型名=物攻上限. lua_role_min_phy_atk 类型值=11 类型名=物攻下限. lua_role_max_mag_atk 类型值=12 类型名=魔攻上限. lua_role_min_mag_atk 类型值=13 类型名=魔攻下限. lua_role_max_tao_atk 类型值=14 类型名=道术上限. lua_role_min_tao_atk 类型值=15 类型名=道术下限. lua_role_hit 类型值=16 类型名=命中. lua_role_miss 类型值=17 类型名=闪避. lua_role_move_speed 类型值=18 类型名=移动速度，基准值. lua_role_attack_speed 类型值=19 类型名=攻击速度，基准值. lua_role_weight 类型值=20 类型名=当前背包负重. lua_role_max_weight 类型值=21 类型名=上限背包负重. lua_role_equip_weight 类型值=22 类型名=当前装备负重. lua_role_max_equip_weight 类型值=23 类型名=上限装备负重. lua_role_brawn 类型值=24 类型名=腕力. lua_role_max_brawn 类型值=25 类型名=上限腕力. lua_role_point 类型值=26 类型名=剩余属性点. lua_role_point_hp 类型值=27 类型名=剩余属性点加HP. lua_role_point_mp 类型值=28 类型名=剩余属性点加MP. lua_role_point_phy_atk 类型值=29 类型名=剩余属性点加物攻. lua_role_point_mag_atk 类型值=30 类型名=剩余属性点加魔攻. lua_role_point_tao_atk 类型值=31 类型名=剩余属性点加道术. lua_role_point_phy_def 类型值=32 类型名=剩余属性点加物防. lua_role_point_mag_def 类型值=33 类型名=剩余属性点加魔防. lua_role_ele_1_atk 类型值=34 类型名=属性攻击（金）. lua_role_ele_2_atk 类型值=35 类型名=属性攻击（木）. lua_role_ele_3_atk 类型值=36 类型名=属性攻击（水）. lua_role_ele_4_atk 类型值=37 类型名=属性攻击（火）. lua_role_ele_5_atk 类型值=38 类型名=属性攻击（土）. lua_role_ele_1_def 类型值=39 类型名=属性防御（金）. lua_role_ele_2_def 类型值=40 类型名=属性防御（木）. lua_role_ele_3_def 类型值=41 类型名=属性防御（水）. lua_role_ele_4_def 类型值=42 类型名=属性防御（火）. lua_role_ele_5_def 类型值=43 类型名=属性防御（土）. lua_role_hp_rec 类型值=44 类型名=hp回复值. lua_role_mp_rec 类型值=45 类型名=mp回复值. lua_role_poison_rec 类型值=46 类型名=中毒恢复值. lua_role_energy 类型值=47 类型名=活力. lua_role_max_energy 类型值=48 类型名=活力上限. lua_role_burst 类型值=49 类型名=暴击率. lua_role_luck_curse 类型值=50 类型名=幸运诅咒. lua_role_pk 类型值=51 类型名=PK值. lua_role_prestige 类型值=52 类型名=声望. lua_role_meritorious 类型值=53 类型名=功勋. lua_role_achievement 类型值=54 类型名=成就. lua_role_reincarnation 类型值=55 类型名=转生标记. lua_role_rein_hp 类型值=56 类型名=转生后HP. lua_role_rein_mp 类型值=57 类型名=转生后MP. lua_role_rein_max_phy_def 类型值=58 类型名=转生后物防上限. lua_role_rein_min_phy_def 类型值=59 类型名=转生后物防下限. lua_role_rein_max_mag_def 类型值=60 类型名=转生魔防上限. lua_role_rein_min_mag_def 类型值=61 类型名=转生魔防下限. lua_role_rein_max_phy_atk 类型值=62 类型名=转生物攻上限. lua_role_rein_min_phy_atk 类型值=63 类型名=转生物攻下限. lua_role_rein_max_mag_atk 类型值=64 类型名=转生魔攻上限. lua_role_rein_min_mag_atk 类型值=65 类型名=转生魔攻下限. lua_role_rein_max_tao_atk 类型值=66 类型名=转生道术上限. lua_role_rein_min_tao_atk 类型值=67 类型名=转生道术下限. lua_role_rein_hit 类型值=68 类型名=转生命中. lua_role_rein_miss 类型值=69 类型名=转生闪避. lua_role_rein_burst 类型值=70 类型名=转生暴击率. lua_role_rein_weight 类型值=71 类型名=转生背包负重. lua_role_rein_equip_weight 类型值=72 类型名=转生装备负重. lua_role_rein_brawn 类型值=73 类型名=转生腕力. lua_role_bag_size_0 类型值=74 类型名=包裹0大小. lua_role_bag_size_1 类型值=75 类型名=包裹1大小. lua_role_bag_size_2 类型值=76 类型名=包裹2大小. lua_role_bag_size_3 类型值=77 类型名=包裹3大小. lua_role_bag_size_4 类型值=78 类型名=包裹4大小. lua_role_warehouse_size 类型值=79 类型名=玩家的仓库大小. lua_role_warehouse_adv_size 类型值=80 类型名=玩家高级仓库大小. lua_role_max_hp_pct 类型值=81 类型名=hp百分比. lua_role_max_mp_pct 类型值=82 类型名=mp百分比. lua_role_max_phy_def_pct 类型值=83 类型名=物防上限百分比. lua_role_min_phy_def_pct 类型值=84 类型名=物防下限百分比. lua_role_max_mag_def_pct 类型值=85 类型名=魔防上限百分比. lua_role_min_mag_def_pct 类型值=86 类型名=魔防下限百分比. lua_role_max_phy_atk_pct 类型值=87 类型名=物攻上限百分比. lua_role_min_phy_atk_pct 类型值=88 类型名=物攻下限百分比. lua_role_max_mag_atk_pct 类型值=89 类型名=魔攻上限百分比. lua_role_min_mag_atk_pct 类型值=90 类型名=魔攻下限百分比. lua_role_max_tao_atk_pct 类型值=91 类型名=道术上限百分比. lua_role_min_tao_atk_pct 类型值=92 类型名=道术下限百分比. lua_role_ele_1_atk_pct 类型值=93 类型名=属性攻击（金）百分比. lua_role_ele_2_atk_pct 类型值=94 类型名=属性攻击（木）百分比. lua_role_ele_3_atk_pct 类型值=95 类型名=属性攻击（水）百分比. lua_role_ele_4_atk_pct 类型值=96 类型名=属性攻击（火）百分比. lua_role_ele_5_atk_pct 类型值=97 类型名=属性攻击（土）百分比. lua_role_ele_1_def_pct 类型值=98 类型名=属性防御（金）百分比. lua_role_ele_2_def_pct 类型值=99 类型名=属性防御（木）百分比. lua_role_ele_3_def_pct 类型值=100 类型名=属性防御（水）百分比. lua_role_ele_4_def_pct 类型值=101 类型名=属性防御（火）百分比. lua_role_ele_5_def_pct 类型值=102 类型名=属性防御（土）百分比. lua_role_max_weight_pct 类型值=103 类型名=背包负重百分比. lua_role_max_equip_weight_pct 类型值=104 类型名=装备负重百分比. lua_role_max_brawn_pct 类型值=105 类型名=腕力百分比. lua_role_hp_rec_pct 类型值=106 类型名=hp回复速度百分比. lua_role_mp_rec_pct 类型值=107 类型名=mp回复速度百分比. lua_role_poison_rec_pct 类型值=108 类型名=中毒恢复速度百分比. lua_role_move_speed_pct 类型值=109 类型名=移动速度百分比. lua_role_attack_speed_pct 类型值=110 类型名=攻击速度百分比. lua_role_suck_hp 类型值=111 类型名=吸血. lua_role_suck_hp_pct 类型值=112 类型名=吸血百分比. lua_role_suck_max_hp_pct 类型值=113 类型名=吸血上限百分比. lua_role_suck_mp 类型值=114 类型名=吸魔. lua_role_suck_mp_pct 类型值=115 类型名=吸魔百分比. lua_role_suck_max_mp_pct 类型值=116 类型名=吸魔上限百分比. lua_role_ref_phy 类型值=117 类型名=物理伤害反射. lua_role_ref_phy_pct 类型值=118 类型名=物理伤害反射百分比. lua_role_ref_mag 类型值=119 类型名=魔法伤害反射数值. lua_role_ref_mag_pct 类型值=120 类型名=魔法伤害反射百分比. lua_role_imm_mag 类型值=121 类型名=魔法伤害减免数值. lua_role_imm_mag_pct 类型值=122 类型名=魔法伤害减免百分比. lua_role_imm_phy 类型值=123 类型名=物理伤害减免数值. lua_role_imm_phy_pct 类型值=124 类型名=物理伤害减免百分比. lua_role_atk_mode 类型值=125 类型名=攻击类型. lua_role_can_walk 类型值=126 类型名=能走路. lua_role_can_run 类型值=127 类型名=能跑步. lua_role_can_turn 类型值=128 类型名=能转向. lua_role_can_jump_map 类型值=129 类型名=能跳地图. lua_role_can_phy_atk 类型值=130 类型名=能物理攻击. lua_role_can_mag_atk 类型值=131 类型名=能魔法攻击. lua_role_can_use_item 类型值=132 类型名=能使用道具(包括换装). lua_role_is_phy_imm 类型值=133 类型名=物理免疫. lua_role_is_mag_imm 类型值=134 类型名=魔法免疫. lua_role_is_stealth 类型值=135 类型名=隐形. lua_role_has_mana_shield 类型值=136 类型名=有魔法盾. lua_role_has_collide 类型值=137 类型名=处于冲撞状态. lua_role_has_repelled 类型值=138 类型名=处于击退状态. lua_role_can_push 类型值=139 类型名=能否被推. lua_role_can_use_skill 类型值=140 类型名=能否使用技能. lua_role_is_black 类型值=141 类型名=是否为黑名. lua_role_has_imm_shield 类型值=142 类型名=有减免盾. lua_role_imm_shield 类型值=143 类型名=减免盾多少值，BUFF消失. lua_role_has_bag_guard 类型值=144 类型名=有包裹防掉落. lua_role_has_equip_guard 类型值=145 类型名=有装备防掉落. lua_role_is_gray 类型值=146 类型名=灰名. lua_role_is_chaos 类型值=147 类型名=混沌状态. lua_role_is_poisoning 类型值=148 类型名=是否中毒. lua_role_is_ghost 类型值=149 类型名=是否ghost. lua_role_is_pk 类型值=150 类型名=是否pk状态. lua_role_can_through 类型值=151 类型名=是否可以穿人穿怪. lua_role_has_team 类型值=180 类型名= 有队伍. lua_role_gender 类型值=181 类型名= 性别. lua_role_head 类型值=182 类型名= 头像. lua_role_hair 类型值=183 类型名= 头发. lua_role_hair_color 类型值=184 类型名= 头发颜色. lua_role_gm_level 类型值=185 类型名= gm等级. lua_role_identify 类型值=186 类型名= 鉴定积分. lua_role_title 类型值=187 类型名= 称号. lua_role_gold_settlement 类型值=188 类型名= 金币结算: 1金币结算 0:绑币结算. lua_role_stall 类型值=189 类型名= 0: 未摆摊 1: 摆摊准备 2: 摆摊中. lua_role_friend_switch 类型值=190 类型名= 0: 不可加好友 1: 可加好友. lua_role_team_switch 类型值=191 类型名= 0: 不接收队伍邀请 1: 接收队伍邀请. lua_role_has_family 类型值=192 类型名= 有行会. lua_role_exp_pct 类型值=193 类型名=经验倍数. lua_role_mag_miss 类型值=194 类型名=魔法闪避. lua_role_intensity 类型值=195 类型名=装备强度. lua_role_attack_pct 类型值=196 类型名=攻击力倍数. lua_role_defense_pct 类型值=197 类型名=防御力倍数. lua_role_gp_runtime 类型值=198 类型名=反外挂运行时计时器. lua_role_gp 类型值=199 类型名=反外挂总计数器. lua_role_ride_switch 类型值=200 类型名=骑马开关. lua_role_vip_level 类型值=201 类型名=角色vip等级. lua_role_vip_buytimes 类型值=202 类型名=角色vip购买时间. lua_role_lock_switch 类型值=203 类型名=锁开关. lua_role_effect1 类型值=204 类型名=武器发光位置. lua_role_effect2 类型值=205 类型名=身体发光位置. lua_role_effect3 类型值=206 类型名=马蹄发光位置. lua_role_effect4 类型值=207 类型名=预留发光位置1. lua_role_effect5 类型值=208 类型名=预留发光位置2. lua_role_camp 类型值=209 类型名=阵营. lua_role_avatar 类型值=210 类型名=外形. lua_role_dyn_att0 类型值=300 类型名=动态属性名0. lua_role_dyn_value0 类型值=301 类型名=动态属性值0. lua_role_dyn_att1 类型值=302 类型名=动态属性名1. lua_role_dyn_value1 类型值=303 类型名=动态属性值1. lua_role_dyn_att2 类型值=304 类型名=动态属性名2. lua_role_dyn_value2 类型值=305 类型名=动态属性值2. lua_role_dyn_att3 类型值=306 类型名=动态属性名3. lua_role_dyn_value3 类型值=307 类型名=动态属性值3. lua_role_dyn_att4 类型值=308 类型名=动态属性名4. lua_role_dyn_value4 类型值=309 类型名=动态属性值4. lua_role_dyn_att5 类型值=310 类型名=动态属性名5. lua_role_dyn_value5 类型值=311 类型名=动态属性值5. lua_role_dyn_att6 类型值=312 类型名=动态属性名6. lua_role_dyn_value6 类型值=313 类型名=动态属性值6. lua_role_dyn_att7 类型值=314 类型名=动态属性名7. lua_role_dyn_value7 类型值=315 类型名=动态属性值7. lua_role_dyn_att8 类型值=316 类型名=动态属性名8. lua_role_dyn_value8 类型值=317 类型名=动态属性值8. lua_role_dyn_att9 类型值=318 类型名=动态属性名9. lua_role_dyn_value9 类型值=319 类型名=动态属性值9. lua_role_dyn_att10 类型值=320 类型名=动态属性名10. lua_role_dyn_value10 类型值=321 类型名=动态属性值10. lua_role_dyn_att11 类型值=322 类型名=动态属性名11. lua_role_dyn_value11 类型值=323 类型名=动态属性值11. lua_role_dyn_att12 类型值=324 类型名=动态属性名12. lua_role_dyn_value12 类型值=325 类型名=动态属性值12. lua_role_dyn_att13 类型值=326 类型名=动态属性名13. lua_role_dyn_value13 类型值=327 类型名=动态属性值13. lua_role_dyn_att14 类型值=328 类型名=动态属性名14. lua_role_dyn_value14 类型值=329 类型名=动态属性值14. lua_role_dyn_att15 类型值=330 类型名=动态属性名15. lua_role_dyn_value15 类型值=331 类型名=动态属性值15. lua_role_dyn_att16 类型值=332 类型名=动态属性名16. lua_role_dyn_value16 类型值=333 类型名=动态属性值16. lua_role_dyn_att17 类型值=334 类型名=动态属性名17. lua_role_dyn_value17 类型值=335 类型名=动态属性值17. lua_role_dyn_att18 类型值=336 类型名=动态属性名18. lua_role_dyn_value18 类型值=337 类型名=动态属性值18. lua_role_dyn_att19 类型值=338 类型名=动态属性名19. lua_role_dyn_value19 类型值=339 类型名=动态属性值19. lua_role_dyn_att20 类型值=340 类型名=动态属性名20. lua_role_dyn_value20 类型值=341 类型名=动态属性值20. lua_role_dyn_att21 类型值=342 类型名=动态属性名21. lua_role_dyn_value21 类型值=343 类型名=动态属性值21. lua_role_dyn_att22 类型值=344 类型名=动态属性名22. lua_role_dyn_value22 类型值=345 类型名=动态属性值22. lua_role_dyn_att23 类型值=346 类型名=动态属性名23. lua_role_dyn_value23 类型值=347 类型名=动态属性值23. lua_role_dyn_att24 类型值=348 类型名=动态属性名24. lua_role_dyn_value24 类型值=349 类型名=动态属性值24. lua_role_dyn_att25 类型值=350 类型名=动态属性名25. lua_role_dyn_value25 类型值=351 类型名=动态属性值25. lua_role_dyn_att26 类型值=352 类型名=动态属性名26. lua_role_dyn_value26 类型值=353 类型名=动态属性值26. lua_role_dyn_att27 类型值=354 类型名=动态属性名27. lua_role_dyn_value27 类型值=355 类型名=动态属性值27. lua_role_dyn_att28 类型值=356 类型名=动态属性名28. lua_role_dyn_value28 类型值=357 类型名=动态属性值28. lua_role_dyn_att29 类型值=358 类型名=动态属性名29. lua_role_dyn_value29 类型值=359 类型名=动态属性值29. lua_role_dyn_att30 类型值=360 类型名=动态属性名30. lua_role_dyn_value30 类型值=361 类型名=动态属性值30. lua_role_dyn_att31 类型值=362 类型名=动态属性名31. lua_role_dyn_value31 类型值=363 类型名=动态属性值31. lua_role_dyn_att32 类型值=364 类型名=动态属性名32. lua_role_dyn_value32 类型值=365 类型名=动态属性值32. lua_role_dyn_att33 类型值=366 类型名=动态属性名33. lua_role_dyn_value33 类型值=367 类型名=动态属性值33. lua_role_dyn_att34 类型值=368 类型名=动态属性名34. lua_role_dyn_value34 类型值=369 类型名=动态属性值34. lua_role_dyn_att35 类型值=370 类型名=动态属性名35. lua_role_dyn_value35 类型值=371 类型名=动态属性值35. lua_role_dyn_att36 类型值=372 类型名=动态属性名36. lua_role_dyn_value36 类型值=373 类型名=动态属性值36. lua_role_dyn_att37 类型值=374 类型名=动态属性名37. lua_role_dyn_value37 类型值=375 类型名=动态属性值37. lua_role_dyn_att38 类型值=376 类型名=动态属性名38. lua_role_dyn_value38 类型值=377 类型名=动态属性值38. lua_role_dyn_att39 类型值=378 类型名=动态属性名39. lua_role_dyn_value39 类型值=379 类型名=动态属性值39. lua_role_dyn_att40 类型值=380 类型名=动态属性名40. lua_role_dyn_value40 类型值=381 类型名=动态属性值40. lua_role_dyn_att41 类型值=382 类型名=动态属性名41. lua_role_dyn_value41 类型值=383 类型名=动态属性值41. lua_role_dyn_att42 类型值=384 类型名=动态属性名42. lua_role_dyn_value42 类型值=385 类型名=动态属性值42. lua_role_dyn_att43 类型值=386 类型名=动态属性名43. lua_role_dyn_value43 类型值=387 类型名=动态属性值43. lua_role_dyn_att44 类型值=388 类型名=动态属性名44. lua_role_dyn_value44 类型值=389 类型名=动态属性值44. lua_role_dyn_att45 类型值=390 类型名=动态属性名45. lua_role_dyn_value45 类型值=391 类型名=动态属性值45. lua_role_dyn_att46 类型值=392 类型名=动态属性名46. lua_role_dyn_value46 类型值=393 类型名=动态属性值46. lua_role_dyn_att47 类型值=394 类型名=动态属性名47. lua_role_dyn_value47 类型值=395 类型名=动态属性值47. lua_role_dyn_att48 类型值=396 类型名=动态属性名48. lua_role_dyn_value48 类型值=397 类型名=动态属性值48. lua_role_dyn_att49 类型值=398 类型名=动态属性名49. lua_role_dyn_value49 类型值=399 类型名=动态属性值49. lua_role_dyn_att50 类型值=400 类型名=动态属性名50. lua_role_dyn_value50 类型值=401 类型名=动态属性值50. lua_role_dyn_att51 类型值=402 类型名=动态属性名51. lua_role_dyn_value51 类型值=403 类型名=动态属性值51. lua_role_dyn_att52 类型值=404 类型名=动态属性名52. lua_role_dyn_value52 类型值=405 类型名=动态属性值52. lua_role_dyn_att53 类型值=406 类型名=动态属性名53. lua_role_dyn_value53 类型值=407 类型名=动态属性值53. lua_role_dyn_att54 类型值=408 类型名=动态属性名54. lua_role_dyn_value54 类型值=409 类型名=动态属性值54. lua_role_dyn_att55 类型值=410 类型名=动态属性名55. lua_role_dyn_value55 类型值=411 类型名=动态属性值55. lua_role_dyn_att56 类型值=412 类型名=动态属性名56. lua_role_dyn_value56 类型值=413 类型名=动态属性值56. lua_role_dyn_att57 类型值=414 类型名=动态属性名57. lua_role_dyn_value57 类型值=415 类型名=动态属性值57. lua_role_dyn_att58 类型值=416 类型名=动态属性名58. lua_role_dyn_value58 类型值=417 类型名=动态属性值58. lua_role_dyn_att59 类型值=418 类型名=动态属性名59. lua_role_dyn_value59 类型值=419 类型名=动态属性值59. lua_role_dyn_att60 类型值=420 类型名=动态属性名60. lua_role_dyn_value60 类型值=421 类型名=动态属性值60. lua_role_dyn_att61 类型值=422 类型名=动态属性名61. lua_role_dyn_value61 类型值=423 类型名=动态属性值61. lua_role_dyn_att62 类型值=424 类型名=动态属性名62. lua_role_dyn_value62 类型值=425 类型名=动态属性值62. lua_role_dyn_att63 类型值=426 类型名=动态属性名63. lua_role_dyn_value63 类型值=427 类型名=动态属性值63. lua_role_dyn_att64 类型值=428 类型名=动态属性名64. lua_role_dyn_value64 类型值=429 类型名=动态属性值64. lua_role_dyn_att65 类型值=430 类型名=动态属性名65. lua_role_dyn_value65 类型值=431 类型名=动态属性值65. lua_role_dyn_att66 类型值=432 类型名=动态属性名66. lua_role_dyn_value66 类型值=433 类型名=动态属性值66. lua_role_dyn_att67 类型值=434 类型名=动态属性名67. lua_role_dyn_value67 类型值=435 类型名=动态属性值67. lua_role_dyn_att68 类型值=436 类型名=动态属性名68. lua_role_dyn_value68 类型值=437 类型名=动态属性值68. lua_role_dyn_att69 类型值=438 类型名=动态属性名69. lua_role_dyn_value69 类型值=439 类型名=动态属性值69. lua_role_dyn_att70 类型值=440 类型名=动态属性名70. lua_role_dyn_value70 类型值=441 类型名=动态属性值70. lua_role_dyn_att71 类型值=442 类型名=动态属性名71. lua_role_dyn_value71 类型值=443 类型名=动态属性值71. lua_role_dyn_att72 类型值=444 类型名=动态属性名72. lua_role_dyn_value72 类型值=445 类型名=动态属性值72. lua_role_dyn_att73 类型值=446 类型名=动态属性名73. lua_role_dyn_value73 类型值=447 类型名=动态属性值73. lua_role_dyn_att74 类型值=448 类型名=动态属性名74. lua_role_dyn_value74 类型值=449 类型名=动态属性值74. lua_role_dyn_att75 类型值=450 类型名=动态属性名75. lua_role_dyn_value75 类型值=451 类型名=动态属性值75. lua_role_dyn_att76 类型值=452 类型名=动态属性名76. lua_role_dyn_value76 类型值=453 类型名=动态属性值76. lua_role_dyn_att77 类型值=454 类型名=动态属性名77. lua_role_dyn_value77 类型值=455 类型名=动态属性值77. lua_role_dyn_att78 类型值=456 类型名=动态属性名78. lua_role_dyn_value78 类型值=457 类型名=动态属性值78. lua_role_dyn_att79 类型值=458 类型名=动态属性名79. lua_role_dyn_value79 类型值=459 类型名=动态属性值79. lua_role_dyn_att80 类型值=460 类型名=动态属性名80. lua_role_dyn_value80 类型值=461 类型名=动态属性值80. lua_role_dyn_att81 类型值=462 类型名=动态属性名81. lua_role_dyn_value81 类型值=463 类型名=动态属性值81. lua_role_dyn_att82 类型值=464 类型名=动态属性名82. lua_role_dyn_value82 类型值=465 类型名=动态属性值82. lua_role_dyn_att83 类型值=466 类型名=动态属性名83. lua_role_dyn_value83 类型值=467 类型名=动态属性值83. lua_role_dyn_att84 类型值=468 类型名=动态属性名84. lua_role_dyn_value84 类型值=469 类型名=动态属性值84. lua_role_dyn_att85 类型值=470 类型名=动态属性名85. lua_role_dyn_value85 类型值=471 类型名=动态属性值85. lua_role_dyn_att86 类型值=472 类型名=动态属性名86. lua_role_dyn_value86 类型值=473 类型名=动态属性值86. lua_role_dyn_att87 类型值=474 类型名=动态属性名87. lua_role_dyn_value87 类型值=475 类型名=动态属性值87. lua_role_dyn_att88 类型值=476 类型名=动态属性名88. lua_role_dyn_value88 类型值=477 类型名=动态属性值88. lua_role_dyn_att89 类型值=478 类型名=动态属性名89. lua_role_dyn_value89 类型值=479 类型名=动态属性值89. lua_role_dyn_att90 类型值=480 类型名=动态属性名90. lua_role_dyn_value90 类型值=481 类型名=动态属性值90. lua_role_dyn_att91 类型值=482 类型名=动态属性名91. lua_role_dyn_value91 类型值=483 类型名=动态属性值91. lua_role_dyn_att92 类型值=484 类型名=动态属性名92. lua_role_dyn_value92 类型值=485 类型名=动态属性值92. lua_role_dyn_att93 类型值=486 类型名=动态属性名93. lua_role_dyn_value93 类型值=487 类型名=动态属性值93. lua_role_dyn_att94 类型值=488 类型名=动态属性名94. lua_role_dyn_value94 类型值=489 类型名=动态属性值94. lua_role_dyn_att95 类型值=490 类型名=动态属性名95. lua_role_dyn_value95 类型值=491 类型名=动态属性值95. lua_role_dyn_att96 类型值=492 类型名=动态属性名96. lua_role_dyn_value96 类型值=493 类型名=动态属性值96. lua_role_dyn_att97 类型值=494 类型名=动态属性名97. lua_role_dyn_value97 类型值=495 类型名=动态属性值97. lua_role_dyn_att98 类型值=496 类型名=动态属性名98. lua_role_dyn_value98 类型值=497 类型名=动态属性值98. lua_role_dyn_att99 类型值=498 类型名=动态属性名99. lua_role_dyn_value99 类型值=499 类型名=动态属性值99.   --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:eRoleSite" value="lualib:eRoleSite($VAR1$)&#10;$END$" description="eRoleSite=&quot; 枚举类型:角色site位类型定义 参数: 返回:无返回值. 备注: lua_site_weapon 类型值=1 类型名=武器的site. lua_site_helmet 类型值=2 类型名=头盔的site. lua_site_wrist_0 类型值=3 类型名=护腕0的site. lua_site_wrist_1 类型值=4 类型名=护腕1site. lua_site_armor 类型值=5 类型名=衣服的site. lua_site_juju 类型值=6 类型名=符咒的site. lua_site_shoes 类型值=7 类型名=鞋子的site. lua_site_shoulder 类型值=8 类型名=护肩的site. lua_site_necklace 类型值=9 类型名=项链的site. lua_site_ring_0 类型值=10 类型名=戒指0的site. lua_site_ring_1 类型值=11 类型名=戒指1的site. lua_site_medal 类型值=12 类型名=勋章的site. lua_site_gem 类型值=13 类型名=宝石的site. lua_site_wings 类型值=14 类型名=翅膀的site. lua_site_amulet 类型值=15 类型名=守护的site. lua_site_mount 类型值=16 类型名=坐骑的site. lua_site_expand_0 类型值=17 类型名=背包0扩充位置的site. lua_site_expand_1 类型值=18 类型名=背包1扩充位置的site. lua_site_expand_2 类型值=19 类型名=背包2扩充位置的site. lua_site_expand_3 类型值=20 类型名=背包3扩充位置的site. lua_site_expand_4 类型值=21 类型名=背包4扩充位置的site. lua_site_bag_0 类型值=22 类型名=背包0第一个格子的site. lua_site_bag_1 类型值=62 类型名=背包1第一个格子的site. lua_site_bag_2 类型值=102 类型名=背包2第一个格子的site. lua_site_bag_3 类型值=142 类型名=背包3第一个格子的site. lua_site_bag_4 类型值=182 类型名=背包4第一个格子的site. lua_site_warehouse 类型值=222 类型名=仓库第一个格子的site. lua_site_warehouse_adv 类型值=262 类型名=高级仓库第一个格子的site. lua_site_end 类型值=402 类型名=有效site的边界值.   --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:eTriggerType" value="lualib:eTriggerType($VAR1$)&#10;$END$" description="eTriggerType=&quot; 枚举类型:触发器类型定义 参数: 返回:无返回值. 备注: lua_trigger_system_start 类型值=1 类型名=系统启动时回调. lua_trigger_first_in_game 类型值=2 类型名=第一次进游戏时回调. lua_trigger_login 类型值=3 类型名=登陆游戏时回调. lua_trigger_logout 类型值=4 类型名=退出游戏时回调. lua_trigger_castle_war_start 类型值=5 类型名=攻城战开始时回调. lua_trigger_castle_war_end 类型值=6 类型名=攻城战结束时回调. lua_trigger_castle_war_init 类型值=7 类型名=类型值=7 类型名=申请攻城战成功时回调. lua_trigger_gp 类型值=8 类型名=类型值=8 类型名=检测到外挂时回调. lua_trigger_map_create 类型值=200 类型名=地图建创时回调. lua_trigger_map_destroy 类型值=201 类型名=地图销毁时回调. lua_trigger_enter_map 类型值=202 类型名=进入地图时回调. lua_trigger_leave_map 类型值=203 类型名=离开地图时回调. lua_trigger_item_appear 类型值=204 类型名=物品在地图上出现时回调. lua_trigger_item_disappear 类型值=205 类型名=物品在地图上消失时回调. lua_trigger_monster_appear 类型值=206 类型名=怪物在地图上出现时回调. lua_trigger_monster_disappear 类型值=207 类型名=怪物在地图上消失时回调. lua_trigger_npc_appear 类型值=208 类型名=NPC在地图上出现时回调. lua_trigger_npc_disappear 类型值=209 类型名=NPC在地图上消失时回调. lua_trigger_level_up 类型值=300 类型名=升级时回调. lua_trigger_pre_equip 类型值=301 类型名=穿装备之前回调. lua_trigger_post_equip 类型值=302 类型名=穿装备之后回调. lua_trigger_pre_un_equip 类型值=303 类型名=脱装备之前回调. lua_trigger_post_un_equip 类型值=304 类型名=脱装备之后回调. lua_trigger_move 类型值=305 类型名=移动时回调. lua_trigger_pre_spell 类型值=306 类型名=使用技能之前回调. lua_trigger_spell 类型值=307 类型名=使用技能之后回调. lua_trigger_pre_mining 类型值=308 类型名=挖矿之前回调. lua_trigger_mining 类型值=309 类型名=挖矿之后回调. lua_trigger_pre_item_apply 类型值=310 类型名=使用物品之前回调. lua_trigger_item_apply 类型值=311 类型名=使用物品之后回调. lua_trigger_pre_item_pickup 类型值=312 类型名=拾取物品之前回调. lua_trigger_item_pickup 类型值=313 类型名=拾取物品之后回调. lua_trigger_pre_item_drop 类型值=314 类型名=主动扔物品之前回调. lua_trigger_item_drop 类型值=315 类型名=主动扔物品之后回调. lua_trigger_pre_die 类型值=316 类型名=死亡之前回调. lua_trigger_post_die 类型值=317 类型名=死亡之后回调. lua_trigger_kill 类型值=318 类型名=杀死角色时回调. lua_trigger_attack 类型值=319 类型名=受攻击时回调. lua_trigger_damage_process 类型值=322 类型名=走伤害处理流程时回调. lua_trigger_restore_process 类型值=323 类型名=走恢复处理流程时回调. lua_trigger_teleport 类型值=324 类型名=瞬移时回调. lua_trigger_pre_catch 类型值=325 类型名=捉宝宝之前回调. lua_trigger_catch 类型值=326 类型名=捉宝宝之后回调. lua_trigger_pre_dig_meat 类型值=327 类型名=挖肉之前回调. lua_trigger_dig_meat 类型值=328 类型名=挖肉之后回调. lua_trigger_add_buff 类型值=329 类型名=添加BUFF时回调. lua_trigger_remove_buff 类型值=330 类型名=删除BUFF时回调. lua_trigger_pre_drop 类型值=331 类型名=要爆东西之前回调. lua_trigger_post_drop 类型值=332 类型名=要爆东西之后回调. lua_trigger_pre_drop_one 类型值=333 类型名=爆某个具体物品之前回调. lua_trigger_post_drop_one 类型值=334 类型名=爆某个具体物品之后回调. lua_trigger_add_skill 类型值=335 类型名=添加技能时回调. lua_trigger_switch_skill 类型值=336 类型名=开关技能时回调. lua_trigger_summon 类型值=337 类型名=召唤宝宝时回调. lua_trigger_pre_process_pk 类型值=338 类型名=处理PK值之前回调. lua_trigger_post_process_pk 类型值=339 类型名=处理PK值之后回调. lua_trigger_create 类型值=340 类型名=怪物、物品、NPC创建时回调. lua_trigger_destroy 类型值=341 类型名=怪物、物品、NPC销毁时回调. lua_trigger_pre_enter_jump 类型值=343 类型名=进入跳转点之前回调. lua_trigger_equip_suit 类型值=344 类型名=装备套装时回调. lua_trigger_un_equip_suit 类型值=345 类型名=脱掉套装时回调. lua_trigger_item_amount_zero 类型值=346 类型名=物品堆叠数为0时回调. lua_trigger_item_use_zero 类型值=347 类型名=物品使用次数为0时回调. lua_trigger_item_dur_zero 类型值=348 类型名=物品耐久为0时回调. lua_trigger_item_timeup 类型值=349 类型名=物品时效过期时回调. lua_trigger_add_exp 类型值=350 类型名=杀怪得到经验时回调. lua_trigger_monster_born 类型值=351 类型名=怪物出生时回调. lua_trigger_player_relive 类型值=352 类型名=玩家复活时回调. lua_trigger_dungeon_end 类型值=353 类型名=副本结束时回调. lua_trigger_timer_check 类型值=354 类型名=道具自检时回调. lua_trigger_add_exp_all 类型值=355 类型名=任何原因得到经验时回调. lua_trigger_player_pre_die 类型值=356 类型名=玩家死亡之前回调. lua_trigger_player_post_die 类型值=357 类型名=玩家死亡之后回调. lua_trigger_monster_pre_die 类型值=358 类型名=怪物死亡之前回调. lua_trigger_monster_post_die 类型值=359 类型名=怪物死亡之后回调. lua_trigger_attack_ex 类型值=360 类型名=受攻击时回调.on_attack加强版,多了扣血值与技能参数. lua_trigger_system_stop 类型值=361 类型名=系统停止时回调. lua_trigger_pre_logout 类型值=362 类型名=退出游戏之前回调. lua_trigger_ride_request 类型值=363 类型名=收到上马请求时回调. lua_trigger_unride_request 类型值=364 类型名=收到下马请求时回调. lua_trigger_billin 类型值=365 类型名=充值回调,只有玩家在线才会回调. lua_trigger_mall 类型值=366 类型名=商城消费之后回调. lua_trigger_pre_mall 类型值=367 类型名=商城消费之前回调. lua_trigger_escorter_fail 类型值=368 类型名=护送怪失败时回调. lua_trigger_escorter_far 类型值=369 类型名=护送怪过远时回调. lua_trigger_apply_buff 类型值=370 类型名=buff触发回调. lua_trigger_monster_in_fight 类型值=371 类型名=怪物进入战斗状态触发. lua_trigger_monster_out_fight 类型值=372 类型名=怪物退出战斗状态触发. lua_trigger_player_pre_curse 类型值=373 类型名=武器被诅咒前触发. lua_trigger_role_pre_harm 类型值=374 类型名=角色受到伤害时触发,返回提定伤害数值.   --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetItemGold" value="lualib:GetItemGold($VAR1$)&#10;$END$" description="GetItemGold=&quot;int32  GetItemGold(string  strItem) 取得金币类型物品的金币 参数:strItem 物品GUID., 返回:物品的金币数量,返败返回0. 参考:Map_GenGold,ModifyItemGold,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDummyDefaultSkillAI" value="lualib:SetDummyDefaultSkillAI($VAR1$)&#10;$END$" description="SetDummyDefaultSkillAI=&quot;bool  SetDummyDefaultSkillAI(int32  job,table  AI_table) 设置假人的默认技能AI 参数:job 职业 1、战士 2、法师 3、道士.,AI_table 欲设置的技能优先级., 返回:设置是否成功. 备注:详细的AI_table格式可以参考system/dummy_AI.lua脚本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDummySkillAI" value="lualib:SetDummySkillAI($VAR1$)&#10;$END$" description="SetDummySkillAI=&quot;bool  SetDummySkillAI(string  dummy,table  AI_table) 设置假人的技能AI 参数:dummy 假人或英雄的GUID.,AI_table 欲设置的技能优先级., 返回:设置是否成功. 备注:详细的AI_table格式可以参考system/dummy_AI.lua脚本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetZoneKey" value="lualib:GetZoneKey($VAR1$)&#10;$END$" description="GetZoneKey=&quot;string  GetZoneKey(void  ) 获取区密钥.  参数: , 返回:区密钥. 备注:无效接口  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetLog" value="lualib:SetLog($VAR1$)&#10;$END$" description="SetLog=&quot;bool  SetLog(int32  log_level,bool  is_open) 日志开关接口.  参数:log_level 日志级别 1、调试；2、信息；4、警告；8、错误.,is_open 是否打开., 返回:true = 成功, false = 失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_escorter_fail" value="lualib:on_escorter_fail($VAR1$)&#10;$END$" description="on_escorter_fail=&quot;void  on_escorter_fail(string  strMonster,string  strMaster) 押送类怪物死亡时回调.  参数:strMonster 怪物的GUID.,strMaster 怪物所属玩家的GUID,多GS情况下有可能找不到玩家实体., 返回:无返回值. 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_escorter_far" value="lualib:on_escorter_far($VAR1$)&#10;$END$" description="on_escorter_far=&quot;void  on_escorter_far(string  strMonster,string  strMaster) 押送类怪物离得过远时回调.  参数:strMonster 怪物的GUID.,strMaster 怪物所属玩家的GUID,多GS情况下有可能找不到玩家实体., 返回:无返回值. 备注:怪物与玩家一直处于过远状态时,该触发器每10秒只会触发一次. 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetCurScriptName" value="lualib:GetCurScriptName($VAR1$)&#10;$END$" description="GetCurScriptName=&quot;string  GetCurScriptName(void  ) 取得当前正在运行的脚本文件名.  参数: , 返回:文件名,没有扩展名. 警告:该接口不能在类似LoadString执行方式中调用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetSvrRunTime" value="lualib:GetSvrRunTime($VAR1$)&#10;$END$" description="GetSvrRunTime=&quot;uint32  GetSvrRunTime(void  ) 获取服务器运行时间.  参数: , 返回:运行的秒数.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDBMerge" value="lualib:SetDBMerge($VAR1$)&#10;$END$" description="SetDBMerge=&quot;bool  SetDBMerge(string  strDatabaseName,uint8  byType,string  strCallBack,string  strParam) 设置数据表合区类型 参数:strDatabaseName 数据库表必须以DATA_***的形式定义.,byType 变量全区类型, 0 = 忽略,合区时保留目标数据库数据 1 = 替换,合区时保留源数据库数据 2 = 取大,合区时取大的数据，只对整型 3 = 取小,合区时取小的数据,只对整形 4 = 相加,合区时结果相加,只对整形 5 = 相连,合区时结果相连,只对字符串 6 = 删除,合区时清除,strCallBack 回调函数名,有二种定义格式:1.文件名:函数名 2.函数名.,strParam 自定义参数,由脚本作者自行维护,方便上下文切换.回调时原封不动的传回来., 返回:返回投递是否成功.由于数据库事件是异步的,所以返回值只表示事件投递是否成功,而不是SQL执行是否成功. 备注:回调函数格式:  void OnDBEvtResult(bool bResult, unsigned int dwError, const char* strError, int iResultNum, const lua_script::lua_tableamp; tRecordSets, const char* strParam);  bResult:执行结果   dwError:错误码   strError:错误信息   iResultNum:没有结果集的语句影响的结果数   tRecordSets:有结果集的语句产生的结果集   strParam:自定义参数 警告:对性能还是有影响的,不要轻易使用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetScriptTimeout" value="lualib:SetScriptTimeout($VAR1$)&#10;$END$" description="SetScriptTimeout=&quot;void  SetScriptTimeout(uint32  dwTick) 设置当前正在运行的脚本死循环判断时间.  参数:dwTick , 返回:无返回值. 警告:该接口不能在类似LoadString执行方式中调用.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_SetNameColor" value="lualib:Player_SetNameColor($VAR1$)&#10;$END$" description="Player_SetNameColor=&quot;bool  Player_SetNameColor(string  strPlayer,string  strColor) 设置玩家名字的颜色.  参数:strPlayer 玩家的GUID.,strColor 颜色值., 返回:成功或失败. 备注:设置名字颜色后需在自定义变量表(rolevar_setting)中添加变量通知，变量名为 _tc_ ，是否通知周围选是。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:AddTitleEx" value="lualib:AddTitleEx($VAR1$)&#10;$END$" description="AddTitleEx=&quot;void  AddTitleEx(string  strPlayer,uint16  wTitleID,uint32  dwTimes) 给玩家添加称号,允许设置称号时间.  参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,dwTimes 称号的持继时间,单位为秒., 返回:无返回值. 备注:如持继时间设为0,则使用配置表时间.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetHeroRage" value="lualib:GetHeroRage($VAR1$)&#10;$END$" description="GetHeroRage=&quot;int32  GetHeroRage(string  hero) 获得英雄的怒气值 参数:hero 英雄的GUID., 返回:当前的怒气值. 如果英雄不存在返回-1 备注:无  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:MapOwnerFamily" value="lualib:MapOwnerFamily($VAR1$)&#10;$END$" description="MapOwnerFamily=&quot;string  MapOwnerFamily(string  strMap) 判断地图上的所有玩家是否属于同一个行会.  参数:strMap 地图GUID., 返回:如果地图上所有玩家不属于同一个行会返回'',反之返回行会名字. 警告:忽略地图上的GM角色与死亡角色.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Player_GetServantLevel" value="lualib:Player_GetServantLevel($VAR1$)&#10;$END$" description="Player_GetServantLevel=&quot;int32  Player_GetServantLevel(string  strServant) 获取玩家召唤宝宝的等级.  参数:strServant 宝宝的GUID., 返回:返回该宝宝的等级,出错返回0.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetHeroRage" value="lualib:SetHeroRage($VAR1$)&#10;$END$" description="SetHeroRage=&quot;bool  SetHeroRage(string  hero,int32  rage) 设置英雄的怒气值 参数:hero 英雄的GUID.,rage 怒气值., 返回:设置是否成功. 备注:无  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_monster_in_fight" value="lualib:on_monster_in_fight($VAR1$)&#10;$END$" description="on_monster_in_fight=&quot;void  on_monster_in_fight(string  strMonster) 怪物进入战斗状态时回调 参数:strMonster 怪物的GUID., 返回:无返回值. 备注:此回调为异步回调可通过设置过滤器指定某类怪物id的怪物进入战斗状态才回调.   lua_trigger_monster_in_fight 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_monster_out_fight" value="lualib:on_monster_out_fight($VAR1$)&#10;$END$" description="on_monster_out_fight=&quot;void  on_monster_out_fight(string  strMonster) 怪物退出战斗状态时回调 参数:strMonster 怪物的GUID., 返回:无返回值. 备注:此回调为异步回调可通过设置过滤器指定某类怪物id的怪物退出战斗状态才回调.   lua_trigger_monster_out_fight 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_post_monster_die" value="lualib:on_post_monster_die($VAR1$)&#10;$END$" description="on_post_monster_die=&quot;void  on_post_monster_die(string  strMonster,string  strKiller) 怪物死亡时回调.  参数:strMonster 怪物的GUID.,strKiller 杀手的GUID., 返回:无返回值. 备注:lua_trigger_monster_post_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_post_player_die" value="lualib:on_post_player_die($VAR1$)&#10;$END$" description="on_post_player_die=&quot;void  on_post_player_die(string  strPlayer,string  strKiller) 玩家死亡时回调.  参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID., 返回:无返回值. 备注:lua_trigger_player_post_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_monster_die" value="lualib:on_pre_monster_die($VAR1$)&#10;$END$" description="on_pre_monster_die=&quot;bool  on_pre_monster_die(string  strMonster,string  strKiller) 怪物死亡之前回调.  参数:strMonster 怪物的GUID.,strKiller 杀手的GUID., 返回:true = 允许怪物死亡, false = 阻止怪物死亡. 备注:lua_trigger_monster_pre_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_player_die" value="lualib:on_pre_player_die($VAR1$)&#10;$END$" description="on_pre_player_die=&quot;bool  on_pre_player_die(string  strPlayer,string  strKiller) 玩家死亡之前回调.  参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID., 返回:true = 允许玩家死亡, false = 阻止玩家死亡. 备注:lua_trigger_player_pre_die 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_player_relive" value="lualib:on_pre_player_relive($VAR1$)&#10;$END$" description="on_pre_player_relive=&quot;bool  on_pre_player_relive(string  strRole) 角色复活之前回调.  参数:strRole 角色的GUID., 返回:true = 允许角色复活, false = 阻止角色复活. 备注:lua_trigger_player_relive 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_IsExist" value="lualib:Item_IsExist($VAR1$)&#10;$END$" description="Item_IsExist=&quot;bool  Item_IsExist(string  strPlayer,string  strItem) 根据物品GUID判断该物品是否存在.  参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID., 返回:是或否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Item_MapRemove" value="lualib:Item_MapRemove($VAR1$)&#10;$END$" description="Item_MapRemove=&quot;bool  Item_MapRemove(string  strItem,string  strDesc,string  strTarget) 清理地图上的某个物品.  参数:strItem 物品的GUID.,strDesc 销毁原因.,strTarget 销毁动作的发起者., 返回:成功或失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Map_GetRegionDummys" value="lualib:Map_GetRegionDummys($VAR1$)&#10;$END$" description="Map_GetRegionDummys=&quot;table  Map_GetRegionDummys(string  strMap,table  tRange,bool  bIgnoreDied) 获取地图区域内的英雄列表.  参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.   tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色., 返回:区域内英雄列表,返回lua table.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDummyAIOption" value="lualib:SetDummyAIOption($VAR1$)&#10;$END$" description="SetDummyAIOption=&quot;bool  SetDummyAIOption(string  dummy,table  AI_table) 设置假人的AI配置 参数:dummy 假人或英雄的GUID.,AI_table AI各项配置，INT32数组表示., 返回:设置是否成功. 备注:可以参考system/dummy_AI.lua脚本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetDummyDefaultAIOption" value="lualib:SetDummyDefaultAIOption($VAR1$)&#10;$END$" description="SetDummyDefaultAIOption=&quot;bool  SetDummyDefaultAIOption(table  AI_table) 设置假人的AI配置 参数:AI_table AI各项配置，INT32数组表示., 返回:设置是否成功. 备注:可以参考system/dummy_AI.lua脚本  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Str2Zip" value="lualib:Str2Zip($VAR1$)&#10;$END$" description="Str2Zip=&quot;string  Str2Zip(string  strText) 将指定文本进行ZIP压缩,然后再BASE64编码.  参数:strText 文本串., 返回:ZIP压缩后BASE64编码串. 备注:一般可用于服务端与客户端或者网站等数据传输  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Zip2Str" value="lualib:Zip2Str($VAR1$)&#10;$END$" description="Zip2Str=&quot;string  Zip2Str(string  strZip) 将指定文本进行BASE64解码,然后再ZIP解压.  参数:strZip 编码串., 返回:文本串. 备注:一般可用于服务端与客户端或者网站等数据传输  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetHeroLord" value="lualib:GetHeroLord($VAR1$)&#10;$END$" description="GetHeroLord=&quot;string  GetHeroLord(string  hero) 获取英雄的主人guid 参数:hero 英雄的GUID., 返回:英雄的主人GUID. 备注:无  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_ClearHateList" value="lualib:Monster_ClearHateList($VAR1$)&#10;$END$" description="Monster_ClearHateList=&quot;bool  Monster_ClearHateList(string  strMonster) 清除怪物的仇恨列表.  参数:strMonster 怪物的GUID., 返回:true=成功,false=失败.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:Monster_SetHateList" value="lualib:Monster_SetHateList($VAR1$)&#10;$END$" description="Monster_SetHateList=&quot;bool  Monster_SetHateList(string  strMonster,table  tHateList) 设置怪物的仇恨列表.  参数:strMonster 怪物的GUID.,tHateList 怪物的仇恨列表. 如 tHateList = {{'GUID' = guid, 'Hate' = hate, 'Elapse' = elapse}, ....}, 返回:true=成功,false=失败. 备注:设置仇限列表会清除之前的仇恨列表。  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_curse" value="lualib:on_pre_curse($VAR1$)&#10;$END$" description="on_pre_curse=&quot;bool  on_pre_curse(string  strPlayer) 玩家的武器被诅咒前回调.  参数:strPlayer 玩家的GUID., 返回:true=允许武器被诅咒, false=阻止武器被诅咒. 备注:武器被诅咒是有概率的,所有并不是每次杀死目标都会触发.   lua_trigger_player_pre_curse 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_pre_harm" value="lualib:on_pre_harm($VAR1$)&#10;$END$" description="on_pre_harm=&quot;int  on_pre_harm(string  strRole,string  strAttacker,int  iHp,int  iDefense,string  strKillKey) 角色受到伤害即将损血前回调.  参数:strRole 受伤者的GUID,比如玩家、怪物、英雄.,strAttacker 攻击者的GUID,比如玩家、怪物、英雄.,iHp 即将损失的血量,该值必定是负数.,iDefense 本次攻击受伤者发挥出的防御值,该值必定是正数.,strKillKey 本次攻击所使用的技能KeyName., 返回:如果返回负数则损血,返回正数则补血.数值对应损/补的血量. 备注:lua_trigger_role_pre_harm 警告:注意返回正负数的区别. 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:GetGroupName" value="lualib:GetGroupName($VAR1$)&#10;$END$" description="GetGroupName=&quot;string  GetGroupName(void  ) 获取组Name.  参数: , 返回:组Name.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:HasZhenshi" value="lualib:HasZhenshi($VAR1$)&#10;$END$" description="HasZhenshi=&quot;bool  HasZhenshi(string  strPlayer) 判断玩家是否处于珍视状态.  参数:strPlayer 玩家的GUID., 返回:true = 是, false = 否.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:RoleRankTop" value="lualib:RoleRankTop($VAR1$)&#10;$END$" description="RoleRankTop=&quot;string  RoleRankTop(int  iType,int  iJob,int  iGender,int  iAttrName) 取得当前在线的、指定属性排名最高的那个角色的GUID.  参数:iType 角色的类型 0 = 玩家, 1 = 英雄, 其它 = 出错.,iJob 角色的职业 0 = 所有职业, 1 = 战士, 2 = 法师, 3 = 道士.,iGender 角色的性别 0 = 所有性别, 1 = 男, 2 = 女.,iAttrName 要排名的属性类型., 返回:角色的GUID,如果没有角色返回''. 参考:eRoleAttr,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:on_apply_buff" value="lualib:on_apply_buff($VAR1$)&#10;$END$" description="on_apply_buff=&quot;void  on_apply_buff(string  strRole,uint16  wBuffID) 角色触发BUFF效果时回调.  参数:strRole 角色的GUID.,wBuffID BUFF的ID., 返回:无返回值. 备注:lua_trigger_apply_buff 参考:eTriggerType,  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lualib:SetNetCheckEx" value="lualib:SetNetCheckEx($VAR1$)&#10;$END$" description="SetNetCheckEx=&quot;void  SetNetCheckEx(string  player_guid,bool  is_check,bool  is_drop) 客户端网络状态检查扩展 参数:player_guid 玩家guid.,is_check true表示开始检查 false表示结束检查.,is_drop true表示丢弃 false表示不丢弃., 返回:无返回值.  --&quot;" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="lb" value="lualib:$END$" description="lualib:" toReformat="false" toShortenFQNames="true">
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="outc" value="CL:ShowTypeMsg($VAR1$, tostring($VAR2$))&#10;$END$" description="CL:ShowTypeMsg(1, &quot;hello&quot;) 1-当前 3代表弹窗" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR2" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="outs" value="lualib:SysMsg_SendBroadcastMsg(tostring($VAR1$), $VAR2$)&#10;$END$" description="lualib:SysMsg_SendBroadcastMsg(string strMsg, string strName)" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR2" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="foreachlua" value="for $VAR1$, $VAR2$ in pairs($VAR3$) do&#10;    $END$&#10;end" description="for i,v in pairs do end" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR2" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR3" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="luaquickmethod" value="-- @Usage: $VAR1$&#10;-- @Time: $date$ $time$&#10;-- @Author: $VAR2$&#10;-- @Param: $VAR3$&#10;-- @Return: $VAR4$&#10;function $VAR5$($VAR6$)&#10;    $END$&#10;end" description="lua method with Comments" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="date" expression="date()" defaultValue="" alwaysStopAt="true" />
        <variable name="time" expression="time()" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR2" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR3" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR4" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR5" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR6" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
    <template name="luaquickcomment" value="-- @Usage: $VAR1$&#10;-- @Time: $date$ $time$&#10;-- @Author: $VAR2$&#10;-- @Param: $VAR3$&#10;-- @Return: $VAR4$$END$" description="new comment" toReformat="false" toShortenFQNames="true">
        <variable name="VAR1" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="date" expression="date()" defaultValue="" alwaysStopAt="true" />
        <variable name="time" expression="time()" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR2" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR3" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="VAR4" expression="" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="LUA_CODE" value="true" />
        </context>
    </template>
</templateSet>